DSA09015 - KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ CÓ HƯỚNG
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
using namespace std;
vector<int> k[1005];
bool chuaxet[1005];
int truoc[1005];
void dfs(int d, int& kt) {
	stack<int>st;
	st.push(d);
	chuaxet[d] = false;
	while (!st.empty()) {
		int s = st.top(); st.pop();
		for (auto t: k[s]) {
			if (chuaxet[t] == true) {
				st.push(s);
				st.push(t);
				chuaxet[t] = false;
				break;
			}
			else if (t == d)kt = 1;
		}
	}
}
bool ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		dfs(i, kt);
		if (kt == 1)
			return true;
	}
	return false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v, e; cin >> v >> e;
		int kt = 0;
		for (int i = 0; i < 1005; i++)k[i].clear();
		for (int i = 1; i <= e; i++) {
			int a, b; cin >> a >> b;
			k[a].push_back(b);
		}
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		if (ktra(v) == true) {
			cout << "YES" << endl;
		}
		else cout << "NO" << endl;
	}
}
DSA05045 - BÀI TOÁN CÁI TÚI KHÔNG NGUYÊN.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


struct X {
	int value, weight;
	float x;
};

bool cmp(X a, X b) {
	return a.x > b.x;
}

int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		v(X) M(n);
		FORD(i, 0, n)cin >> M[i].weight >> M[i].value, M[i].x = (float)M[i].weight / M[i].value;
		sort(all(M), cmp);
		int sum_value = 0;
		float sum_weight = 0;
		int c = 0;
		FORD(i, 0, n) {
			if (sum_value <= k) {
				sum_value += M[i].value;
				sum_weight += M[i].weight;
				c = i;
			}
		}
		if (sum_value > k)sum_weight -= (float)(sum_value - k) * M[c].x;
		cout << setprecision(2) << fixed << sum_weight << endl;
	}
}
DSA10017 - CHU TRÌNH ÂM.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int n, m;
v(int) A[1001];
bool check[1001];
int W[1001][1001];
bool ok;
bool BFS(int u) {
	check[u] = true;
	queue<p(int)> Q;
	Q.push({ u,0 });
	while (Q.size()) {
		p(int) tmp = Q.front(); Q.pop();
		for (auto x: A[tmp.first]) {
			if (!check[x]) {
				Q.push({ tmp });
				Q.push({ x,tmp.second + W[tmp.first][x] });
				check[x] = true;
				break;
			}
			else if (x == u && tmp.second + W[tmp.first][x] < 0)return true;
		}
	}
	return false;
}

bool ktra() {
	FOR(i, 1, n + 1) {
		rs(check, false);
		if (BFS(i))return true;
	}
	return false;
}

int main() {
	faster();
	run() {
		reset();
		ok = false;
		cin >> n >> m;
		FOR(i, 0, m) {
			int u, v, w; cin >> u >> v >> w;
			A[u].pb(v);
			W[u][v] = w;
		}
		cout << ktra() << endl;
	}
}


//_______________________T_O_A_N________________________//
DSA06045 - XÂU TỐT
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=l;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//

int main() {
	int n;
	string s;
	cin >> n >> s;
	ll res = 0, tmp = 1;
	FORD(i, 1, n)
		if (s[i] == s[i - 1])tmp++, res += i - (tmp<=i);
		else res += i - tmp, tmp = 1;
	cout << res << endl;
	return 0;
}
DSA05023 - TỔNG CÁC XÂU CON
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		long long res = 0;
		for (int i = 0; i < s.length(); i++) {
			res += s[i] - '0';
			for (int j = i + 1; j < s.length(); j++) {
				string f = "";
				for (int l = i; l <= j; l++) {
					f += s[l];
				}
				res += stoll(f);
			}
		}
		cout << res << endl;
	}
}
DSA03016 - SỐ NHỎ NHẤT
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int s, d; cin >> s >> d;
		if (d * 9 < s)cout << -1 << endl;
		else {
			int M[1000000] = { 0 };
			s--;
			for (int i = d - 1; i >= 0; i--) {
				if (s >= 9) {
					M[i] = 9;
					s -= 9;
				}
				else {
					if (i == 0)M[i] = s + 1;
					else M[i] = s;
					s = 0;
				}
			}
			for (int i = 0; i < d; i++)cout << M[i];
			cout << endl;
		}
	}
}
DSA01013 - MÃ GRAY 2.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

v(string) M, N;

void Sort(int k, int l1, int r1, int l2, int r2) {
	if (k == 0)return;
	sort(M.begin() + l1, M.begin() + r1);
	sort(M.begin() + l2, M.begin() + r2, greater<string>());
	Sort(k - 1, l1, (l1 + r1) / 2, (l1 + r1) / 2, r1);
	Sort(k - 1, l2, (l2 + r2) / 2, (l2 + r2) / 2, r2);
}

int main() {
	faster();
	run() {
		M.clear();
		N.clear();
		string x; cin >> x;
		int n = sz(x);
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string();
			M.pb(s.substr(20 - n, n));
			N.pb(s.substr(20 - n, n));
		}
		int sf = pow(2, n);
		Sort(n, 0,  sf / 2, sf / 2, sf);
		FOR(i, 0, sz(M)) {
			if (M[i] == x) {
				cout << N[i] << endl;
				break;
			}
		}
	}
}

//__________________________B20DCPT173_____________________________//
DSA07041 - BIỂU THỨC ĐÚNG DÀI NHẤT.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		int count = 0;
		while (true) {
			int pos = s.find("()");
			if (pos == -1)break;
			else {
				count += 2;
				s.erase(pos, 2);
			}
		}
		cout << count << endl;
	}
	return 0;
}
DSA02036 - DÃY CON CÓ TỔNG LẺ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n); cin(M, n);
		sort(all(M), greater<int>());
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string().substr(20 - n, n);
			int sum = 0;
			v(int) A;
			FOR(i, 0, n)if (s[i] == '1')sum += M[i], A.pb(M[i]);
			if (sum % 2 == 1) {
				cout(A, sz(A));
				cout << endl;
			}
		}
	}
}

//__________________________B20DCPT173__________________________//
DSA04009 - LŨY THỪA MA TRẬN 1
#include<iostream>
#include<vector>
#include<string.h>
#include<queue>
#include<set>
using namespace std;
#define mod 10e9+7
#define ll long long
int m, n;
struct matran {
	long long f[10][10];
};
matran operator*(matran A, matran B) {
	matran C;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			C.f[i][j] = 0;
			for (int k = 0; k < n; k++) {
				C.f[i][j] += A.f[i][k] % 1000000007 * B.f[k][j] % 1000000007;
				C.f[i][j] %= 1000000007;
			}
		}
	}
	return C;
}
matran powMod(matran A, int k) {
	if (k == 1)return A;
	matran X = powMod(A, k / 2);
	if (k % 2 == 0)return X * X;
	return X * X * A;
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n >> m;
		matran A;
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++)cin >> A.f[i][j];
		}
		matran B = powMod(A, m);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++)
				cout << B.f[i][j] << " ";
			cout << endl;
		}
	}
}
DSA09011 - SỐ LƯỢNG HÒN ĐẢO
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
int M[500][500];
int m, n;
bool check[500][500];
int X[8] = { -1,0,1,0,-1,1,1,-1 };
int Y[8] = { 0,1,0,-1,1,1,-1,-1 };
void DFS(int a,int b) {
	check[a][b] = true;
	for (int i = 0; i < 8; i++) {
		int x = a + X[i];
		int y = b + Y[i];
		if (x >= 0 && x < m && y >= 0 && y < n && !check[x][y] && M[x][y] == 1)DFS(x, y);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		cin >> m >> n;
		for (int i = 0; i < m; i++)for (int j = 0; j < n; j++)cin >> M[i][j];
		int count = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (M[i][j] == 1 && !check[i][j]) {
					count++;
					DFS(i, j);
				}
			}
		}
		cout << count << endl;
	}
}
DSA09004 - DFS TRÊN ĐỒ THỊ VÔ HƯỚNG
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
int n, m, u;
bool check[1001];
vector<int> A[1001];
void DFS(int u) {
	cout << u << " ";
	check[u] = true;
	for (int v : A[u]) {
		if (!check[v])
			DFS(v);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n >> m >> u;
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		DFS(u);
		cout << endl;

	}
}
DSA04005 - DÃY XÂU FIBONACI
#include<iostream>
#include<string>
using namespace std;
long long M[93];
char fb(long long int n, long long int k) {
	if (n == 1)return 'A';
	if (n == 2)return 'B';
	if (k <= M[n - 2])return fb(n - 2, k);
	return fb(n - 1, k - M[n - 2]);
}
int main() {
	int t; cin >> t;
	M[1] = 1; M[2] = 1;
	for (int i = 3; i < 93; i++) {
		M[i] = M[i - 1] + M[i - 2];
	}
	while (t--) {
		long long int n, k; cin >> n >> k;
		cout << fb(n, k) << endl;

	}
}
DSA06029 - SẮP XẾP CHÈN - LIỆT KÊ NGƯỢC
#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	int M[1000];
	vector<vector<int>> N;
	for (int i = 0; i < n; i++)cin >> M[i];
	for (int i = 1; i <= n; i++) {
		sort(M, M + i);
		vector<int> X;
		for (int l = 0; l < i; l++)X.push_back(M[l]);
		N.push_back(X);
	}
	for (int i = N.size() - 1; i >= 0; i--) {
		cout << "Buoc " << i << ": ";
		for (int j = 0; j < N[i].size(); j++)
			cout << N[i][j] << " ";
		cout << endl;
	}
}
DSA11027 - ĐẾM SỐ NODE LÁ CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
	using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree& T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Build(tree&T,v(int) M, int left, int right) {
	if (left >= right)return;
	int mid = (left + right) / 2;
	Add(T, M[mid]);
	Build(T,M, mid + 1, right);
	Build(T,M, left, mid);

}
int res = 0;
void Load(tree T) {
	if (!T->pLeft && !T->pRight)res++;
	if (T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n); cin(M, n);
		sort(all(M), greater<>());
		tree T = NULL;
		Build(T,M, 0, n);
		res = 0;
		Load(T);
		cout << res << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
CTDL_002 - Tổng dãy con = K.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

bool check(string s, int n, v(int) M, int k) {
	int sum = 0;
	FOR(i, 0, n)if (s[i] == '1')sum += M[i];
	if (sum == k)return true;
	return false;
}

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(int) M(n); cin(M, n);
	int count = 0;
	FOR(i, 0, pow(2, n)) {
		auto s = bitset<20>(i).to_string();
		s = s.substr(20 - n, n);
		if (check(s, n, M, k)) {
			FOR(i, 0, n)if (s[i] == '1')cout << M[i] << " ";
			cout << endl;
			count++;
		}
	}
	cout << count << endl;
}
//_________________________B20DCPT173__________________________//
DSA06019 - SẮP XẾP THEO SỐ LẦN XUẤT HIỆN
#include<iostream>
#include<algorithm>
using namespace std;
struct xxx {
	int a, c;
};
bool cmp(xxx A, xxx B) {
	if (A.c > B.c)return true;
	if (A.c == B.c && A.a < B.a)return true;
	return false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		xxx M[10000];
		for (int i = 0; i < n; i++) {
			cin >> M[i].a;
			M[i].c = 0;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				if (M[i].a == M[j].a)M[i].c++;
			}
		}
		sort(M, M + n, cmp);
		for (int i = 0; i < n; i++)cout << M[i].a << " ";
		cout << endl;
	}
}
DSA05016 - SỐ UGLY
#include<iostream>
#include<cstring>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int dem = 0;
		int a = 0, b = 0, c = 0;
		int dp[10000];
		dp[0] = 1;
		for (int i = 1; i < n; i++) {
			dp[i] = min(dp[a] * 2, min(dp[b] * 3, dp[c] * 5));
			if (dp[i] == dp[a] * 2)a++;
			if (dp[i] == dp[b] * 3)b++;
			if (dp[i] == dp[c] * 5)c++;
		}
		cout << dp[n - 1] << endl;
	}
}
DSAKT110 - NHÀ KHÔNG KỀ NHAU.cpp
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#define mod 1000000007
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000000];
		for (int i = 0; i < n; i++)cin >> M[i];
		ll res = 0;
		ll dp[1000000];
		dp[0] = M[0]; dp[1] = max(M[1],M[0]);
		for (int i = 2; i < n; i++) {
			dp[i] = max(dp[i - 1], M[i] + dp[i - 2]);
			res = max(res, dp[i]);
		}
		cout << res << endl;
	}
}
DSA10007 - CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN BFS
#include<iostream>
#include<vector>
#include<cstring>
#include<queue>
using namespace std;
vector<int> A[1001];
bool check[1001];
vector<pair<int, int>> X;
void reset() {
	for (int i = 0; i < 1001; i++)A[i].clear();
	memset(check, false, sizeof(check));
	X.clear();
}
void BFS(int u) {
	check[u] = true;
	queue<int> B;
	B.push(u);
	while (B.size()) {
		int a = B.front();
		B.pop();
		for (int x : A[a]) {
			if (!check[x]) {
				X.push_back({ a, x });
				B.push(x);
				check[x] = true;
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		reset();
		int n, m, k;
		cin >> n >> m >> k;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		BFS(k);
		if (X.size() == n - 1) {
			for (int i = 0; i < X.size(); i++) {
				cout << X[i].first << " " << X[i].second << endl;
			}

		}
		else cout << -1 << endl;
	}
}
DSA03006 - SẮP XẾP THAM LAM
#include<iostream>
#include<string>
#include <algorithm>
using namespace std;
string Ktra(int M[],int N[],int n) {
	for (int i = 0; i < n; i++)
		if (M[i] != N[i] && M[i] != N[n - i - 1])return "No\n";
	return "Yes\n";
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100],N[100];
		for (int i = 0; i < n; i++) {
			cin >> M[i]; N[i] = M[i];
		}
		sort(M, M + n);
		cout << Ktra(N, M, n);
	}
}
DSA03008 - SẮP XẾP CÔNG VIỆC 1
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<pair<int, int>> M(n);
		vector<int> dp(n, 1);
		for (int i = 0; i < n; i++)cin >> M[i].first;
		for (int i = 0; i < n; i++)cin >> M[i].second;
		for (int i = 0; i < n; i++) {
			for (int j = i + 1; j < n; j++) {
				if (M[i].second > M[j].second)swap(M[i], M[j]);
			}
		}
		int res = 1;
		for (int i = 0; i < n; i++) {
			int maxx = 0;
			for (int j = 0; j < i; j++) {
				if (M[i].first >= M[j].second)maxx = max(maxx, dp[j]);
			}
			dp[i] += maxx;
			res = max(res, dp[i]);
		}
		cout << res << endl;
	}
}
DSA05035 - CHỮ SỐ SẮP XẾP TĂNG DẦN.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=l;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


ll to_Hop(int n, int k) {
	ll dp[110][110];
	FORD(i, 0, n + 1) {
		FORD(j, 0, k + 1) {
			if (i == j || j == 0)dp[i][j] = 1;
			else dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];
			dp[i][j] %= mod;
		}
	}
	return dp[n][k];
}

int main() {
	int t; cin >> t;
	ll dp[101];
	dp[1] = 10;
	FORD(i, 2, 101)dp[i] = dp[i - 1] % mod + to_Hop(8 + i, i) % mod, dp[i] %= mod;
	while (t--) {
		int n; cin >> n;
		cout << dp[n] << endl;
	}
	return 0;
}
DSA06043 - ĐIỂM CÂN BẰNG
#include<iostream>
#include<string>
using namespace std;
typedef long long ll;
int cb(int sum, int n, int M[]) {
	int xum = 0;
	for (int i = 0; i < n; i++) {
		xum += M[i];
		if (xum == sum - xum + M[i])return i+1;
	}
	return -1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		int sum = 0;
		for (int i = 0; i < n; i++) {
			cin >> M[i];
			sum += M[i];
		}
		cout << cb(sum, n, M) << endl;
	}
}
DSA04035 - TÍNH LŨY THỪA
#include<iostream>
using namespace std;
typedef long long ll;
#define mod 1000000007

int main() {
	while (1) {
		ll a, b; cin >> a >> b;
		if (a == 0 && b == 0)break;
		if (b == 0)a = 1;
		ll y = 1;
		while (1) {
			if (b == 1 || b == 0)break;
			if (b % 2 == 0) {
				a = (a % mod * a % mod) % mod;
				b /= 2;
			}
			else {
				y = (y % mod * a % mod) % mod;
				b -= 1;
			}
		}
		cout << (a % mod * y % mod) % mod << endl;
	}
}
DSA05020 - ĐƯỜNG ĐI NHỎ NHẤT
#include<iostream>
#include <cstring>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int M[1001][1001];
		for (int i = 0; i < m; i++)
			for (int j = 0; j < n; j++)cin >> M[i][j];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (i == 0 && j > 0)M[i][j] += M[i][j - 1];
				if (i > 0 && j == 0)M[i][j] += M[i - 1][j];
				if (i > 0 && j > 0)M[i][j] += min(M[i][j - 1], min(M[i - 1][j],M[i - 1][j - 1]));
			}
		}
		cout << M[m - 1][n - 1] << endl;
	}
}
DSA04021 - DÃY XÂU NHỊ PHÂN
#include<iostream>
#include<string>
using namespace std;
long long M[93];
char fb(long long int n, long long int k) {
	if (n == 1)return '0';
	if (n == 2)return '1';
	if (k <= M[n - 2])return fb(n - 2, k);
	return fb(n - 1, k - M[n - 2]);
}
int main() {
	int t; cin >> t;
	M[1] = 1; M[2] = 1;
	for (int i = 3; i < 93; i++) {
		M[i] = M[i - 1] + M[i - 2];
	}
	while (t--) {
		long long int n, k; cin >> n >> k;
		cout << fb(n, k) << endl;
	}
}
DSA08012 - TÌM SỐ K THỎA MÃN ĐIỀU KIỆN
#include<iostream>
#include<string>
using namespace std;
int test1(string s) {
	int M[100] = { 0 };
	for (int i = 0; i < s.length(); i++) {
		if (s[i] - 48 > 5)return 0;
		M[s[i]]++;
	}
	for (int i = 0; i < 100; i++)
		if (M[i] > 1)return 0;
	return 1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int count = 0;
		for (int i = m; i <= n; i++) {
			if (test1(to_string(i)))
				count++;
		}
		cout << count << endl;
	}
}
DSA03022 - TÍCH LỚN NHẤT
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
typedef long long int ll;
int main() {
	
	int n; cin >> n;
	int M[100000];
	for (int i = 0; i < n; i++)cin >> M[i];
	sort(M, M + n,greater<>());
	int a = M[n - 1] * M[n - 2];
	int b = M[0] * M[1];
	int c = b * M[2];
	int d = M[0] * a;
	cout << max(a, max(b, max(c, d))) << endl;
	
}
DSA06032 - BỘ BA SỐ CÓ TỔNG NHỎ HƠN K
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		ll M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		ll res = 0;
		for (int i = 0; i < n - 2; i++)
			for (int j = i + 1; j < n - 1; j++)
				res += lower_bound(M + j + 1, M + n, k - M[i] - M[j])-M-j-1;
		cout << res << endl;
	}
}
DSA04011 - TÍCH HAI SỐ NHỊ PHÂN
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
typedef long long ll;
ll coso(string s) {
    ll x=0;
    for (auto z: s) {
        x = x * 2 + (z - '0');
    }
    return x;
}
int main()
{
    int t; cin >> t;
    while (t--) {
        string a, b;
        cin >> a >> b;
        cout << (ll)(coso(a)*coso(b)) << endl;
    }
}
DSA08006 - SỐ 0 VÀ SỐ 9
#include<iostream>
#include<queue>
#include<string>
using namespace std;
string load(int n) {
	queue<string> S;
	S.push("9");
	while (S.size()) {
		string s = S.front();
		S.pop();
		if (stoll(s) % n == 0)return s;
		S.push(s + "0");
		S.push(s + "9");
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		cout << load(n) << endl;
	}
}
DSA04010 - DÃY CON LIÊN TIẾP CÓ TỔNG LỚN NHẤT
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		long long res = 0;
		long long sum = 0;
		for (int i = 0; i < n; i++) {
			sum += M[i];
			if (sum <= 0)sum = 0;
			res = max(res, sum);
		}
		cout << res << endl;
	}
}
DSA07028 - NHỊP CHỨNG KHOÁN
#include<iostream>
#include<algorithm>
#include<set>
#include<vector>
#include<sstream>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<int> M(n), N(n, 1);
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 1; i < n; i++) {
			N[i] = 1;
			for (int j = i - 1; j >= 0;) {
				if (M[j] <= M[i]) {
					N[i] += N[j];
					j -= N[j];
				}
				else break;
			}
		}
		for (auto x : N)cout << x << " ";
		cout << endl;
	}
}
DSA09002 - CHUYỂN TỪ DANH SÁCH KỀ SANG DANH SÁCH CẠNH
#include<iostream>
#include<algorithm>
#include<string.h>
#include<sstream>
using namespace std;

int main() {

	int n; cin >> n;
	cin.ignore();
	int M[1001][1001];
	memset(M, 0, sizeof(M));
	for (int i = 1; i <= n; i++) {
		string s; getline(cin, s);
		string a;
		stringstream x(s);
		while (x >> a) {
			M[i][stoi(a)] = 1;
			M[stoi(a)][i] = 1;
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (M[i][j] == 1) {
				cout << i << " " << j << endl;
				M[j][i] = 0;
			}
		}
		
	}

}
DSA03025 - TRỤC TỌA ĐỘ
#include<iostream>
#include<algorithm>
#include<vector>
#include<stdbool.h>
using namespace std;
bool cmp(pair<int, int> A, pair<int, int> B) {
	return A.second < B.second;
}

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<pair<int, int>> M(n);
		for (int i = 0; i < n; i++)cin >> M[i].first >> M[i].second;
		sort(M.begin(), M.end(), cmp);
		vector<int> N(n, 1);
		int res = 1;
		int x = 0;
		for (int i = 1; i < n; i++) {
			if (M[i].first >= M[x].second) {
				res++;
				x = i;
			}
		}
		cout << res << endl;
	}
}
DSA11015 - TỔNG LỚN NHẤT.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int res;


struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree& T, int u, int v, char c) {
	if (!T) {
		T = new node(u);
		tree p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			tree p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft)Add(T->pLeft, u, v, c);
			if (T->pRight)Add(T->pRight, u, v, c);
		}
	}
}

int Load(tree T) {
	if (!T)return 0;
	int sumLeft = Load(T->pLeft);
	int sumRight = Load(T->pRight);
	if (!T->pLeft && !T->pRight)return T->data;
	if (!T->pLeft)return sumRight + T->data;
	if (!T->pRight)return sumLeft + T->data;
	if (T->pLeft && T->pRight) {
		res = max(res, sumLeft + sumRight + T->data);
		return max(sumLeft, sumRight) + T->data;
	}
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		while (n--) {
			int u, v;
			char c;
			cin >> u >> v >> c;
			Add(T, u, v, c);
		}
		res = INT_MIN;
		Load(T);
		cout << res << endl;
	}
}



//_______________________T_O_A_N________________________//
DSAKT060 - TRUY VẤN ĐỐI XỨNG.cpp
#include<iostream>
#include<string>
#include<algorithm>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//



int main() {
	faster();
	
	string s; cin >> s;
	int q; cin >> q;
	while (q--) {
		char c; cin >> c;
		if (c == 'q') {
			int l, r; cin >> l >> r;
			string tmp = s;
			reverse(tmp.begin() + l - 1, tmp.begin() + r);
			if (tmp == s)cout << "YES\n";
			else cout << "NO\n";
		}
		else {
			int u; cin >> u;
			char x; cin >> x;
			s[u - 1] = x;
		}
	}
	
}


//_______________________T_O_A_N________________________//
DSA02016 - SẮP XẾP QUÂN HẬU 1
#include<iostream>
using namespace std;
int n;
int M[100], N[100], P[100];
int res = 0;
void Try(int i) {
	if (i == n+1) {
		res++;
		return;
	}
	for (int j = 1; j <= n; j++) {
		if (M[j] ==0&& N[j+i] ==0&& P[i-j+n] == 0) {
			M[j] = N[j+i] = P[i-j+n] = 1;
			Try(i + 1);
			M[j] = N[j+i] = P[i-j+n] = 0;
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n;
		res = 0;
		Try(1);
		cout << res << endl;
	}
}
DSA06010 - SẮP XẾP CHỮ SỐ
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<int> m(n);
		int M[10] = { 0 };
		for (int i = 0; i < n; i++) {
			string s; cin >> s;
			for (int i = 0; i < s.length(); i++)
				M[s[i] - '0']++;
		}
		for (int i = 0; i < 10; i++)
			if (M[i])cout << i << " ";
		cout << endl;
	}
}
DSA07005 - BIỂU THỨC TƯƠNG ĐƯƠNG
#include<iostream>
#include<string>
#include<stack>
using namespace std;
string test(string s) {
	stack<char> str;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == ')') {
			string temp;
			while (str.size() && str.top() != '(') {
				temp = str.top() + temp;
				str.pop();
			}
			str.pop();
			char t;
			if (str.size())
				t = str.top();
			for (int j = 0; j < temp.length(); j++) {
				if (t == '-' && str.size()) {
					if (temp[j] == '-')
						str.push('+');
					else if (temp[j] == '+')
						str.push('-');
					else
						str.push(temp[j]);
				}
				else {
					str.push(temp[j]);
				}
			}
		}
		else
			str.push(s[i]);
	}
	string res;
	while (str.size()) {
		res = str.top() + res;
		str.pop();
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << test(s) << endl;
	}
}
DSA09049 - LAN TRUYỀN DINH DƯỠNG.cpp
#include<iostream>
#include<math.h>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
	using namespace std;

//_______________________T_O_A_N________________________//

int n;
v(int) A[200001];
v(ll) M(200001, 0);
v(ll) S(200001, 0);
ll DFS(int u) {
	ll res = 1;
	for (auto x : A[u]) {
		res += DFS(x);
	}
	M[u] = res;
	return res;
}

ll DFS2(int u) {
	ll res = 1;
	for (auto x : A[u]) {
		res += DFS2(x) + 1 + M[x] - 1;
	}
	S[u] = res;
	return res;
}
int main() {
	faster();
	cin >> n;
	FOR(i, 2, n + 1) {
		int u; cin >> u;
		A[u].push_back(i);
	}
	DFS(1);
	DFS2(1);
	FOR(i, 1, n + 1)cout <<S[i] << " ";
	cout << endl;
}

//_______________________T_O_A_N________________________//
DSA02015 - LOẠI BỎ DẤU NGOẶC.cpp
#include<iostream>
#include<unordered_set>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
vector<string> res;
bool ktra(string s) {
	int x = 0, y = 0;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == '(') {
			x++;
			y++;
		}
		if (s[i] == ')')x--;
		if (x < 0)return false;
	}
	if (y == 0&&s.length()==1)return false;
	return x == 0;
}
void BFS(string s) {
	if (!s.length())return;
	unordered_set<string> A;
	queue<string> B;
	A.insert(s);
	B.push(s);
	bool ok = false;
	while (B.size()) {
		string s = B.front();
		B.pop();
		if (ktra(s)&&s!="") {
			res.push_back(s);
			ok = true;
		}
		if (ok)continue;
		for (int i = 0; i < s.length(); i++) {
			if (s[i] == '(' || s[i] == ')') {
				string a = s.substr(0, i) + s.substr(i + 1, s.length());
				if (A.find(a) == A.end()) {
					A.insert(a);
					B.push(a);
				}
			}

		}

	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		res.clear();
		string s; cin >> s;
		BFS(s);
		if (res.size() == 0)cout << -1;
		else {
			sort(res.begin(), res.end());
			for (auto s : res)cout << s << " ";
		}
		cout << endl;
	}
}
CTDL_001 - THUẬT TOÁN SINH.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size()
#define f 				 first
#define s 				 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	int n; cin >> n;
	FOR(i, 0, pow(2, n)) {
		auto s = bitset<20>(i).to_string();
		string tmp = s = s.substr(20 - n, n);
		reverse(all(tmp));
		if (s == tmp) {
			cout(s, n);
			cout << endl;
		}
	}
}

//_________________________B20DCPT173__________________________//
DSA06022 - SỐ NHỎ NHẤT VÀ NHỎ THỨ HAI
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n,greater<>());
		if (M[n - 1] == M[0])cout << -1 << endl;
		else {
			cout << M[n - 1] << " ";
			for (int i = n - 2; i >= 0; i--) {
				if (M[i] != M[n - 1]) {
					cout << M[i] << endl;
					break;
				}
			}
		}
	}
}
DSA09028 - TÔ MÀU ĐỒ THỊ.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll			 long long
#define	p(x)		 pair<x,x> 
#define v(x)		 vector<x>
#define FORD(i,l,r)  for(int i=l;i<r;i++)
#define FORE(i,l,r)  for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M,n)	 FORD(i,0,n)cin>>M[i]
#define cout(M,n)	 FORD(i,0,n)cout<<M[i]
#define rs(M,x)		 memset(M,x,sizeof(M))
#define reset()		 FORD(i, 0, 1001)A[i].clear(),check[i]=false
#define run()		 int t; cin >> t; while (t--)
#define pq(x )		 priority_queue<x>
#define neg_pq(x)	 priority_queue<x, vector<x>, greater<x>>
#define all(M)		 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m, v;
bool check[1001];
int M[1001];
v(int) A[1001];

string BFS() {
	int maxx = 1;
	FORD(i, 1, n + 1)M[i] = 1;
	FORD(i, 1, n + 1) {
		if (!check[i]) {
			check[i] = true;
			queue<int> Q;
			Q.push(i);
			while (Q.size()) {
				int tmp = Q.front(); Q.pop();
				for (auto x : A[tmp]) {
					if (M[x] == M[tmp])M[x]++;
					maxx = max(maxx, max(M[x], M[tmp]));
					if (maxx > v)return "NO\n";
					if (!check[x])Q.push(x), check[x] = true;
				}
			}
		}
	}
	return "YES\n";
}


int main() {
	run() {
		reset();
		cin >> n >> m >> v;
		FORD(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a - 1].push_back(b - 1);
			A[b - 1].push_back(a - 1);
		}
		cout << BFS();
	}
	
}


//_______________________T_O_A_N________________________//
DSA08018 - SỐ LỘC PHÁT 2
#include<iostream>
#include<string>
#include<sstream>
#include<queue>
#include<vector>
using namespace std;
typedef long long int ll;
vector<string> res;

int main() {
	int t; cin >> t;
	while (t--) {
		res.clear();
		int n; cin >> n;
		queue<string> S;
		S.push("6");
		S.push("8");
		int l = 0;
		while (l<=n) {
			string s = S.front();
			S.pop();
			res.push_back(s);
			S.push(s + "6");
			S.push(s + "8");
			l = S.front().length();
		}
		cout << res.size() << endl;
		for (auto s:res)cout << s << " ";
		cout << endl;
	}
}
DSA06048 - SỐ LẦN QUAY VÒNG
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
typedef pair<int, int> p;
int quay(vector<ll> M, int n) {
	for (int i = 0; i < n - 1; i++) {
		if (M[i] > M[i + 1]) {
			return i + 1;
		}
	}
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<ll> M(n);
		for (int i = 0; i < n; i++)cin >> M[i];
		cout << quay(M, n) << endl;
	}
}
DSA06036 - BỘ BA SỐ BẰNG K
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
string ktra(ll* M, int n, int k) {
	for (int i = 0; i < n - 2; i++)
		for (int j = i + 1; j < n - 1; j++)
			if (lower_bound(M + j + 1, M + n, k - M[i] - M[j]) - M != upper_bound(M + j + 1, M + n, k - M[i] - M[j]) - M)
				return "YES\n";
	return "NO\n";
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		ll M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		cout << ktra(M, n, k);
	}
}
DSA02025- KÝ TỰ LẶP
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
#include<queue>
using namespace std;
typedef pair<int, int> p;
typedef long long ll;
int n, res = 100000000;
string M[100];
int  N[100];
bool check[100];
int count(string a, string b) {
	int cnt = 0;
	for (auto x : a)
		for (auto y : b)
			if (x == y)cnt++;
	return cnt;
}
void Try(int i, int sum) {
	for (int j = 1; j <= n; j++) {
		if (!check[j]) {
			check[j] = true;
			N[i] = j;
			if (i == n) {
				res = min(res, sum + count(M[N[i - 1]], M[j]));
			}
			else if (res > sum && i < n)Try(i + 1, sum + count(M[N[i - 1]], M[j]));
			check[j] = false;
		}
	}
}
int main() {
	cin >> n;
	for (int i = 1; i <= n; i++)cin >> M[i];
	check[0] = true;
	N[1] = 1;
	Try(1, 0);
	cout << res << endl;
}
DSA05033 - XÂU ĐỐI XỨNG 2.cpp
#include<iostream>
#include <cstring>
using namespace std;
int test(string s, int n) {
	int M[100][100];
	memset(M, 0, sizeof(M));
	for (int i = 0; i < n; i++)M[i][i] = 1;
	for (int i = n - 1; i >= 0; i--) {
		for (int j = i + 1; j < n; j++) {
			if (s[i] == s[j])M[i][j] += M[i + 1][j - 1] + 2;
			else {
				M[i][j] = max(M[i + 1][j], M[i][j - 1]);
			}
		}
	}
	return n - M[0][n - 1];
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << test(s, s.length()) << endl;
	}
}
DSA01012 - MÃ GRAY 1.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

v(string) M, N;

void Sort(int k, int l1, int r1, int l2, int r2) {
	if (k == 0)return;
	sort(M.begin() + l1, M.begin() + r1);
	sort(M.begin() + l2, M.begin() + r2, greater<string>());
	Sort(k - 1, l1, (l1 + r1) / 2, (l1 + r1) / 2, r1);
	Sort(k - 1, l2, (l2 + r2) / 2, (l2 + r2) / 2, r2);
}

int main() {
	faster();
	run() {
		M.clear();
		N.clear();
		int n; cin >> n;
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string();
			M.pb(s.substr(20 - n, n));
		}
		int sf = pow(2, n);
		Sort(n, 0,  sf / 2, sf / 2, sf);
		cout(M, sz(M));
		cout << endl;
	}
}

//__________________________B20DCPT173_____________________________//
DSA01003 - HOÁN VỊ KẾ TIẾP.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int main() {
	faster();
	run(){
		int n; cin>>n;
		v(int) M(n);
		cin(M,n);
		next_permutation(all(M));
		cout(M,n);
		cout<<endl;
	}
	

}


//_______________________T_O_A_N________________________//
DSA07030 - HÌNH CHỮ NHẬT 0-1
#include<iostream>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int M[500][500];
		for (int i = 0; i < m; i++)for (int j = 0; j < n; j++)cin >> M[i][j];
		for (int i = 1; i < m; i++) {
			for (int j = 0; j < n; j++) {
				if (M[i][j] == 1)M[i][j] += M[i - 1][j];
			}
		}
		int maxx = 0;
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				int min = M[i][j];
				for (int l = j; l >= 0; l--) {
					if (M[i][l] != 0) {
						if (min > M[i][l])min = M[i][l];
						maxx = max(maxx, min * (j - l + 1));
					}
					else break;
				}
			}

		}
		cout << maxx << endl;
	}
}
DSA09037 - HỌP MẶT.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M,n) FORD(i,0,n)cin>>M[i];
#define reset  FORD(i, 0, 1001)A[i].clear(), check[i] = false;
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
using namespace std;

//_______________________T_O_A_N________________________//


int n, m, k, M[1000];
bool check[1001];
v(int) A[1001];

void DFS(int u) {
	check[u] = true;
	for (auto x : A[u])if (!check[x])DFS(x);
}

int main() {
	cin >> k >> n >> m;
	cin(M, k);
	FORD(i, 0, m) {
		int a, b; cin >> a >> b;
		A[a].push_back(b);
	}
	int count = 0;
	FORD(i, 1, n + 1) {
		memset(check, false, sizeof(check));
		DFS(i);
		int x = 0;
		FORD(j, 0, k)if (check[M[j]])x++;
		if (x == k)count++;
	}
	cout << count << endl;
	return 0;
}
DSA09017 - KIỂM TRA ĐỒ THỊ CÓ PHẢI LÀ CÂY HAY KHÔNG
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
#include<queue>
using namespace std;
vector<int> A[1005];
bool chuaxet[1005];
int truoc[1005];
int bfs(int d) {
	queue<int>hd;
	hd.push(d);
	chuaxet[d] = false;
	while (!hd.empty()) {
		int s = hd.front(); hd.pop();
		for (auto t: A[s]) {
			if (chuaxet[t] == true) {
				hd.push(t);
				chuaxet[t] = false;
				truoc[t] = s;
			}
			else if (truoc[s] != t)return 1;
		}
	}
	return 0;
}
int ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		if (bfs(i))return 1;
	}
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v; cin >> v;
		for (int i = 0; i < 1005; i++)A[i].clear();
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		for (int i = 1; i <=v-1; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		if (ktra(v) == 1)cout << "NO" << endl;
		else cout << "YES" << endl;
	}
}
DSA06028 - SẮP XẾP CHỌN - LIỆT KÊ NGƯỢC
#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
int main() {
		int n; cin >> n;
		int M[1000];
		vector<vector<int>> N;
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 0; i < n - 1; i++) {
			int minn = i;
			for (int j = i + 1; j < n; j++) {
				if (M[minn] > M[j])minn = j;
			}
			swap(M[minn], M[i]);
			vector<int> X;
			for (int l = 0; l < n; l++)X.push_back(M[l]);
			N.push_back(X);
		}
		for (int i = N.size() - 1; i >= 0; i--) {
			cout << "Buoc " << i + 1 << ": ";
			for (int j = 0; j < n; j++)
				cout << N[i][j] << " ";
			cout << endl;
		}
	
}
DSA08016 - HEXGAME.cpp
#include<iostream>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<map>
using namespace std;
typedef long long ll;
bool ktra(vector<int> A, vector<int> B) {
	for (int i = 0; i < 10; i++)if (A[i] != B[i])return false;
	return true;
}
vector<int> quay1(vector<int> A) {
	int tmp = A[0];
	A[0] = A[3];
	A[3] = A[7];
	A[7] = A[8];
	A[8] = A[5];
	A[5] = A[1];
	A[1] = tmp;
	return A;
}
vector<int> quay2(vector<int> A) {
	int tmp = A[1];
	A[1] = A[4];
	A[4] = A[8];
	A[8] = A[9];
	A[9] = A[6];
	A[6] = A[2];
	A[2] = tmp;
	return A;
}
vector<int> quay3(vector<int> A) {
	int tmp = A[1];
	A[1] = A[5];
	A[5] = A[8];
	A[8] = A[7];
	A[7] = A[3];
	A[3] = A[0];
	A[0] = tmp;
	return A;
}
vector<int> quay4(vector<int> A) {
	int tmp = A[1];
	A[1] = A[2];
	A[2] = A[6];
	A[6] = A[9];
	A[9] = A[8];
	A[8] = A[4];
	A[4] = tmp;
	return A;
}
int main() {
	int t; cin >> t;
	while (t--) {
		queue<pair<vector<int>, int>> W1,W2;
		map<vector<int>,int> S;
		vector<int> A(10), B(10);
		B = { 1,2,3,8,0,0,4,7,6,5 };
		for (int j = 0; j < 10; j++)cin >> A[j];
		W1.push({ A,0 });
		W2.push({ B,0 });
		int res = 10e9;
		while (W1.size()) {
			pair<vector<int>, int> a, b, c,d;
			a = W1.front();
			d = a;
			W1.pop();
			b.first = quay1(a.first);
			b.second = a.second + 1;
			if (S[b.first] == 0)S[b.first] = b.second ;
			W1.push(b);
			c.first = quay2(d.first);
			c.second = d.second + 1;
			if (S[c.first] == 0)S[c.first] = c.second ;
			W1.push(c);
			if (b.second >= 15)break;
		}
		while (W2.size()) {
			pair<vector<int>, int> a, b, c, d;
			a = W2.front();
			d = a;
			W2.pop();
			b.first = quay3(a.first);
			b.second = a.second + 1;
			if (S[a.first] > 0)res = min(res, S[a.first] + a.second);
			W2.push(b);
			c.first = quay4(d.first);
			c.second = d.second + 1;
			W2.push(c);
			if (b.second >= 15)break;
		}
		cout << res << endl;
	}

}
DSA02039 - PHÂN TÍCH SỐ 2
#include<iostream>
#include<vector>
using namespace std;
vector<int> M(11);
vector<vector<int>> X;
void Try(int i, int k, int sum, int n) {
	for (int j = k; j >= 1; j--) {
		if (sum + j <= n) {
			M[i] = j;
			if (sum + j == n) {
				vector<int> N;
				for (int l = 1; l <= i; l++)N.push_back(M[l]);
				X.push_back(N);
			}
			else Try(i + 1, j, sum + j, n);
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		X.clear();
		int n; cin >> n;
		Try(1, n, 0, n);
		cout << X.size() << endl;
		for (int i = 0; i < X.size(); i++) {
			cout << '(';
			for (int j = 0; j < X[i].size() - 1; j++)cout << X[i][j] << " ";
			cout << X[i][X[i].size() - 1] << ") ";
		}
		cout << endl;
	}
}
DSA09034 - ĐẾM SỐ AO.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_front
using namespace std;

//______________________________T_O_A_N______________________________//
int n, m;
char M[100][100];
bool check[100][100];

int dx[8] = { 1,1,1,0,-1,-1,-1,0 };
int dy[8] = { 1,0,-1,-1,-1,0,1,1 };

void DFS(int x, int y) {
	check[x][y] = true;
	FORD(i, 0, 8) {
		int a = x + dx[i];
		int b = y + dy[i];
		if (correct(a, b, n, m) && !check[a][b] && M[a][b] == 'W')DFS(a, b);
	}
}

int main() {
	cin >> n >> m;
	FORD(i, 0, n)FORD(j, 0, m)cin >> M[i][j], check[i][j] = false;
	int res = 0;
	FORD(i, 0, n)FORD(j, 0, m)if (!check[i][j] && M[i][j] == 'W')res++, DFS(i, j);
	cout << res << endl;
}
DSA08004 - GIÁ TRỊ NHỎ NHẤT CỦA XÂU
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int k; cin >> k;
		string s; cin >> s;
		vector<int> M(100000, 0);
		for (auto x : s)M[x]++;
		multiset<int> X;
		for (int i = 'A'; i <= 'Z'; i++)if (M[i] > 0)X.insert(M[i]);
		while (k--) {
			int a = *X.rbegin();
			X.erase(X.find(a));
			X.insert(a - 1);
		}
		long long res = 0;
		for (auto x : X)res += (long long)x * x;
		cout << res << endl;
	}
}
DSA08002 - CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 2
#include<iostream>
#include<queue>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	queue<int>hd;
	while (t--) {
		string s;
		cin >> s;
		if (s == "PUSH") {
			int x;
			cin >> x;
			hd.push(x);
		}
		if (s == "POP" && hd.size() > 0) {
			hd.pop();
		}
		if (s == "PRINTFRONT") {
			if (hd.size() == 0)cout << "NONE" << endl;
			else cout << hd.front() << endl;
		}
	}
}
DSA11003 - DUYỆT CÂY 1
#include<iostream>
using namespace std;
int seach(int* M, int n, int x) {
	for (int i = 0; i < n; i++)
		if (M[i] == x)return i;
}
void Duyet(int*M,int n,int*N) {
	int x = seach(M, n, N[0]);
	if (x != 0)	Duyet(M, x, N + 1);
	if (x != n - 1)Duyet(M + x + 1, n - x - 1, N + x + 1);
	cout << N[0] << " ";
}

int main() {
	int t; cin >> t;
	while (t--) {
		int M[1000], N[1000];
		int n; cin >> n;
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int j = 0; j < n; j++)cin >> N[j];
		Duyet(M, n, N);
		cout << endl;
	}
}
DSA04013 - SẮP XẾP KANGURU
#include<iostream>
#include<algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int a[n];
		for (int i = 0; i < n; i++)
			cin >> a[i];
		sort(a, a + n, greater<int>());
		int res = 0;
		int l = 0, r = n / 2;
		while (l < n / 2 && r < n) {
			if (a[l] >= 2 * a[r]) {
				res++; l++; r++;
			}
			else
				r++;
		}
		cout << n - res << endl;
	}
}
DSA11008 - KIỂM TRA NODE LÁ
#include<iostream>
#include<set>
using namespace std;

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};
typedef node* tree;
void add_Node(tree& T, int u, int v, char c) {
	if (T == NULL) {
		T = new node(u);
		tree p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			tree p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft != NULL)add_Node(T->pLeft, u, v, c);
			if (T->pRight != NULL)add_Node(T->pRight, u, v, c);
		}
	}
}
set<int> X;
void Load(tree T, int count) {
	if (T->pLeft == NULL && T->pRight == NULL) {
		X.insert(count);
	}
	else {
		if (T->pLeft != NULL)Load(T->pLeft, count + 1);
		if (T->pRight != NULL)Load(T->pRight, count + 1);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		X.clear();
		int n; cin >> n;
		tree T = NULL;
		for (int i = 0; i < n; i++) {
			int u, v;
			char c;
			cin >> u >> v >> c;
			add_Node(T, u, v, c);
		}
		Load(T,0);
		if (X.size() > 1)cout << 0 << endl;
		else cout << 1 << endl;
	}
}
DSA05017 - DÃY SỐ BI-TONIC
#include<iostream>
using namespace std;


int bitonic(int* M, int n) {
	int dp1[1000], dp2[1000];
	for (int i = 0; i < n; i++) {
		dp1[i] = M[i];
		for (int j = 0; j < i; j++)
			if (M[i] > M[j])dp1[i] = max(dp1[i], dp1[j] + M[i]);
	}
	for (int i = n - 1; i >= 0; i--) {
		dp2[i] = M[i];
		for (int j = n - 1; j > i; j--)
			if (M[i] > M[j])dp2[i] = max(dp2[i], dp2[j] + M[i]);
	}
	int res = 0;
	for (int i = 0; i < n; i++) {
		res = max(res, dp1[i] + dp2[i] - M[i]);
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1001];
		for (int i = 0; i < n; i++)cin >> M[i];
		cout << bitonic(M, n) << endl;
	}
}
DSA09010 - KIỂM TRA TÍNH LIÊN THÔNG MẠNH
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
vector<int> A[1001];
bool check[1001];
void Reset() {
	for (int i = 0; i < 1001; i++)
		A[i].clear();
	memset(check, false, sizeof(check));
}
void DFS(int u) {
	check[u] = true;
	for (int x : A[u])
		if (!check[x])
			DFS(x);
}
bool Ktra_lt(int n) {
	int count = 0;
	for (int i = 1; i <= n; i++) {
		memset(check, false, sizeof(check));
		DFS(i);
		int dem = 0;
		for (int i = 1; i <= n; i++)
			if (check[i])
				dem++;
		if (dem == n)
			count++;
	}
	if (count == n)return true;
	return false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		Reset();
		int n, m; cin >> n >> m;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
		}
		if (Ktra_lt(n))cout << "YES\n";
		else cout << "NO\n";
	}
}
DSA09019 - KIỂM TRA CHU TRÌNH
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
using namespace std;
vector<int> A[1005];
bool chuaxet[1005];
int truoc[1005];
void dfs(int d, int& kt) {
	chuaxet[d] = false;
	for (auto y : A[d]) {
		if (chuaxet[y] == true) {
			truoc[y] = d;
			dfs(y, kt);
		}
		else if (truoc[d] != y)kt = 1;
	}
}
int ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		dfs(i, kt);
		if (kt == 1) return 1;
	}
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v, e; cin >> v >> e;
		for (int i = 0; i < 1005; i++)A[i].clear();
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		for (int i = 1; i <= e; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		if (ktra(v) == 1)cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
DSA09026 - ĐƯỜNG ĐI THEO BFS TRÊN ĐỒ THỊ CÓ HƯỚNG
#include<iostream>
#include<string.h>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<map>
using namespace std;
vector<int> A[1001];
bool check[1001];
bool ok;
string res;
int m, n, u, v;
void BFS(int a) {
	queue<pair<int, string>>X;
	X.push({ a,to_string(a) });
	while (X.size()) {
		pair<int, string> x = X.front();
		X.pop();
		check[x.first] = true;
		for (auto b : A[x.first]) {
			if (!check[b]) {
				check[b] = true;
				if (b == v) {
					ok = true;
					res = x.second + " " + to_string(b);
				}
				X.push({ b,x.second + " " + to_string(b)});
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		for (int i = 0; i < 1001; i++)A[i].clear();
		memset(check, false, sizeof(check));
		ok = false;
		res = "";
		cin >> m >> n >> u >> v;
		for (int i = 0; i < n; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
		}
		BFS(u);
		if (!ok)cout << -1 << endl;
		else cout << res << endl;
	}
}
DSA11021 - NODE LÁ CỦA CÂY NHỊ PHÂN TÌM KIẾM.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};


void Add(tree&T,int x) {
	if (T == NULL)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Load(tree T) {
	if (!T->pLeft && !T->pRight)cout << T->data << " ";
	else {
		if(T->pLeft)Load(T->pLeft);
		if(T->pRight)Load(T->pRight);
	}
}

int main(){
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int x; cin >> x;
			Add(T, x);
		}
		Load(T);
		cout << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA05001 - XÂU CON CHUNG DÀI NHẤT
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		string a, b; cin >> a >> b;
		int dp[1000][1000]={0};
		int res = 0;
		for (int i = 1; i <= a.length(); i++) {
			for (int j = 1; j <= b.length(); j++) {
				if (a[i-1] == b[j-1])dp[i][j] = dp[i - 1][j - 1] + 1;
				else dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);
				res = max(res, dp[i][j]);
			}
		}
		cout << res << endl;
	}
}
DSA11011 - CÂY NHỊ PHÂN ĐỦ.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};


void Add(tree&T,int u,int v,char c) {
	if (T == NULL) {
		T = new node(u);
		tree p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			tree p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft != NULL)Add(T->pLeft, u, v, c);
			if (T->pRight != NULL)Add(T->pRight, u, v, c);
		}
	}
}

set<int> S;
int res = 1;
void Load(tree T,int count) {
	if (T->pLeft && !T->pRight || T->pRight && !T->pLeft)res = 0;
	else if (!T->pLeft && !T->pRight) {
		S.insert(count);
	}
	else {
		Load(T->pLeft, count + 1);
		Load(T->pRight, count + 1);
	}
}


int main(){
	faster();
	run() {
		S.clear();
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int u, v; char c;
			cin >> u >> v >> c;
			Add(T, u, v, c);
		}
		res = 1;
		Load(T, 0);
		cout << res << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA06017 - TRỘN HAI DÃY
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
#include<climits>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int x;
		multiset<int> S;
		while (m--) {
			cin >> x; S.insert(x);
		}
		while (n--) {
			cin >> x; S.insert(x);
		}
		for (auto a : S)cout << a << " ";
		cout << endl;
	}
}
DSA05011 - SỐ CÓ TỔNG CHỮ SỐ BẰNG K
#include<iostream>
#include<string.h>
using namespace std;
#define mod 1000000007
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		long long dp[n+1][k+1];
		memset(dp, 0, sizeof(dp));
		for (int i = 1; i <= 9; i++)dp[1][i] = 1;
		 
		for (int i = 1; i <= n; i++)
			for (int l = 0; l <= 9; l++)
				for (int j = l; j <= k; j++)
					dp[i][j] = (dp[i][j] % mod + dp[i - 1][j - l] % mod) % mod;

		cout << dp[n][k] << endl;
	}
}
DSA02025 - KÝ TỰ LẶP
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
#include<queue>
using namespace std;
typedef pair<int, int> p;
typedef long long ll;
int n, res = 100000000;
string M[100];
int  N[100];
bool check[100];
int count(string a, string b) {
	int cnt = 0;
	for (auto x : a)
		for (auto y : b)
			if (x == y)cnt++;
	return cnt;
}
void Try(int i, int sum) {
	for (int j = 1; j <= n; j++) {
		if (!check[j]) {
			check[j] = true;
			N[i] = j;
			if (i == n) {
				res = min(res, sum + count(M[N[i - 1]], M[j]));
			}
			else if (res > sum && i < n)Try(i + 1, sum + count(M[N[i - 1]], M[j]));
			check[j] = false;
		}
	}
}
int main() {
	cin >> n;
	for (int i = 1; i <= n; i++)cin >> M[i];
	check[0] = true;
	N[1] = 1;
	Try(1, 0);
	cout << res << endl;
}
DSA01009 - XÂU AB ĐẶC BIỆT.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

bool check(string s, int k) {
	int count = 1;
	int ok = 0;
	FOR(i, 1, sz(s)) {
		if (s[i - 1] == '0' && s[i] == '0')count++;
		else count = 1;
		if (count > k)return false;
		if (count == k)ok++;
	}
	if (ok == 1)return true;
	return false;
}

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(string) S;
	FOR(i, 0, pow(2, n)) {
		auto s = bitset<20>(i).to_string();
		s = s.substr(20 - n, n);
		if (check(s, k)) {
			string tmp;
			for (auto c : s)(c == '1') ? tmp.pb('B'): tmp.pb('A') ;
			S.pb(tmp);
		}
	}
	cout<<sz(S)<<endl;
	for(auto s: S)cout<<s<<endl;
}

//_________________________B20DCPT173__________________________//
DSA09027 - KIỂM TRA ĐƯỜNG ĐI
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;
vector<int> A[1001];
bool check[1001];
void reset() {
	for (int i = 0; i < 1001; i++)A[i].clear();
	memset(check, false, sizeof(check));
}
void DFS(int u) {
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		reset();
		int m, n; cin >> m >> n;
		while (n--) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int q; cin >> q;
		while (q--) {
			int u, v; cin >> u >> v;
			memset(check, false, sizeof(check));
			DFS(u);
			if (check[v])cout << "YES\n";
			else cout << "NO\n";
		}
	}
}
DSA11004 - DUYỆT CÂY THEO MỨC
#include<iostream>
#include<queue>
using namespace std;

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};
typedef node* tree;


void add_Node(tree& T, int u, int v, char c) {
	if (T == NULL) {
		T = new node(u);
		node* p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			node* p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft != NULL)add_Node(T->pLeft, u, v, c);
			if (T->pRight != NULL)add_Node(T->pRight, u, v, c);
		}
	}
}

void Load(tree T) {
	queue<tree> X;
	X.push(T);
	while (X.size()) {
		tree tmp = X.front();
		X.pop();
		cout << tmp->data << " ";
		if (tmp->pLeft != NULL)X.push(tmp->pLeft);
		if (tmp->pRight != NULL)X.push(tmp->pRight);
	}
}



int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		tree T = NULL;
		for (int i = 0; i < n; i++) {
			int u, v;
			char c;
			cin >> u >> v >> c;
			add_Node(T, u, v, c);
		}
		Load(T);
		cout << endl;
	}
	return 0;
}
DSA02018 - BIỂU THỨC TOÁN HỌC
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
#include<queue>
using namespace std;

vector<vector<int>> A, B;
vector<int> a = {0,1,2,3,4};
vector<int> b(4,0);
void Try(int i) {
	for (int j = 0; j <= 2; j++) {
		b[i] = j;
		if (i == 3)B.push_back(b);
		else Try(i + 1);
	}
}
string Ktra() {
	int M[5];
	for (int i = 0; i < 5; i++)cin >> M[i];
	for (vector<int> X : A) {
		for (vector<int> Y : B) {
			int sum = M[X[0]];
			for (int i = 0; i < Y.size(); i++) {
				if (Y[i] == 0)sum += M[X[i+1]];
				else if (Y[i] == 1)sum -= M[X[i+1]];
				else sum *= M[X[i+1]];
			}
			if (sum == 23)return "YES\n";
		}
	}
	return "NO\n";
}
int main() {
	Try(0);
	do
	{
		A.push_back(a);
	} while (next_permutation(a.begin(),a.end()));
	int t; cin >> t;
	while (t--) {
		cout << Ktra() << endl;
	}
}
DSA06006 - SẮP XẾP [0 1 2]
#include<iostream>
#include<algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[10000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		for (int i = 0; i < n; i++)cout << M[i] << " ";
		cout << endl;
	}
}
DSA02022 - NGƯỜI DU LỊCH.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int n;
int M[20][20];
v(int) A[1001];
bool check[1001];
int res = INT_MAX;
void DFS(int u, int sum, int par, int count) {
	if (sum >= res)return;
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x, sum + M[u][x], u, count + 1);
		else if (x == 1 && x != par && count == n)res = min(res, sum + M[u][1]);
	}
	check[u] = false;
}

int main() {
	faster();
	cin >> n;
	FOR(i, 1, n + 1)FOR(j, 1, n + 1)cin >> M[i][j];
	FOR(i, 1, n + 1)FOR(j, 1, n + 1) if (i != j) A[i].pb(j);
	DFS(1, 0, 0, 1);
	cout << res << endl;
}

//__________________________B20DCPT173__________________________//
DSA01022 - SỐ THỨ TỰ HOÁN VỊ.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size();
#define f 				 first
#define s 				 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<"\n"
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//



int main() {
	faster();
	run() {
		int n; cin >> n;
		string s, tmp;
		FOR(i, 0, n) {
			int a; cin >> a;
			s += to_string(a);
			tmp += to_string(i + 1);
		}
		int count = 1;
		do {
			if (tmp == s) {
				cout << count << endl;
				break;
			}
			count++;
		} while (next_permutation(all(tmp)));
	}
}


//_______________________T_O_A_N________________________//
DSA08017 - SỐ LỘC PHÁT 1
#include<iostream>
#include<string>
#include<sstream>
#include<queue>
#include<vector>
using namespace std;
typedef long long int ll;
vector<string> res;

int main() {
	int t; cin >> t;
	while (t--) {
		res.clear();
		int n; cin >> n;
		queue<string> S;
		S.push("6");
		S.push("8");
		int l = 0;
		while (l<=n) {
			string s = S.front();
			S.pop();
			res.push_back(s);
			S.push(s + "6");
			S.push(s + "8");
			l = S.front().length();
		}
		for (int i = res.size() - 1; i >= 0; i--)cout << res[i] << " ";
		cout << endl;
	}
}
DSA02037 - DÃY CON CÓ TỔNG NGUYÊN TỐ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int Prime(int n) {
	if (n < 2)return 0;
	for (int i = 2; i <= sqrt(n); i++)if (n % i == 0)return 0;
	return 1;
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n); cin(M, n);
		sort(all(M), greater<int>());
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string().substr(20 - n, n);
			int sum = 0;
			v(int) A;
			FOR(i, 0, n)if (s[i] == '1')sum += M[i], A.pb(M[i]);
			if (Prime(sum)) {
				cout(A,sz(A));
				cout << endl;
			}
		}
	}
}

//__________________________B20DCPT173__________________________//
DSA02028 - CHIA ĐỀU
#include<iostream>
using namespace std;
typedef long long ll;
int res = 0;
int n, k;
int M[10000];
void Try(int i, int s,int x,int cnt) {
	if (cnt == k&&i==n){res++;
	return;
	}
	for (int j = i; j < n; j++) {
		s += M[j];
		if (s == x)Try(j+1, 0, x, cnt+1);
	}
}
int main() {
	cin >> n >> k;
	int sum = 0;
	for (int i = 0; i < n; i++) {
		cin >> M[i]; sum += M[i];
	}
	if (sum % k != 0) {
		cout << 0 << endl;
	}
	else {
		Try(0, 0, sum / k, 0);
		cout << res << endl;
	}
}
DSA07024 - GHÉP VÁN GỖ.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000]; cin(M);
		stack<int> S;
		int i = 0, res = 0;
		while (i < n) {
			if (S.empty() || M[i] > M[S.top()])S.push(i), i++;
			else {
				int tmp = S.top();
				S.pop();
				if (S.empty()) {
					if (M[tmp] <= i)res = max(res, M[tmp]);
				}
				else if (M[tmp] <= (i - S.top() - 1))res = max(res, M[tmp]);
			}
		}
		while (S.size()) {
			int tmp = S.top();
			S.pop();
			if (S.empty()) {
				if (M[tmp] <= i)res = max(res, M[tmp]);
			}
			else if (M[tmp] <= (i - S.top() - 1))res = max(res, M[tmp]);
		}
		cout << res << endl;
	}
	return 0;
}
DSA01016 - PHÂN TÍCH SỐ 1
#include<iostream>
#include<vector>
using namespace std;
vector<int> M(11);
void test(int i, int k, int sum, int n) {
	for (int j = k; j >= 1; j--) {
		if (sum + j <= n) {
			M[i] = j;
			if (sum + j == n) {
				cout << "(";
				for (int l = 1; l < i; l++)cout << M[l] << " ";
				cout << M[i] << ") ";
			}
			else test(i + 1, j, sum + j, n);
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		test(1, n, 0, n);
		cout << endl;
	}
}
DSA05038 - DÃY CON TĂNG DÀI NHẤT 2 CHIỀU.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int n;
map<int, int> dp[100000];
map<int, int>::iterator ite1, ite2;

void Add(int th, int x, int y) {
	ite1 = dp[th].lower_bound(x);
	ite2 = ite1;
	while (ite2 != dp[th].end() && ite2->second >= y)ite2++;
	dp[th].erase(ite1,ite2);
	dp[th].insert({ x,y });
}

bool check(int th,int x,int y) {
	ite1 = dp[th].lower_bound(x);
	if (ite1 == dp[th].begin())return false;
	ite1--;
	return ite1->second < y;
}


int main() {
	faster();
	cin >> n;
	Add(0, INT_MIN, INT_MIN);
	int res = 0;
	FOR(i, 0, n) {
		int x, y; cin >> x >> y;
		int l = 0, r = res;
		while (l <= r) {
			int mid = (l + r) / 2;
			if (check(mid, x, y))l = mid + 1;
			else r = mid - 1;
		}
		if (res == l - 1)res = l;
		Add(l, x, y);
	}
	cout << res << endl;
}

//_______________________T_O_A_N________________________//
DSA03003 - TÌM MAX
#include<iostream>
#include<string>
#include <algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		long long res = 0;
		for (int i = 0; i < n; i++) {
			res += i * M[i];
			res %= 1000000007;
		}
		cout << res << endl;
	}
}
DSA06034 - CẶP SỐ CÓ TỔNG BẰNG K
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		ll M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		ll res = 0;
		for (int i = 0; i < n-1; i++)
			res += (upper_bound(M + i+1, M + n, k - M[i]) - M) - (lower_bound(M + i+1, M + n, k - M[i]) - M);
		cout << res << endl;
	}
}
DSA11006 - DUYỆT CÂY KIỂU XOẮN ỐC.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};


void Add(tree&T,int u,int v,char c) {
	if (T == NULL) {
		T = new node(u);
		tree p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			tree p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft != NULL)Add(T->pLeft, u, v, c);
			if (T->pRight != NULL)Add(T->pRight, u, v, c);
		}
	}
}

void Load(tree T) {
	if (T == NULL)return;
	stack<tree> S1, S2;
	S1.push(T);
	while (S1.size() || S2.size()) {
		while (S1.size()) {
			tree tmp = S1.top();
			S1.pop();
			cout << tmp->data << " ";
			if (tmp->pRight != NULL)S2.push(tmp->pRight);
			if (tmp->pLeft != NULL)S2.push(tmp->pLeft);
		}
		while (S2.size()) {
			tree tmp = S2.top();
			S2.pop();
			cout << tmp->data << " ";
			if (tmp->pLeft != NULL)S1.push(tmp->pLeft);
			if (tmp->pRight != NULL)S1.push(tmp->pRight);
		}
	}
}


int main(){
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int u, v; char c;
			cin >> u >> v >> c;
			Add(T, u, v, c);
		}
		Load(T);
		cout << endl;
	}
}


//_______________________T_O_A_N________________________//
DSA06044 - SẮP XẾP CHẴN LẺ
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	vector<int> M(n), A, B;
	for (int i = 0; i < n; i++) {
		cin >> M[i];
		if (i % 2 == 0)A.push_back(M[i]);
		else B.push_back(M[i]);
	}
	sort(A.begin(), A.end());
	sort(B.begin(), B.end(),greater<>());
	int a = 0, b = 0;
	for (int i = 0; i < n; i++) {
		if (i % 2 == 0)cout << A[a++]<<" ";
		else cout << B[b++]<<" ";
	}
}
DSA04016 - PHẦN TỬ THỨ K
#include<iostream>
#include<algorithm>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int m, n, k; cin >> m >> n >> k;
		multiset<int> X;
		for (int i = 0; i < n + m; i++) {
			int a; cin >> a;
			X.insert(a);
		}
		int z = 0;
		for (auto x : X) {
			z++;
			if (z == k) {
				cout << x; break;
			}
		}
		cout << endl;
	}
}
DSA03034 - DÃY CON CHUNG
#include<iostream>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int m, n, p; cin >> m >> n >> p;
		vector<int> X(m), Y,Z;
		multiset<int> A, B;
		for (int i = 0; i < m; i++)cin >> X[i];
		while (n--) {
			int a; cin >> a;
			A.insert(a);
		}
		while (p--) {
			int a; cin >> a;
			B.insert(a);
		}
		for (int a : X) {
			if (A.count(a) != 0) {
				Y.push_back(a);
				A.erase(A.find(a));
			}
		}
		for (int a : Y) {
			if (B.count(a) != 0) {
				Z.push_back(a);
				B.erase(B.find(a));
			}
		}
		if (Z.size() == 0)cout << "NO";
		else
			for (int a : Z)cout << a << " ";
		cout << endl;
	}
}
DSA09005 - BFS TRÊN ĐỒ THỊ VÔ HƯỚNG
#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
using namespace std;
bool check[1001];
vector<int> A[1001];
void BFS(int u) {
	queue<int> X;
	X.push(u);
	check[u] = true;
	while (X.size()) {
		int x = X.front();
		X.pop();
		cout << x << " ";
		for (int v : A[x]) {
			if (!check[v]) {
				X.push(v);
				check[v] = true;
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		int n, m, u; cin >> n >> m >> u;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		BFS(u);
		cout << endl;
	}
}
DSA10012 - ĐƯỜNG ĐI TRUNG BÌNH.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m;
bool check[1001];
v(int) A[1001];

int BFS(int u, int v) {
	check[u] = true;
	queue<p(int)> Q;
	Q.push({ u,0 });
	while (Q.size()) {
		p(int) tmp = Q.front(); Q.pop();
		if (tmp.first == v)return tmp.second;
		for (auto x : A[tmp.first])if (!check[x])Q.push({ x,tmp.second + 1 }), check[x] = true;
	}
	return -1;
}

int main() {
	faster();
	run() {
		reset();
		cin >> n >> m;
		FOR(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a].pb(b);
		}
		int res = 0, cnt = 0;
		FOR(i, 1, n + 1) {
			FOR(j, 1, n + 1) {
				rs(check, false);
				if (i != j) {
					int f = BFS(i, j);
					if (f != -1)res += f, cnt++;
				}
			}
		}
		cout << setprecision(2) << fixed << res * 1.0 / cnt << endl;
	}
}


//_______________________T_O_A_N________________________//
DSA02010 - TỔ HỢP SỐ CÓ TỔNG BẰNG X
#include<iostream>
#include<string>
#include<vector>
using namespace std;
vector<string> S;
bool ok;
void Try(int*M,int n,int k,int sum,string s,int j) {	
	for (int i = j; i < n; i++) {
		if (sum == k) {
			ok = true;
			s.pop_back();
			S.push_back(s);
			return;
		}
		else if (sum < k)Try(M, n, k, sum + M[i], s + to_string(M[i])+" ", i);
		else return;
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		ok = false;
		S.clear();
		int n, k; cin >> n >> k;
		int M[20];
		for (int i = 0; i < n; i++)cin >> M[i];
		Try(M, n, k, 0, "", 0);
		if (ok == false)cout << -1;
		else for (string s : S)cout << "[" << s << "]";
		cout << endl;
	}

}
CTDL_005 - XÓA DỮ LIỆU TRONG DSLK ĐƠN.cpp
#include <iostream>
using namespace std;


int main()
{
	int n; cin >> n;
	int M[10000];
	for (int i = 0; i < n; i++)cin >> M[i];
	int k; cin >> k;
	for (int i = 0; i < n; i++)
		if (M[i] != k)cout << M[i] << " ";
}
DSA07015 - TÍNH TOÁN GIÁ TRỊ BIỂU THỨC TRUNG TỐ
#include<iostream>
#include<string>
#include<stack>
#include<vector>
using namespace std;
vector<string> A,S;
long long tinh(long long a, long long b, string c) {
	if (c == "+")return a + b;
	if (c == "-")return a - b;
	if (c == "*")return a * b;
	if (c == "/")return a / b;
}
int xxx(string x) {
	if (x == "+" || x == "-")return 1;
	if (x == "/" || x == "*")return 2;
	return 0;
}
void biendoi() {
	stack<string> x;
	for (int i = 0; i < S.size(); i++) {
		if (S[i] == "(")x.push(S[i]);
		else if (S[i] == ")") {
			while (x.size() && x.top() != "(") {
				A.push_back(x.top());
				x.pop();
			}
			x.pop();
		}
		else if (S[i] == "+" || S[i] == "-" || S[i] == "*" || S[i] == "/") {
			while (x.size() && xxx(x.top()) >= xxx(S[i])) {
				A.push_back(x.top());
				x.pop();
			}
			x.push(S[i]);
		}
		else A.push_back(S[i]);
	}
	while (x.size()) {
		if (x.top() == "(")x.pop();
		else {
			A.push_back(x.top());
			x.pop();
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		A.clear(); S.clear();
		for (int i = 0; i < s.length(); i++) {
			if (s[i] >= '0' && s[i] <= '9') {
				string a;
				for (int j = i; j < s.length(); j++) {
					if (s[j] >= '0' && s[j] <= '9')a += s[j];
					else break;
				}
				i += a.length() - 1;
				S.push_back(a);
			}
			else S.push_back(string(1, s[i]));
		}
		biendoi();
		stack<long long> X;
		for (int i = 0; i < A.size(); i++) {
			if (A[i] == "+" || A[i] == "-" || A[i] == "*" || A[i] == "/") {
				long long  a = X.top(); X.pop();
				long long  b = X.top(); X.pop();
				X.push(tinh(b, a, A[i]));
			}
			else X.push(stoll(A[i]));
		}
		cout << X.top() << endl;
	}
}
DSA11005 - DUYỆT CÂY 2
#include<iostream>
#include<algorithm>
using namespace std;

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};
typedef node* tree;
int find(int* M, int n,int k) {
	for (int i = 0; i < n; i++)if (M[i] == k)return i;
	return -1;
}
void add_Node(tree& T, int* M, int* N,int n) {
	T = new node(N[0]);
	int k = find(M, n, N[0]);
	int L[10001], R[10001], l = 0, r = 0;
	for (int i = 1; i < n; i++)
		if (find(M, n, N[i]) < k)L[l++] = N[i];
		else R[r++] = N[i];
	if (k > 0)add_Node(T->pLeft, M, L, k);
	if (n - k - 1 > 0)add_Node(T->pRight, M + k + 1, R, n - k - 1);
}
void Load(tree T) {
	if (T->pLeft != NULL)Load(T->pLeft);
	if (T->pRight != NULL)Load(T->pRight);
	cout << T->data << " ";
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[10001], N[10001];
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 0; i < n; i++)cin >> N[i];
		tree T = NULL;
		add_Node(T, M, N, n);
		Load(T);
		cout << endl;
	}
}
DSA02035 - HOÁN VỊ CÁC CHỮ SỐ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	int k, n; cin >> k >> n;
	v(string) S(k); cin(S, k);
	v(int) M(n);
	iota(all(M), 0);
	int res = INT_MAX;
	do {
		int minn = INT_MAX, maxx = INT_MIN;
		for (auto s : S) {
			string x;
			FOR(i, 0, n)x += s[M[i]];
			minn = min(minn, stoi(x));
			maxx = max(maxx, stoi(x));
		}
		res = min(res, maxx - minn);
	} while (next_permutation(all(M)));
	cout << res << endl;
}

//__________________________B20DCPT173__________________________//
DSA02006 - DÃY CON TỔNG BẰNG K.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//



int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(int) M(n); cin(M, n);
		sort(all(M));
		v(string) S;
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string().substr(20 - n, n);
			string res = "";
			int sum = 0;
			FOR(i, 0, n)if (s[i] == '1')res += to_string(M[i]) + " ", sum += M[i];
			if (sum == k) {
				res.pop_back();
				S.push_back("[" + res + "]");
			}
		}
		if (sz(S) == 0)cout << -1;
		else {
			reverse(all(S));
			for (auto s : S)cout << s << " ";
		}
		cout << endl;
	}
}

//__________________________B20DCPT173_____________________________//
DSA04001 - LŨY THỪA
#include <iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		long long a, k; cin >> a >> k;
		long long  b = 1;                                                                    
		while (k>1) {
			if (k % 2 == 0) {
				a *= a;
				a %= 1000000007;
				k /= 2;
			}
			else {
				b *= a;
				b %= 1000000007;
				k--;
			}
		}
		cout << (a * b) % 1000000007 << endl;
	}
}
DSA07013 - TÍNH GIÁ TRỊ BIỂU THỨC HẬU TỐ
#include<iostream>
#include<string>
#include<stack>
using namespace std;
int tinh(int a, int b, char c) {
	if (c == '+')return a + b;
	if (c == '-')return a - b;
	if (c == '*')return a * b;
	if (c == '/')return a / b;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<int> X;
		for (int i = 0; i <s.length(); i++) {
			if (s[i] >= '0' && s[i] <= '9')X.push(s[i] - '0');
			else {
				int a = X.top(); X.pop();
				int b = X.top(); X.pop();
				X.push(tinh(b, a, s[i]));
			}
		}
		cout << X.top() << endl;
	}
}
CTDL_004 - DÃY CON TĂNG DẦN BẬC K.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

bool check(v(int) N, int k) {
	if (sz(N) != k)return false;
	FOR(i, 1, k)if (N[i] <= N[i - 1])return false;
	return true;
}

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(int) M(n); cin(M, n);
	int count = 0;
	FOR(i, 0, pow(2, n)) {
		auto s = bitset<20>(i).to_string();
		s = s.substr(20 - n, n);
		v(int) N;
		FOR(i, 0, n)if (s[i] == '1')N.pb(M[i]);
		if (check(N, k))count++;
	}
	cout << count << endl;
}

//__________________________B20DCPT173_____________________________//
DSA05022 - KÝ TỰ GIỐNG NHAU
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, x, y, z; cin >> n >> x >> y >> z;
		int M[10000] = { 0 };
		M[1] = x;
		for (int i = 2; i <= n; i++) {
			if (i % 2 == 0)M[i] = min(M[i - 1] + x, M[i / 2] + z);
			else M[i] = min(M[i - 1] + x, M[(i + 1) / 2] + z + y);
		}
		cout << M[n] << endl;
	}
}
DSA05003 - DÃY CON CHUNG DÀI NHẤT CỦA BA XÂU
#include<iostream>
#include<string.h>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int A, B, C; cin >> A >> B >> C;
		string a, b, c; cin >> a >> b >> c;
		int dp[101][101][101];
		memset(dp, 0, sizeof(dp));
		for (int i = 1; i <= A; i++) {
			for (int j = 1; j <= B; j++) {
				for (int k = 1; k <= C; k++) {
					if (a[i - 1] == b[j - 1] && b[j - 1] == c[k - 1])
						dp[i][j][k] = dp[i - 1][j - 1][k - 1] + 1;
					else
						dp[i][j][k] = max(dp[i - 1][j][k], max(dp[i][j - 1][k], dp[i][j][k - 1]));
				}
			}
		}
		cout << dp[A][B][C] << endl;
	}
}
DSA05037 - CHỮ SỐ SẮP XẾP TĂNG DẦN.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=l;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


ll to_Hop(int n, int k) {
	ll dp[110][110];
	FORD(i, 0, n + 1) {
		FORD(j, 0, k + 1) {
			if (i == j || j == 0)dp[i][j] = 1;
			else dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];
			dp[i][j] %= mod;
		}
	}
	return dp[n][k];
}

int main() {
	int t; cin >> t;
	ll dp[101];
	dp[1] = 10;
	FORD(i, 2, 101)dp[i] = dp[i - 1] % mod + to_Hop(8 + i, i) % mod, dp[i] %= mod;
	while (t--) {
		int n; cin >> n;
		cout << dp[n] << endl;
	}
	return 0;
}
DSA06002 - SẮP XẾP THEO GIÁ TRỊ TUYỆT ĐỐI
#include<iostream>
#include<algorithm>
using namespace std;
struct xxx {
	int a, b, c;
};
bool cmp(xxx A, xxx B) {
	if (A.c < B.c)return true;
	if (A.c == B.c&&A.b<B.b)return true;
	return false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		xxx M[100000];
		for (int i = 0; i < n; i++) {
			cin >> M[i].a;
			M[i].b = i;
			M[i].c = abs(k - M[i].a);
		}
		sort(M, M + n, cmp);
		for (int i = 0; i < n; i++)cout << M[i].a << " ";
		cout << endl;
	}
}
DSA03015 - MUA LƯƠNG THỰC
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, s, m; cin >> n >> s >> m;
		if (s * m > (s - s / 7) * n)cout << -1;
		else {
			for (int i = 1; i <= s - s / 7; i++) {
				if (s * m <= n * i) {
					cout << i;
					break;
				}
			}
		}
		cout << endl;
	}
}
DSA06004 - HỢP VÀ GIAO CỦA HAI DÃY SỐ 1
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		vector<int> M(m), N(n);
		set<int> S, X, Y;
		for (int i = 0; i < m; i++) {
			cin >> M[i];
			S.insert(M[i]);
			X.insert(M[i]);
		}
		for (int i = 0; i < n; i++) {
			cin >> N[i];
			S.insert(N[i]);
			Y.insert(N[i]);
		}
		for (auto x : S)cout << x << " ";
		cout << endl;
		for (auto x : X)if (Y.count(x) != 0)cout << x << " ";
		cout << endl;
	}
}
DSA03035 - SẮP XẾP ĐƠN GIẢN
#include <iostream>
using namespace std;
int main() {
	int n; cin >> n;
	int M[100000], N[100001] = { 0 };
	int res = 0;
	for (int i = 0; i < n; i++) {
		cin >> M[i];
		N[M[i]] = N[M[i] - 1] + 1;
		res = max(res, N[M[i]]);
	}
	cout << n - res << endl;
}
DSA08015 - DI CHUYỂN TRONG KHÔNG GIAN
#include<iostream>
#include<queue>
#include<string.h>
#include<unordered_set>
using namespace std;
char M[31][31][31];
bool check[31][31][31];
int a, b, c;
int X[6] = { 1, -1, 0, 0, 0, 0 };
int Y[6] = { 0, 0, 1, -1, 0, 0 };
int Z[6] = { 0, 0, 0, 0, 1, -1 };
struct hhcn {
	int x, y, z;
};
bool ktra(int m, int n, int p) {
	if (m >= 0 && m < a && n >= 0 && n < b && p >= 0 && p < c && M[m][n][p] != '#' && !check[m][n][p])return true;
	return false;
}
int BFS(hhcn s,hhcn e) {
	queue<pair<hhcn, int>> A;
	A.push({ s,0 });
	check[s.x][s.y][s.z] = true;
	M[s.x][s.y][s.z] = '#';
	while (A.size()) {
		pair<hhcn, int> f = A.front();
		A.pop();
		if (f.first.x==e.x&&f.first.y==e.y&&f.first.z==e.z) return f.second;
		for (int i = 0; i < 6; i++) {
			int m = f.first.x + X[i];
			int n = f.first.y + Y[i];
			int p = f.first.z + Z[i];
			if (ktra(m, n, p)) {
				A.push({ {m,n,p},f.second + 1 });
				check[m][n][p] = true;
			}
		}
	}
	return -1;
}
int main(){
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		cin >> a >> b >> c;
		hhcn s, e;
		for (int i = 0; i < a; i++) {
			for (int j = 0; j < b; j++) {
				for (int k = 0; k < c; k++) {
					cin >> M[i][j][k];
					if (M[i][j][k] == 'S')s = { i,j,k };
					if (M[i][j][k] == 'E')e = { i,j,k };
				}
			}
		}
		cout << BFS(s,e) << endl;
	}
}
DSA10001 - TÌM ĐƯỜNG.cpp
#include<iostream>
#include<cstring>
using namespace std;
char M[501][501];
int m, n;
pair<int, int> u, v;
int dx[4] = { -1,0,0,1 };
int dy[4] = { 0,-1,1,0 };
char dh[4] = { 'B','T','D','N' };
bool check[501][501];
bool ok;
void nhap() {
	cin >> m >> n;
	for (int i = 0; i < m; i++)
		for (int j = 0; j < n; j++) {
			cin >> M[i][j];
			if (M[i][j] == 'S')u = { i,j };
			if (M[i][j] == 'T')v = { i,j };
		}
	ok = false;
	memset(check, false, sizeof(check));
}
void DFS(int x, int y, int count, char DH) {
	check[x][y] = true;
	if (x == v.first && y == v.second && count <= 3) {
		ok = true;
		return;
	}
	if (count > 3 || M[x][y] == 'T') {
		check[x][y] = false;
		return;
	}
	for (int i = 0; i < 4; i++) {
		int x1 = x + dx[i], y1 = y + dy[i];
		if (x1 >= 0 && x1 < m && y1 >= 0 && y1 < m && M[x1][y1] != '*' && !check[x1][y1]) {
			if (dh[i] != DH)
				DFS(x1, y1, count + 1, dh[i]);
			else DFS(x1, y1, count, dh[i]);
		}
	}
	check[x][y] = false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		nhap();
		DFS(u.first, u.second, 0, 'X');
		if (ok)cout << "YES\n";
		else cout << "NO\n";
	}
}
DSA11002 - CÂY BIỂU THỨC 2
#include<iostream>
#include<stack>
#include<string>
using namespace std;
int xuly(int i, string* s)
{
	if (s[i] == "+" || s[i] == "-" || s[i] == "*" || s[i] == "/")
	{
		if (s[i] == "+") return xuly(i * 2 + 1, s) + xuly(i * 2 + 2, s);
		if (s[i] == "-") return xuly(i * 2 + 1, s) - xuly(i * 2 + 2, s);
		if (s[i] == "*") return xuly(i * 2 + 1, s) * xuly(i * 2 + 2, s);
		if (s[i] == "/") return xuly(i * 2 + 1, s) / xuly(i * 2 + 2, s);
	}
	else return stoi(s[i]);
}
int main(){
	int t; cin >> t;
	while (t--)
	{
		int n; cin >> n;
		string s[1000];
		for (int i = 0; i < n; i++) cin >> s[i];
		cout << xuly(0, s) << endl;

	}
}
DSA09033 - MẠNG XÃ HỘI
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define reset  FORD(i, 0, 1001)A[i].clear(), check[i] = false;
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
using namespace std;

//____________________T_O_A_N_______________________//
int n, m;
bool check[1001];
bool ok[1001][1001];
v(int) A[1001];
set<p(int)> S;

bool DFS(int u) {
	for(auto x:A[u])
		for (auto y : A[x])
			if (S.count({ u,y }) == 0 && x!=u)	return false;
	return true;
}

string Internet() {
	FORD(i, 1, n + 1)if (!DFS(i))return "NO\n";
	return "YES\n";
}

int main() {
	int t; cin >> t;
	while (t--) {
		reset S.clear();
		cin >> n >> m;
		FORD(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
			S.insert({ a,b });
			S.insert({ b,a });
		}
		cout << Internet();
	}
	return 0;
}
DSA11029 - ĐƯỜNG ĐI TỚI NODE LÁ.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

v(int) A[1001];
bool check[1001];

v(string) res;

void DFS(int u,string s) {
	if (A[u].empty()) {
		res.push_back(s);
	}
	check[u] = true;
	for (auto x : A[u])if (!check[x])DFS(x,s+" "+to_string(x));
}
bool cmp(string a, string b) {
	int posa = a.find_last_of(" ");
	int posb = b.find_last_of(" ");
	return stoi(a.substr(posa, 10000)) < stoi(b.substr(posb, 10000));
}
int main() {
	faster();
	run() {
		reset();
		int n; cin >> n;
		if (n == 1) {
			cout << 1 << endl;
			continue;
		}
		FOR(i, 0, n - 1) {
			int u, v; cin >> u >> v;
			A[u].push_back(v);
		}
		res.clear();
		DFS(1, "1");
		sort(all(res),cmp);
		for (auto s : res) {
			cout << s << endl;
		}
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA05015 - TÍNH P(N,K)
#include<iostream>
using namespace std;
#define mod 1000000007
typedef long long ll;
ll Pkn(int n, int k) {
	if (n < k)return 0;
	ll res = 1;
	for (int i = 0; i < k; i++) {
		res = res * (n - i);
		res %= mod;
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		cout << Pkn(n, k) << endl;
	}
}
DSA06001 - SẮP XẾP XEN KẼ
#include<iostream>
#include<algorithm>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n,greater<>());
		for (int i = 0; i < n / 2; i++)
			cout << M[i] << " " << M[n - i - 1]<<" ";
		if (n % 2 == 1)cout << M[n / 2];
		cout << endl;
	}
}
DSA11020 - KIỂM TRA CÂY NHỊ PHÂN TÌM KIẾM.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int ktra(int*M,int n){
	if (n < 2)return 1;
	FOR(i, 1, n)if (M[i - 1] > M[i])return 0;
	return 1;
}

int main() {
	faster();
	run() {
		int n, M[100000];
		cin >> n;
		cin(M, n);
		cout << ktra(M, n) << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA05032 - XÂU ĐỐI XỨNG 1
#include<iostream>
#include <cstring>
using namespace std;
int test(string s, int n) {
	int M[100][100];
	memset(M, 0, sizeof(M));
	for (int i = 0; i < n; i++)M[i][i] = 1;
	for (int i = n - 1; i >= 0; i--) {
		for (int j = i + 1; j < n; j++) {
			if (s[i] == s[j])M[i][j] += M[i + 1][j - 1] + 2;
			else {
				M[i][j] = max(M[i + 1][j], M[i][j - 1]);
			}
		}
	}
	return n - M[0][n - 1];
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << test(s, s.length()) << endl;
	}
}
DSA07004 - ĐẾM SỐ DẤU NGOẶC ĐỔI CHIỀU
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		int count = 0;
		while (s.length()) {
			int x = s.find("()");
			if (x == -1) {
				if (s[0] == ')') {
					s[0] = '('; count++;
				}
				if (s[s.length() - 1] == '(') {
					s[s.length() - 1] = ')'; count++;
				}
			}
			else {
				s.erase(x, 2);
			}
		}
		cout << count << endl;
	}
}
DSA02011 - MÁY ATM
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long ll;
ll cnt = 0, sum = 0;
int n, k;
int M[100];
bool ok;
void Try(int j) {
	if (ok == true)return;
	for (int i = 1; i >= 0; i--) {
		sum += M[j]*i;
		cnt += i;
		if (sum == k) {
			ok = true;
			cout << cnt << endl;
			return;
		}
		if (sum < k && j < n - 1)Try(j + 1);
		sum -= M[j]*i;
		cnt -= i;
	}
}

int main() {
	int t; cin >> t;
	while (t--) {
		ok = false;
		cnt = 0; sum = 0;
		cin >> n >> k;
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n, greater<>());
		Try(0);
		if(!ok)
		cout << -1 << endl;
	}
}
DSA05027 - CÁI TÚI
#include<iostream>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		vector<pair<int, int>> M(n+1);
		for (int i = 0; i < n; i++)cin >> M[i].first;
		for (int i = 0; i < n; i++)cin >> M[i].second;
		int dp[1001][1001];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= k; j++) {
				if (i == 0 || j == 0)dp[i][j] = 0;
				else {
					if (j < M[i].first)dp[i][j] = dp[i - 1][j];
					else dp[i][j] = max(dp[i - 1][j], M[i].second + dp[i-1][j - M[i].first]);
				}

			}
		}
		cout << dp[n][k] << endl;
	}
}
DSA01027 - HOÁN VỊ DÃY SỐ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	int n; cin >> n;
	v(int) M(n);
	cin(M, n);
	sort(all(M));
	do {
		cout(M, n); cout << endl;
	} while (next_permutation(all(M)));
}

//_________________________B20DCPT173__________________________//
DSAKT055 - BÀI TOÁN CÁI TÚI 0-1.cpp
#include<iostream>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		vector<pair<int, int>> M(n + 1);
		for (int i = 0; i < n; i++)cin >> M[i].first;
		for (int i = 0; i < n; i++)cin >> M[i].second;
		int dp[1001][1001];
		for (int i = 0; i <= n; i++) {
			for (int j = 0; j <= k; j++) {
				if (i == 0 || j == 0)dp[i][j] = 0;
				else {
					if (j < M[i].first)dp[i][j] = dp[i - 1][j];
					else dp[i][j] = max(dp[i - 1][j], M[i].second + dp[i - 1][j - M[i].first]);
				}

			}
		}
		cout << dp[n][k] << endl;
	}
}
DSA09020 - CHUYỂN DANH SÁCH KỀ SANG MA TRẬN KỀ
#include<iostream>
#include<algorithm>
#include<string.h>
#include<sstream>
using namespace std;

int main() {
	
	int n; cin >> n;
	cin.ignore();
	int M[1001][1001];
	memset(M, 0, sizeof(M));
	for (int i = 1; i <= n; i++) {
		string s; getline(cin, s);
		string a;
		stringstream x(s);
		while (x >> a) {
			M[i][stoi(a)] = 1;
			M[stoi(a)][i] = 1;
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)cout << M[i][j] << " ";
		cout << endl;
	}
	
}
DSA03019 - PHÂN SỐ ĐƠN VỊ
#include<iostream>
#include<algorithm>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		long long int m, n; cin >> m >> n;
		long long int c = __gcd(m, n);
		m /= c; n /= c;
		for (long long int i = 2; i < 100000000; i++) {
			if (m == 1) {
				cout << m << "/" << n << endl;
				break;
			}
			if (m * i - n > 0) {
				cout << 1 << "/" << i << " + ";
				long long int x = n * i;
				m = m * i - n;
				n = x;
				c = __gcd(m, n);
				m /= c; n /= c;
			}

		}

	}
}
DSA11010 - CÂY NHỊ PHÂN HOÀN HẢO.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};


void Add(tree&T,int u,int v,char c) {
	if (T == NULL) {
		T = new node(u);
		tree p = new node(v);
		if (c == 'L')T->pLeft = p;
		else T->pRight = p;
	}
	else {
		if (T->data == u) {
			tree p = new node(v);
			if (c == 'L')T->pLeft = p;
			else T->pRight = p;
		}
		else {
			if (T->pLeft != NULL)Add(T->pLeft, u, v, c);
			if (T->pRight != NULL)Add(T->pRight, u, v, c);
		}
	}
}

set<int> S;
string res = "Yes";
void Load(tree T,int count) {
	if (T->pLeft && !T->pRight || T->pRight && !T->pLeft)res = "No";
	else if (!T->pLeft && !T->pRight) {
		S.insert(count);
		if (S.size() > 1)res = "No";
	}
	else {
		Load(T->pLeft, count + 1);
		Load(T->pRight, count + 1);
	}
}


int main(){
	faster();
	run() {
		S.clear();
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int u, v; char c;
			cin >> u >> v >> c;
			Add(T, u, v, c);
		}
		res = "Yes";
		Load(T, 0);
		cout << res << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA09025 - ĐƯỜNG ĐI THEO DFS VỚI ĐỒ THỊ CÓ HƯỚNG
#include<iostream>
#include<string.h>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<map>
using namespace std;
vector<int> A[1001];
bool check[1001];
bool ok;
string res;
int m, n, u, v;
void DFS(int a, string s) {
	check[a] = true;
	for (auto b : A[a]) {
		if (!check[b]) {
			if (b == v) {
				ok = true;
				res = s + " " + to_string(b);
			}
			DFS(b, s + " " + to_string(b));
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		for (int i = 0; i < 1001; i++)A[i].clear();
		memset(check, false, sizeof(check));
		ok = false;
		res = "";
		cin >> m >> n >> u >> v;
		for (int i = 0; i < n; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
		}
		DFS(u,to_string(u));
		if (!ok)cout << -1 << endl;
		else cout << res << endl;
	}
}
DSA08007 - SỐ BDN 1
#include<iostream>
#include<queue>
#include<string>
using namespace std;
typedef long long ll;
int res = 0;
void load(string n) {
	queue<string> S;
	S.push("1");
	int l = 0;
	while (S.size()) {
		string s = S.front();
		S.pop();
		if (s.size()<n.size()||s.size()==n.size()&&s<=n)res++;
		else return;
		S.push(s + "0");
		S.push(s + "1");
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		string n; cin >> n;
		res = 0;
		load(n);
		cout << res << endl;
	}
}
DSA04003 - ĐẾM DÃY
#include <iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		long long a=2, k; cin >> k;
		long long  b = 1;
		k--;
		while (k > 1) {
			if (k % 2 == 0) {
				a *= a;
				a %= 123456789;
				k /= 2;
			}
			else {
				b *= a;
				b %= 123456789;
				k--;
			}
		}
		cout << (a * b) % 123456789 << endl;
	}
}
DSA01011 - HOÁN VỊ TIẾP THEO CỦA CHUỖI SỐ.cpp
#include<bits/stdc++.h>
#define mod			 1000000007
#define ll			 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	  	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]
#define rs(M,x)		    	 memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

string Sinh(string s) {
	FOR(i, 1, s.length())if (s[i] > s[i - 1]) {
		next_permutation(all(s));
		return s;
	}
	return "BIGGEST";
}

int main() {
	faster();
	run() {
		int a; cin >> a;
		string s; cin >> s;
		cout << a << " ";
		cout << Sinh(s) << endl;
	}


}


//_______________________T_O_A_N________________________//
DSA02026 - PHÉP TOÁN CƠ BẢN
#include<iostream>
#include<vector>
#include<string>
#include<sstream>
using namespace std;
bool ok;
void Try(int i, vector<int> M, int n, string s) {
	if (ok)return;
	for (int j = 0; j < 10; j++) {
		M.push_back(j);
		if (i == n) {
			int x = 0;
			string X = s;
			for (int i = 0; i < s.length(); i++) {
				if (i != 3) {
					if (X[i] == '?')
						X[i] = M[x++] + '0';
				}
			}
			if (X[0] != '0' && X[5] != '0' && X[10] != '0') {
				int a = stoi(X.substr(0, 2));
				int b = stoi(X.substr(5, 2));
				int c = stoi(X.substr(10, 2));
				if (X[3] == '+')
					if (a + b == c) {
						cout << X << endl;
						ok = true;
						return;
					}
				if (X[3] == '-')
					if (a - b == c) {
						cout << X << endl;
						ok = true;
						return;
					}
				if (X[3] == '?') {
					if (a + b == c) {
						X[3] = '+';
						cout << X << endl;
						ok = true;
						return;
					}
					if (a - b == c) {
						X[3] = '-';
						cout << X << endl;
						ok = true;
						return;
					}
				}
			}
		}
		if (i < n)Try(i + 1, M, n, s);
		M.pop_back();
	}
}
int main() {
	int t; cin >> t;
	cin.ignore();
	while (t--) {
		string s;
		ok = false;
		getline(cin, s);
		int n = 0;
		for (int i = 0; i < s.length(); i++)
			if (s[i] == '?' && i != 3)n++;
		vector<int> M;
		Try(0, M, n, s);
		if (!ok)cout << "WRONG PROBLEM!\n";
	}
}
DSA06031 - PHẦN TỬ LỚN NHẤT TRONG DÃY CON
#include<iostream>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		multiset<int> X;
		for (int i = 0; i < k; i++)X.insert(M[i]);
		cout << *X.rbegin() << " ";
		for (int i = k; i < n; i++) {
			X.erase(X.find(M[i - k]));
			X.insert(M[i]);
			cout << *X.rbegin() << " ";
		}
		cout << endl;
	}
}
DSA09016 - KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ CÓ HƯỚNG VỚI DFS
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
using namespace std;
vector<int> k[1005];
bool chuaxet[1005];
int truoc[1005];
void dfs(int d, int& kt) {
	stack<int>st;
	st.push(d);
	chuaxet[d] = false;
	while (!st.empty()) {
		int s = st.top(); st.pop();
		for (auto t: k[s]) {
			if (chuaxet[t] == true) {
				st.push(s);
				st.push(t);
				chuaxet[t] = false;
				break;
			}
			else if (t == d)kt = 1;
		}
	}
}
bool ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		dfs(i, kt);
		if (kt == 1)
			return true;
	}
	return false;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v, e; cin >> v >> e;
		int kt = 0;
		for (int i = 0; i < 1005; i++)k[i].clear();
		for (int i = 1; i <= e; i++) {
			int a, b; cin >> a >> b;
			k[a].push_back(b);
		}
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		if (ktra(v) == true) {
			cout << "YES" << endl;
		}
		else cout << "NO" << endl;
	}
}
DSA11026 - DUYỆT SAU CÂY TÌM KIẾM CÂN BẰNG.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
	using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree& T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Build(tree&T,v(int) M, int left, int right) {
	if (left >= right)return;
	int mid = (left + right) / 2;
	Add(T, M[mid]);
	Build(T,M, mid + 1, right);
	Build(T,M, left, mid);

}

void Load(tree T) {
	if (T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
	cout << T->data << " ";
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n); cin(M, n);
		sort(all(M), greater<>());
		tree T = NULL;
		Build(T,M, 0, n);
		Load(T);
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA08025 - QUÂN MÃ.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (1<=(x)&&(x)<(n)&&1<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//______________________________T_O_A_N______________________________//

int dx[8] = {2,2,1,1,-1,-2,-2,-1};
int dy[8] = {1,-1,-2,2,-2,-1,1,2};
int BFS(p(int) a,p(int) b) {
	queue<pair<p(int),int>> Q;
	set<p(int)> S;
	Q.push({ a,0 });
	S.insert(a);
	while (Q.size()) {
		p(int) tmp = Q.front().f;
		int count = Q.front().s;
		Q.pop();
		if (tmp == b)return count;
		FORD(i, 0, 8) {
			int x = tmp.f + dx[i];
			int y = tmp.s + dy[i];
			if (correct(x, y, 9, 9)&&S.count({x,y})==0) {
				Q.push({ { x,y },count + 1 });
				S.insert({ x,y });
			}
		}
	}
	return -1;
}

int main() {
	int t; cin >> t;
	while (t--) {
		string a, b; cin >> a >> b;
		p(int) u = { a[0] - 'a' + 1,a[1] - '0' }, v = { b[0] - 'a' + 1,b[1] - '0' };
		cout << BFS(u, v) << endl;
	}
}
DSA01020 - XÂU NHỊ PHÂN TRƯỚC.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	run(){
		string s; cin >> s;
		int pos = s.find_last_of("1");
		if (pos == -1)cout << string(sz(s), '1')<<endl;
		else {
			s[pos] = '0';
			cout << s.substr(0, pos + 1) + string(sz(s) - pos - 1, '1') << endl;
		}
	}
}
//_________________________B20DCPT173__________________________//
DSA06015 - MERGE SORT
#include<iostream>
#include<algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		for (int i = 0; i < n; i++)cout << M[i] << " ";
		cout << endl;
	}
}
DSA04017 - PHẦN TỬ KHÁC NHAU
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<long long> M(n),N(n-1);
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 0; i < n - 1; i++) cin >> N[i];
		for(int i=0;i<n;i++)
			if (M[i]!=N[i]) {
				cout << i + 1;
				break;
			}
		cout << endl;
	}
} 
DSA02002 - DÃY SỐ 2.cpp
#include<iostream>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int x = n;
		int M[10000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int y = 0;
		vector < vector<int>> X;
		while (x--) {
			vector<int> Y;
			for (int i = y; i < n; i++)Y.push_back(M[i]);
			X.push_back(Y);
			y++;
			for (int i = n - 1; i >= 1; i--) {
				M[i] += M[i - 1];
			}
		}
		for (int i = X.size() - 1; i >= 0; i--) {
			cout << "[";
			for (int j = 0; j < X[i].size()-1; j++)cout << X[i][j] << " ";
			cout << X[i][X[i].size() - 1] << "] ";
		}
		cout << endl;
	}
}
DSA08003 - HÀNG ĐỢI HAI ĐẦU (DEQUEUE)
#include<iostream>
#include<queue>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	deque<int> X;
	while (t--) {
		string s; cin >> s;
		if (s == "PUSHFRONT") {
			int x; cin >> x;
			X.push_front(x);
		}
		if (s == "PRINTFRONT") {
			if (X.size() == 0)cout << "NONE\n";
			else cout << X.front() << endl;
		}
		if (s == "POPFRONT" && X.size())X.pop_front();
		if (s == "PUSHBACK") {
			int x; cin >> x;
			X.push_back(x);
		}
		if (s == "PRINTBACK") {
			if (X.size() == 0)cout << "NONE\n";
			else cout << X.back() << endl;
		}
		if (s == "POPBACK" && X.size())X.pop_back();
	}
}
DSA04023 - KHOẢNG CÁCH NHỎ HƠN K
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int M[1000000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		ll res = 0;
		for (int i = 0; i < n; i++)
			res += lower_bound(M + i, M + n, M[i] + k) - M - i - 1;
		cout << res << endl;
	}
}
DSA03011 - NỐI DÂY 2
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#define mod 1000000007
using namespace std;
typedef unsigned long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int m; cin >> m;
		multiset<ll> M;
		for (int i = 0; i < m; i++) {
			int n; cin >> n;
			M.insert(n);
		}
		ll sum = 0;
		while (M.size() != 1) {
			ll x = *M.begin();
			M.erase(M.find(*M.begin()));
			ll y = *M.begin();
			M.erase(M.find(*M.begin()));
			sum += (x % mod + y % mod) % mod;
			sum %= mod;
			M.insert((x % mod + y % mod) % mod);
		}
		cout << sum % mod << endl;
	}
}
DSA08022 - BỘI SỐ LỚN NHẤT CỦA 3.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define sz(M) M.size();
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
#define pb push_back
#define pf push_front
using namespace std;

//____________________T_O_A_N_______________________//

bool check[10000];

int main() {
	int t; cin >> t;
	while (t--) {
		int n, M[100000];
		cin >> n; cin(M);
		int N[10] = { 0 };
		int sum = 0;
		FORD(i, 0, n)N[M[i]]++, sum += M[i];
		bool check = false;
		if (sum % 3 == 1) {
			if (N[1] > 0)N[1]--, check = true;
			else if (N[4] > 0)N[4]--, check = true;
			else if (N[7] > 0)N[7]--, check = true;
		}
		else if (sum % 3 == 2) {
			if (N[2] > 0)N[2]--, check = true;
			else if (N[5] > 0)N[5]--, check = true;
			else if (N[8] > 0)N[8]--, check = true;
		}
		else check = true;
		if (!check) {
			cout << -1 << endl; continue;
		}
		int k = 10, ok = 1;
		while (k--)while (N[k]--)cout << k, ok = 0;
		if (ok)cout << -1;
		cout << endl;
	}
	return 0;
}
DSA05012 - TỔ HỢP C(n, k)
#include<iostream>
using namespace std;
int dp[1001][1001];
#define mod 1000000007
int main() {
	for (int i = 0; i <= 1000; i++) {
		for (int j = 0; j <= 1000; j++) {
			if (i == j || j == 0)dp[i][j] = 1;
			else dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];
			dp[i][j] %= mod;
		}
	}
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		cout << dp[n][k] << endl;
	}
}
DSA09024 - BFS TRÊN ĐỒ THỊ CÓ HƯỚNG
#include<iostream>
#include<vector>
#include<queue>
#include<cstring>
using namespace std;
bool check[1001];
vector<int> A[1001];
void BFS(int u) {
	queue<int> X;
	X.push(u);
	check[u] = true;
	while (X.size()) {
		int x = X.front();
		X.pop();
		cout << x << " ";
		for (int v : A[x]) {
			if (!check[v]) {
				X.push(v);
				check[v] = true;
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		int n, m, u; cin >> n >> m >> u;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
		}
		BFS(u);
		cout << endl;
	}
}
DSA01018 - TẬP CON LIỀN KỀ PHÍA TRƯỚC.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//



int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(int) M(k); cin(M, k);
		string s = string(n, '1');
		FOR(i, 0, k)s[M[i] - 1] = '0';
		prev_permutation(all(s));
		FOR(i, 0, n)if (s[i] == '0')cout << i + 1 << " ";
		cout << endl;
	}
}
//_________________________B20DCPT173__________________________//
DSA11012 - CÂY NHỊ PHÂN BẰNG NHAU.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//



int main(){
	faster();
	run() {
		int n; cin >> n;
		cin.ignore();
		string s1; getline(cin, s1);
		int m; cin >> m;
		cin.ignore();
		string s2; getline(cin, s2);
		if (s1 != s2)cout << 0 << endl;
		else cout << 1 << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA01026 - PHÁT LỘC.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	int n; cin >> n;
	FOR(i, 0, pow(2, n)) {
		auto s = bitset<20>(i).to_string();
		s = s.substr(20 - n, n);
		if (s[0] == '1' && s[n - 1] == '0' && s.find("11") == -1 && s.find("0000") == -1) {
			for (auto c : s)(c == '1') ? cout << '8' : cout << '6';
			cout << endl;
		}
	}

}

//_________________________B20DCPT173__________________________//
DSA03001 - ĐỔI TIỀN
#include<iostream>
#include<algorithm>
#include<string.h>
#include<set>
#include<vector>
using namespace std;
int main() {
	int M[] = { 1000,500,200,100,50,20,10,5,2,1 };
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int count = 0;
		for (int i = 0; i < 10; i++) {
			while (n >= M[i]) {
				count++;
				n -= M[i];
			}
		}
		cout << count << endl;
	}
}
DSA04015 - TÍNH FLOOR(X)
#include<iostream>
#include<algorithm>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int M[100000];
		M[n + 1] = 10000000;
		for (int i = 0; i < n; i++)cin >> M[i];
		int a = lower_bound(M, M + n-1, k) - M;
		if (k < M[0])cout << -1;
		else if (k > M[n - 1])cout << n - 1;
		else {
			if (M[a] == k)cout << a+1;
			else cout << a;
		}
		cout << endl;
	}
} 
DSA05013 - BẬC THANG
#include<iostream>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		long long M[10000],dp[10000];
		int n, k; cin >> n >> k;
		M[0] = M[1] = 1;
		for (int i = 2; i <= n; i++) {
			M[i] = 0;
			for (int j = 1; j <= min(i, k); j++) {
				M[i] += M[i - j];
				M[i] %= 1000000007;
			}
		}
		cout << M[n] << endl;
	}
}
DSA01008 - XÂU NHỊ PHÂN CÓ K BIT 1.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string().substr(20 - n, n);
			string tmp = s;
			sort(all(s));
			if (s.find(string(k, '1')) != -1 && s.find(string(k + 1, '1')) == -1)cout << tmp << endl;
		}
	}
}
//_________________________B20DCPT173__________________________//
DSA06014 - TỔNG CẶP SỐ NGUYÊN TỐ
#include<iostream>
#include<cmath>
using namespace std;
int snt(int n) {
	if (n < 2)return 0;
	for (int i = 2; i <= sqrt(n); i++)
		if (n % i == 0)return 0;
	return 1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int x = 0;
		for (int i = 2; i < n; i++) {
			if (snt(i) && snt(n - i))
			{
				x = 1;
				cout << i << " " << n - i << endl;
				break;
			}
		}
		if (x == 0)cout << -1 << endl;
	}
}
DSA07010 - BIẾN ĐỐI TIỀN TỐ - HẬU TỐ
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<string> S;
		for (int i = s.size()-1; i >= 0; i--) {
			if (s[i] >= 'A' && s[i] <= 'Z')S.push(string(1, s[i]));
			else {
				string a = S.top(); S.pop();
				string b = S.top(); S.pop();
				S.push(a + b + s[i]);
			}
		}
		cout << S.top() << endl;
	}
}
DSA10003 - KIỂM TRA CHU TRÌNH SỬ DỤNG DISJOIN SET
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
using namespace std;
vector<int> A[1005];
bool chuaxet[1005];
int truoc[1005];
void dfs(int d, int& kt) {
	chuaxet[d] = false;
	for (auto y : A[d]) {
		if (chuaxet[y] == true) {
			truoc[y] = d;
			dfs(y, kt);
		}
		else if (truoc[d] != y)kt = 1;
	}
}
int ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		dfs(i, kt);
		if (kt == 1) return 1;
	}
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v, e; cin >> v >> e;
		for (int i = 0; i < 1005; i++)A[i].clear();
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		for (int i = 1; i <= e; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		if (ktra(v) == 1)cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
DSA09001 - CHUYỂN DANH SÁCH CẠNH SANG DANH SÁCH KỀ
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		vector<int> A[1001];
		while (n--) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		for (int i = 1; i <= m; i++) {
			cout << i << ": ";
			for (auto x : A[i])cout << x << " ";
			cout << endl;
		}
	}
}
DSA01021 - TỔ HỢP TIẾP THEO.cpp
#include<iostream>
using namespace std;

bool ok;
void sinh(int*M,int n,int k) {
	int i = k;
	while (M[i] == n - k + i)i--;
	if (i < 1)ok = true;
	else {
		M[i]++;
		for (int j = i + 1; j <= k; j++)M[j] = M[j - 1] + 1;
	}
}

int main() {
	int t; cin >> t;
	while (t--) {
		ok = false;
		int n, k; cin >> n >> k;
		int M[1000], N[1000];
		for (int i = 1; i <= k; i++)cin >> M[i], N[i] = M[i];
		sinh(M, n, k);
		if (ok)cout << k << endl;
		else {
			int count = 0;
			for (int i = 1; i <= k; i++)
				for (int j = 1; j <= k; j++)
					if (M[i] == N[j])count++;
			cout << k - count << endl;
		}
	}
}
DSA07006 - XÓA DẤU NGOẶC
#include<iostream>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<set>
using namespace std;
set<string> S;
queue<string> L;
void xoadaungoac(string s) {
	vector<pair<int, int>> X;
	stack<int> Z;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == '(')Z.push(i);
		if (s[i] == ')') {
			X.push_back({ Z.top(),i });
			Z.pop();
		}
	}
	for (auto x : X) {
		string f = s; f.erase(x.first, 1);
		f.erase(x.second - 1, 1);
		if (S.count(f)==0) {
			L.push(f);
			S.insert(f);
		}
	}
}
int main() {
	string s; cin >> s;
	L.push(s);
	while (L.size()) {
		string g = L.front();
		L.pop();
		xoadaungoac(g);
	}
	for (auto c : S)cout << c << endl;
	
}
DSA05031 - TỔNG BÌNH PHƯƠNG
#include<iostream>
#include<cmath>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int dp[1000000];
		for (int i = 1; i <= n; i++) {
			dp[i] = i;
			for (int j = 1; j <= sqrt(i); j++)
				dp[i] = min(dp[i], dp[i - j * j] + 1);
		}
		cout << dp[n] << endl;
	}
}
DSA05005 - SỐ BƯỚC ÍT NHẤT
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int N[1000];
		N[0] = 1;
		int res = 0;
		for (int i = 1; i < n; i++) {
			N[i] = 1;
			int m = 0;
			for (int j = 0; j < i; j++) {
				if (M[j] <= M[i]) {
					m = max(m, N[j]);
				}
			}
			N[i] += m;
			res = max(res, N[i]);
		}
		cout << n - res << endl;
	}
}
DSA05014 - CATALAN NUMBER
#include <bits/stdc++.h>
using namespace std;
typedef string bint;
bint operator*(bint a, int b) {
    if (a == "0" || b == 0)
        return "0";
    int n = a.length();
    bint c(n, '0');
    int nho = 0;
    for (int i = n - 1; i >= 0; i--) {
        nho += (a[i] - '0') * b;
        c[i] = nho % 10 + '0';
        nho /= 10;
    }
    if (nho > 0)
        c = to_string(nho) + c;
    return c;
}
bint CATALAN(int n) {
    vector<int> tu;
    for (int i = n + 2; i <= 2 * n; i++) tu.push_back(i);
    for (int i = 2; i <= n; i++) {
        int x = i;
        for (int j = 0; j < tu.size() && x > 1; j++) {
            int d = __gcd(tu[j], x);
            x /= d;
            tu[j] /= d;
        }
    }
    bint res = "1";
    for (int i = 0; i < tu.size(); i++) res = res * tu[i];
    return res;
}
int main() {
int t; cin >> t;
	while(t--){
	    int n; cin >> n;
	    cout << CATALAN(n) << endl;
	}
}
DSA06049 - ĐẾM CẶP
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;

int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		ll M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		ll res = 0;
		for (int i = 0; i < n-1; i++) {
			res += (lower_bound(M + i + 1, M + n, M[i] + k) - M)-i-1;
		}
		cout << res << endl;
	}
}
DSA02012 - DI CHUYỂN TRONG MA TRẬN
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
using namespace std;
typedef long long ll;

int count(int m,int n) {
	if (m == 1 || n == 1)return 1;
	return count(m - 1, n) + count(m, n - 1);
}
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int M[101][101];
		for (int i = 0; i < m; i++)for (int j = 0; j < n; j++)cin >> M[i][j];
		cout << count(m, n) << endl;
	}

}
DSA09022 - DFS TRÊN ĐỒ THỊ CÓ HƯỚNG
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
int n, m, u;
bool check[1001];
vector<int> A[1001];
void DFS(int u) {
	cout << u << " ";
	check[u] = true;
	for (int v : A[u]) {
		if (!check[v])
			DFS(v);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n >> m >> u;
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			
		}
		DFS(u);
		cout << endl;

	}
}
DSA06018 - BỔ SUNG PHẦN TỬ
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
#include<climits>
typedef long long ll;
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int x;
		set<int> S;
		while (n--) {
			cin >> x; S.insert(x);
		}
		int cnt = 0;
		for (int i = *S.begin(); i <= *S.rbegin(); i++)
			if (S.count(i) == 0)cnt++;
		cout << cnt << endl;
	}
}
DSA09018 - LIỆT KÊ ĐỈNH TRỤ
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
vector<int> A[1001];
bool check[1001];
void DFS(int u) {
	check[u] = true;
	for (int x : A[u]) {
		if (!check[x]) {
			DFS(x);
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		int n, m; cin >> n >> m;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int count = 0;
		for (int i = 1; i <= n; i++) {
			if (!check[i]) {
				count++;
				DFS(i);
			}
		}
		for (int i = 1; i <= n; i++) {
			int dem = 0;
			memset(check, false, sizeof(check));
			check[i] = true;
			for (int j = 1; j <= n; j++) {
				if (j != i) {
					if (!check[j]) {
						dem++;
						DFS(j);
					}
				}
			}
			if (dem > count)cout << i << " ";
		}
		cout << endl;
	}
}
DSA05007 - TỔNG LỚN NHẤT CỦA DÃY CON KHÔNG KỀ NHAU
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#define mod 1000000007
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000000];
		for (int i = 0; i < n; i++)cin >> M[i];
		ll res = 0;
		ll dp[1000000];
		dp[0] = M[0]; dp[1] = max(M[1], M[0]);
		for (int i = 2; i < n; i++) {
			dp[i] = max(dp[i - 1], M[i] + dp[i - 2]);
			res = max(res, dp[i]);
		}
		cout << res << endl;
	}
}
DSA05042 - DÃY CON LIÊN TIẾP TỔNG BẰNG K
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//

string Load(v(ll) M, ll n, ll k) {
	if (k == 0)return "NO";
	multiset<ll> S;
	FORD(i, 1, n + 1)S.insert(M[i]);
	FORD(i, 0, n + 1)if (S.count(M[i] + k) != 0)return "YES";
	return "NO";
}

int main() {
	int t; cin >> t;
	while (t--) {
		ll n, k; cin >> n >> k;
		v(ll) M(n + 1, 0);
		FORD(i, 1, n + 1)cin >> M[i];
		FORD(i, 1, n + 1)M[i] += M[i - 1];
		cout << Load(M, n, k) << endl;
	}
}
DSA03018 - SỐ MAY MẮN
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int a, b;
		bool ok=false;
		for (int i = 2;i<n/4; i++) {
			if (7 * i >= n&&(7*i-n)%3==0) {
				a = (7 * i - n) / 3;
				b = i - a;
				ok = true;
				break;
			}
		}
		for (int i = 0; i < a; i++)cout << 4;
		for (int i = 0; i < b; i++)cout << 7;
		if (ok == false)cout << -1;
		cout << endl;
	}
} 
xxx,.cpp
#include<iostream>
using namespace std;


int sum(int* M, int n) {
	int dp1[1000], dp2[1000];
	int res = 0;
	for (int i = 0; i < n; i++) {
		dp1[i] = M[i];
		int maxx = 0;
		for (int j = 0; j < i; j++)
			if(M[j]<M[i])
			maxx = max(maxx, dp1[j]);
		dp1[i] += maxx;
		res = max(res, dp1[i]);
	}
	
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1001];
		for (int i = 0; i < n; i++)cin >> M[i];
		cout << sum(M, n) << endl;
	}
}
DSA05028 - BIẾN ĐỔI XÂU
#include<iostream>
using namespace std;
#define mod 1000000007
int main() {
	int t; cin >> t;
	while (t--) {
		string a, b; cin >> a >> b;
		int dp[100][100];
		for (int i = 0; i <= a.length(); i++) {
			for (int j = 0; j <= b.length(); j++)
			{
				if (i == 0 || j == 0)dp[i][j] = i + j;
				else if (a[i - 1] == b[j - 1])dp[i][j] = dp[i - 1][j - 1];
				else dp[i][j] = min(dp[i - 1][j - 1], min(dp[i - 1][j], dp[i][j - 1]))+1;
			}
		}
		cout << dp[a.length()][b.length()] << endl;
	}
}
DSA01023 - SỐ THỨ TỰ TỔ HỢP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(int) M(k); cin(M, k);
		string tmp = string(n, '1');
		for (auto x : M)tmp[x - 1] = '0';
		string s = string(k, '0') + string(n - k, '1');
		int count = 0;
		do {
			count++;
			if (tmp == s) {
				cout << count << endl;
				break;
			}
		} while (next_permutation(all(s)));
	}
}

//__________________________B20DCPT173_____________________________//
DSA09032 - KẾT BẠN
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
vector<int> A[100001];
bool check[100001];
int res = 0;
int dem = 0;
void DFS(int u) {
	dem++;
	check[u] = true;
	for (auto v : A[u])
		if (!check[v])DFS(v);
}
int main() {
	int t; cin >> t;
	while (t--) {
		for (int i = 0; i < 1001; i++)A[i].clear();
		res = 0;
		dem = 0;
		memset(check, false, sizeof(check));
		int m, n; cin >> m >> n;
		for (int i = 0; i < n; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int x = 0;
		for (int i = 1; i <= m; i++) {
			if (!check[i]) {
				DFS(i);
				res = max(res, dem-x);
				x = dem;
			}
		}
		cout << res << endl;
	}
}
DSA11025 - CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 2.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


void Load(v(int) M, int left,int right) {
	if (left >= right)return;
	int mid = (left + right) / 2;
	cout << M[mid] << " ";
	Load(M, mid + 1, right);
	Load(M, left, mid);
	
}


int main() {
	faster();
	run() {
		int n;cin >> n;
		v(int) M(n);cin(M, n);
		sort(all(M),greater<>());
		Load(M, 0, n);
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA07019 - HÌNH CHỮ NHẬT LỚN NHẤT
#include<iostream>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<set>
using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		stack<int> X;
		int i = 0;
		ll res = 0;
		while (i < n) {
			if (X.size() == 0 || M[i] > M[X.top()]) {
				X.push(i); i++;
			}
			else {
				int x = X.top();
				X.pop();
				if (X.size() == 0)res = max(res, (ll)i * M[x]);
				else res = max(res, (ll)M[x] * (i - X.top() - 1));
			}
		}
		while (X.size()) {
			int x = X.top();
			X.pop();
			if (X.size() == 0)res = max(res,(ll)i * M[x]);
			else res = max(res, (ll)M[x] * (i - X.top() - 1));
		}
		cout << res << endl;
	}
	
}
DSA03027 - GIÁ TRỊ LỚN NHẤT
#include<iostream>
#include<vector>
using namespace std;
int main() {
	int n, a; cin >> n;
	long long sum = 0;
	for (int i = 0; i < n; i++) {
		cin >> a;
		if (a > 0)sum += a * 2;
	}
	cout << sum << endl;
}
DSA06027 - SẮP XẾP ĐỔI CHỖ TRỰC TIẾP - LIỆT KÊ NGƯỢC
#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int x = 1;
		vector<vector<int>> N;

		for (int i = 0; i < n - 1; i++) {
			for (int j = i + 1; j < n; j++) {
				if (M[i] > M[j]) {
					swap(M[i], M[j]);
				}
			}
			vector<int> X;
			for (int l = 0; l < n; l++)X.push_back(M[l]);
			N.push_back(X);
		}
		for (int i = N.size() - 1; i >= 0; i--) {
			cout << "Buoc " << i + 1 << ": ";
			for (int j = 0; j < n; j++)
				cout << N[i][j] << " ";
			cout << endl;
		}
	}
}
DSA09012 - LIỆT KÊ ĐỈNH TRỤ
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
vector<int> A[1001];
bool check[1001];
void DFS(int u) {
	check[u] = true;
	for (int x : A[u]) {
		if (!check[x]) {
			DFS(x);
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		for (int i = 0; i < 1001; i++)A[i].clear();
		int n, m; cin >> n >> m;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int count = 0;
		for (int i = 1; i <= n; i++) {
			if (!check[i]) {
				count++;
				DFS(i);
			}
		}
		for (int i = 1; i <= n; i++) {
			int dem = 0;
			memset(check, false, sizeof(check));
			check[i] = true;
			for (int j = 1; j <= n; j++) {
				if (j != i) {
					if (!check[j]) {
						dem++;
						DFS(j);
					}
				}
			}
			if (dem > count)cout << i << " ";
		}
		cout << endl;
	}
}
DSA11022 - NODE TRUNG GIAN CỦA CÂY NHỊ PHÂN TÌM KIẾM.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
	using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree& T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}
int res = 0;
void Load(tree T) {
	if (!T->pLeft && !T->pRight)res++;
	if (T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int x; cin >> x;
			Add(T, x);
		}
		res = 0;
		Load(T);
		cout << n - res << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA03007 - GIÁ TRỊ NHỎ NHẤT CỦA BIỂU THỨC
#include<iostream>
#include<algorithm>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000], N[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 0; i < n; i++)cin >> N[i];
		sort(M, M + n);
		sort(N, N + n,greater<>());
		long long res = 0;
		for (int i = 0; i < n; i++)res += M[i] * N[i];
		cout << res << endl;
	}
} 
DSAKT012 - ĐỔI TIỀN.cpp
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long ll;
ll cnt = 0, sum = 0;
int n, k;
int M[100];
void Try(int j) {
	for (int i = 1; i >= 0; i--) {
		sum += M[j]*i;
		cnt += i;
		if (sum == k) {
			cout << cnt << endl;
			exit(0);
		}
		if (sum < k && j < n - 1)Try(j + 1);
		sum -= M[j]*i;
		cnt -= i;
	}
}

int main() {
	cin >> n >> k;
	for (int i = 0; i < n; i++)cin >> M[i];
	sort(M, M + n, greater<>());
	Try(0);
	cout << -1 << endl;
}
DSA06020 - TÌM KIẾM
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, x; cin >> n >> x;
		int M[1000000];
		set<int> X;
		for (int i = 0; i < n; i++) {
			cin >> M[i];
			X.insert(M[i]);
		}
		if (X.count(x) == 0)cout << -1 << endl;
		else cout << 1 << endl;
	}
}
DSA08009 - BIẾN ĐỔI S – T
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
#include<set>

using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		ll s, t; cin >> s >> t;
		queue<pair<ll, ll>> X;
		set<int> S;
		S.insert( s);
		X.push({ s,0 });
		while (X.size()) {
			pair<ll, ll> x = X.front();
			X.pop();
			if (x.first-1 == t||x.first*2==t) {
				cout << x.second+1 << endl;
				break;
			}
			if (S.count( x.first - 1) == 0&&x.first-1>0) {
				X.push({ x.first - 1,x.second + 1 });
				S.insert(x.first - 1);
			}
			if (S.count( x.first * 2) == 0 && x.first < t) {
				X.push({ x.first * 2,x.second + 1 });
				S.insert( x.first * 2);
			}
			
		}
	}
}
DSA03021 - TÌM DÃY SỐ
#include <iostream>
#include<string.h>
using namespace std;
int main() {
    int n, x, minn = 1e9; cin >> n;
    int s[2][100000];
    memset(s, 0, sizeof(s));
    for (int i = 0; i < n; i++) {
        cin >> x;
        minn = min(x, minn);
        s[0][1]++;
        s[1][1] += x;
        for (int j = 2; j <= x / 2; j++) {
            if (x / j != x / (j - 1)) {
                s[0][x / j]++;
                s[1][x / j] += j;
            }
        }
    }
    for (int i = minn; i > 0; i--) {
        if (s[0][i] == n) {
            cout << s[1][i];
            break;
        }
    }
}
DSA11014 - TỔNG NODE LÁ BÊN PHẢI.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int res;


struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void addNODE(int n, tree& root)
{
	map<int, tree>m;
	for (int i = 0; i < n; i++)
	{
		int u, v;
		char c;
		cin >> u >> v >> c;
		if (m.find(u) == m.end())
		{
			(root) = new node(u);
			if (c == 'L')
			{
				(root)->pLeft = new node(v);
				m[v] = (root)->pLeft;
			}
			else
			{
				(root)->pRight = new node(v);
				m[v] = (root)->pRight;
			}
			m[u] = (root);
		}
		else
		{
			if (c == 'L')
			{
				m[u]->pLeft = new node(v);
				m[v] = m[u]->pLeft;
			}
			else
			{
				m[u]->pRight = new node(v);
				m[v] = m[u]->pRight;
			}
		}
	}
}

bool isLeaf(tree T) {
	if (!T)return false;
	if (!T->pLeft && !T->pRight)return true;
	return false;
}
int Sum(tree T) {
	if (!T)return 0;
	int res = 0;
	if (isLeaf(T->pRight))res = T->pRight->data;
	if (T->pRight)res += Sum(T->pRight);
	if (T->pLeft && !isLeaf(T->pLeft))res += Sum(T->pLeft);
	return res;
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		addNODE(n, T);
		cout << Sum(T) << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA05018 - XÂU CON ĐỐI XỨNG DÀI NHẤT
#include<iostream>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int res = 0;
		string s; cin >> s;
		int maxleng = 1;
		for (int i = 0; i < s.length(); i++) {
			int l = i, r = i;
			while (l >= 0 && r < s.length()) {
				if (s[l] == s[r]) {
					maxleng = max(maxleng, r - l + 1);
					l--; r++;
				}
				else break;

			}
		}
		for (int i = 0; i < s.length() - 1; i++) {
			int l = i, r = i + 1;
			while (l >= 0 && r < s.length()) {
				if (s[l] == s[r]) {
					maxleng = max(maxleng, r - l + 1);
					l--; r++;
				}
				else break;

			}
		}
		cout << maxleng << endl;
	}
}
DSA03017 - GIÁ TRỊ NHỎ NHẤT CỦA XÂU
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int k; cin >> k;
		string s; cin >> s;
		vector<int> M(100000, 0);
		for (auto x : s)M[x]++;
		multiset<int> X;
		for (int i = 'A'; i <= 'Z'; i++)if (M[i] > 0)X.insert(M[i]);
		while (k--) {
			int a = *X.rbegin();
			X.erase(X.find(a));
			X.insert(a - 1);
		}
		long long res = 0;
		for (auto x : X)res += (long long)x * x;
		cout << res << endl;
	}
} 
DSA09009 - TÌM SỐ THÀNH PHẦN LIÊN THÔNG VỚI BFS
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;
vector<int> A[1001];
bool check[1001];
void reset() {
	for (int i = 0; i < 1001; i++)A[i].clear();
	memset(check, false, sizeof(check));
}
void DFS(int u) {
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		reset();
		int m, n; cin >> m >> n;
		while (n--) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int cnt = 0;
		for (int i = 1; i <= m; i++) {
			if (!check[i]) {
				cnt++;
				DFS(i);
			}
		}
		cout << cnt << endl;
	}
}
DSA07003 - KIỂM TRA BIỂU THỨC SỐ HỌC.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t;cin.ignore(); while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

string check(string s) {
	stack<char> S;
	for (auto c : s) {
		if (c == ')') {
			bool ok = true;
			while (S.top() != '(') {
				char tmp = S.top();
				if (tmp == '+' || tmp == '-' || tmp == '*' || tmp == '/')ok = false;
				S.pop();
			}
			if (ok)return "Yes";
			S.pop();
		}
		else S.push(c);
	}
	return "No";
}

int main() {
	faster();
	run() {
		string s; cin >> s;
		cout << check(s) << endl;
	}
}

//__________________________B20DCPT173__________________________//
DSA07007 - SO SÁNH BIỂU THỨC
#include<iostream>
#include<string>
#include<stack>
using namespace std;
string test(string s) {
	stack<char> str;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == ')') {
			string temp;
			while (str.size() && str.top() != '(') {
				temp = str.top() + temp;
				str.pop();
			}
			str.pop();
			char t;
			if (str.size())
				t = str.top();
			for (int j = 0; j < temp.length(); j++) {
				if (t == '-' && str.size()) {
					if (temp[j] == '-')
						str.push('+');
					else if (temp[j] == '+')
						str.push('-');
					else
						str.push(temp[j]);
				}
				else {
					str.push(temp[j]);
				}
			}
		}
		else
			str.push(s[i]);
	}
	string res;
	while (str.size()) {
		res = str.top() + res;
		str.pop();
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string a, b; cin >> a >> b;
		if (test(a) == test(b))cout << "YES\n";
		else cout << "NO\n";
	}
}
DSA05024 - TỔNG BẰNG K
#include<iostream>
using namespace std;
#define mod 1000000007
int main() {
	int t; cin >> t;
	while (t--) {
		int n, m; cin >> n >> m;
		int M[1000];
		long long dp[1001] = { 0 };
		dp[0] = 1;
		for (int i = 0; i < n; i++)cin >> M[i];
		for (int i = 1; i <= m; i++) {
			for (int j = 0; j < n; j++) {
				if (i >= M[j])
					dp[i] += dp[i - M[j]] % mod;
				dp[i] %= mod;
			}
		}
		cout << dp[m] << endl;
	}
}
DSA11024 - CÂY NHỊ PHÂN TÌM KIẾM CÂN BẰNG 1.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int main() {
	faster();
	run() {
		int n;cin >> n;
		v(int) M(n);cin(M, n);
		sort(all(M));
		cout << M[(n-1) / 2] << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA11016 - BIẾN ĐỔI SANG CÂY NHỊ PHÂN TÌM KIẾM.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//




int main() {
	faster();
	run() {
		int n; cin >> n;
		set<int> S;
		FOR(i, 0, n) {
			int u, v;
			char c;
			cin >> u >> v >> c;
			S.insert(u);
			S.insert(v);
		}
		for (auto s : S)cout << s << ' ';
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA02013 - SỐ NGUYÊN TỐ.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
using namespace std;
vector<int> X;
vector<string> S;
int n, p, s;
int snt(int n) {
	if (n < 2)return 0;
	else
		for (int i = 2; i <= sqrt(n); i++)
			if (n % i == 0)return 0;
	return 1;
}
void Try(int i, string f, int sum,int x) {
	for (int j = i; j < X.size(); j++) {
		if (sum == s && x == n) {
			S.push_back(f);
			return;
		}
		else if (sum < s && x < n) Try(j + 1, f + to_string(X[j]) + " ", sum + X[j], x + 1);
		else return;
	}
}
int main() {
	for (int i = 2; i < 200; i++)
		if (snt(i))X.push_back(i);
	int t; cin >> t;
	while (t--) {
		cin >> n >> p >> s;
		S.clear();
		int b = upper_bound(X.begin(), X.end(), p) - X.begin();
		Try(b, "", 0, 0);
		cout << S.size() << endl;
		for (string s : S)cout << s << endl;
	}
}
DSA07027 - PHẦN TỬ BÊN PHẢI ĐẦU TIÊN LỚN HƠN
#include<iostream>
#include<algorithm>
#include<set>
#include<vector>
#include<sstream>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<int> M(n), N(n, 1);
		for (int i = 0; i < n; i++)cin >> M[i];
		vector<int> S;
		S.push_back(-1);
		for (int i = n-1; i >=0; i--) {
			N[i] = 1;
			for (int j = i + 1; j < n;) {
				if (M[j] <= M[i]) {
					N[i] += N[j];
					j += N[j];
					if (j >= n) {
						S.push_back(-1);
						break;
					}
				}
				else {
					S.push_back(M[j]); break;
				}
			}
		}
		for (int i = S.size() - 1; i >= 0; i--)cout << S[i] << " ";
		cout << endl;
	}
}
DSA04004 - GẤP ĐÔI DÃY SỐ
#include<iostream>
using namespace std;
int test(long long int k, int x, int y) {
	if (k % 4 == 0 || (k - 2) % 4 == 0)return x;
	else if ((k - 1) % 4 == 0)return y;
	else {
		return test(k / 4, x + 2, y + 2);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		long long n, k; cin >> n >> k;
		cout << test(k - 1, 1, 2) << endl;
	}
}
DSA05021 - CẶP SỐ
#include<iostream>
#include<string.h>
#include<stack>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		pair<int, int> M[101];
		int n; cin >> n;
		for (int i = 0; i < n; i++)cin >> M[i].first >> M[i].second;
		for (int i = 0; i < n; i++)
			for (int j = i + 1; j < n; j++)
				if (M[i].first > M[j].first)swap(M[i], M[j]);
		int dp[101];
		int res = 0;
		for (int i = 0; i < n; i++) {
			dp[i] = 1;
			int m = 0;
			for (int j = 0; j < i; j++) {
				if (M[i].first > M[j].second)m = max(dp[j], m);
			}
			dp[i] += m;
			res = max(dp[i], res);
		}
		cout << res << endl;
	}
}
DSA01015 - TÌM BỘI SỐ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

string boiSo(int n) {
	queue<string> Q;
	Q.push("9");
	while (Q.size()) {
		string tmp = Q.front();
		Q.pop();
		if (stoll(tmp) % n == 0)return tmp;
		Q.push(tmp + "0");
		Q.push(tmp + "9");
	}
	return "-1";
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		cout << boiSo(n) << endl;
	}
}

//__________________________B20DCPT173_____________________________//
DSA07029 - GIẢI MÃ XÂU KÝ TỰ
#include <iostream>
#include <stack>
#include<string>
using namespace std;
string xxx(string s) {
	stack<char> str;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == ']') {
			string temp;
			while (str.size() && str.top() != '[') {
				temp = str.top() + temp;
				str.pop();
			}
			str.pop();
			string number;
			while (str.size() && isdigit(str.top())) {
				number = str.top() + number;
				str.pop();
			}
			int num = 1;
			if (number.size())
				num = stoi(number);
			string sss;
			for (int j = 0; j < num; j++)sss += temp;
			for (int j = 0; j < sss.length(); j++)
				str.push(sss[j]);
		}
		else {
			str.push(s[i]);
		}
	}
	string res;
	while (str.size()) {
		res = str.top() + res;
		str.pop();
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << xxx(s) << endl;
	}
}
DSA08029 - QUAY HÌNH VUÔNG
#include<iostream>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<set>
using namespace std;
typedef long long ll;
bool ktra(vector<int> A, vector<int> B) {
	for (int i = 0; i < 6; i++)if (A[i] != B[i])return false;
	return true;
}
vector<int> quay1(vector<int> A) {
	int tmp = A[0];
	A[0] = A[3]; 
	A[3] = A[4]; 
	A[4] = A[1]; 
	A[1] = tmp;
	return A;
}
vector<int> quay2(vector<int> A) {
	int tmp = A[1];
	A[1] = A[4];
	A[4] = A[5];
	A[5] = A[2];
	A[2] = tmp;
	return A;
}
int main() {
	int t; cin >> t;
	while (t--) {
		queue<pair<vector<int>, int>> W;
		set<vector<int>> S;
		vector<int> A(6), B(6);
		for (int i = 0; i < 6; i++)cin >> A[i];
		for (int j = 0; j < 6; j++)cin >> B[j];
		W.push({ A,0 });
		S.insert(A);
		while (W.size()) {
			vector<int> M = W.front().first;
			int cnt = W.front().second;
			W.pop();
			if (ktra(M, B)) {
				cout << cnt << endl; break;
			}
			vector<int> N = M;
			vector<int> X = quay1(M), Y = quay2(N);
			if (S.count(X) == 0) {
				W.push({ X,cnt + 1 });
				S.insert(X);
			}
			if (S.count(Y) == 0) {
				W.push({ Y,cnt + 1 });
				S.insert(Y);
			}
		}
	}
	
}
DSA04022 - KÝ TỰ THỨ K TRONG XÂU
#include<iostream>
using namespace std;
char M[100];
char test(long long int k, int x, int y) {
	if (k % 4 == 0 || (k - 2) % 4 == 0)return M[x];
	else if ((k - 1) % 4 == 0)return M[y];
	else {
		return test(k / 4, x + 2, y + 2);
	}
}
int main() {
	int t; cin >> t;
	for (int i = 65; i <= 90; i++)M[i - 64] = char(i);
	while (t--) {
		long long n, k; cin >> n >> k;
		cout << test(k - 1, 1, 2) << endl;
	}
}
DSA03026 - LỰA CHỌN THAM LAM
#include<iostream>
using namespace std;

int main() {
	int n, s; cin >> n >> s;
	int x = s;
	int y = s;
	int M[100] = { 0 }, N[100] = { 0 };
	M[0] = 1;
	s--;
	for (int i = n - 1; i >= 0; i--)
	{
		if (s >= 9) {
			M[i] = 9;
			s -= 9;
		}
		else {
			if (i == 0)
				M[i] = s + 1;
			else
				M[i] = s; s = 0;
			break;
		}
	}
	for (int i = 0; i < n; i++) {
		if (x >= 9) {
			N[i] = 9;
			x -= 9;
		}
		else {
			N[i] = x; x = 0;
			break;
		}
	}
	if (y == 0 || y > 9 * n)cout << -1 << " " << -1 << endl;
	else {
		for (int i = 0; i < n; i++)cout << M[i];
		cout << " ";
		for (int i = 0; i < n; i++)cout << N[i];
		cout << endl;
	}
}
DSA10005 - CHU TRÌNH EULER TRONG ĐỒ THỊ CÓ HƯỚNG.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define reset  FORD(i, 0, 1001)A[i].clear(), check[i] = false;
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
#define pb push_back
#define pf push_front
using namespace std;

//____________________T_O_A_N_______________________//
int n, m;
bool check[1001];
bool h;
bool ok[1001][1001];
v(int) A[1001];
bool Euler() {
	FORD(i, 1, n + 1) {
		int x = 0, y = 0;
		FORD(j, 1, n + 1) {
			if (ok[i][j])x++;
			if (ok[j][i])y++;
		}
		if (x != y)return 0;
	}
	return 1;
}

int main() {
	int t; cin >> t;
	while (t--) {
		reset memset(ok,0,sizeof(ok));
		cin >> n >> m;
		FORD(i,0,m) {
			int a, b; cin >> a >> b;
			ok[a][b] = 1;
		}
		cout << Euler() << endl;
	}
	return 0;
}
DSA02014 - TỪ ĐIỂN
#include<iostream>
#include<climits>
#include<string.h>
#include<vector>
#include<set>
#include<algorithm>
using namespace std;
typedef long long ll;
int X[] = {-1,-1,-1,0,0,1,1,1};
int Y[] = {-1,0,1,-1,1,-1,0,1};
int k, m, n;
bool check[100][100];
string N[100];
vector<string> S;
char M[100][100];
void Try(int x, int y,string s) {
	for (int i = 0; i < k; i++)if (N[i] == s)S.push_back(s);
	for (int i = 0; i < 8; i++) {
		int a =x + X[i];
		int b =y + Y[i];
		if (a >= 0 && a < m && b >= 0 && b < n && !check[a][b]) {
			check[a][b] = true;
			Try(a, b, s + M[a][b]);
			check[a][b] = false;
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		S.clear();
		cin >> k >> m >> n;
		for (int i = 0; i < k; i++) cin >> N[i];
		for (int i = 0; i < m; i++)
			for (int j = 0; j < n; j++)
				cin >> M[i][j];
		for (int i = 0; i < m; i++) {
			for (int j = 0; j < n; j++) {
				memset(check, false, sizeof(check));
				check[i][j] = true;
				string s = "";
				Try(i, j, s+M[i][j]);
			}
		}
		if (S.size() == 0)cout << -1;
		else
		for (auto s:S) {
			cout << s << " ";
		}
		cout << endl;
	}
}
DSA02020 - SỐ NHỎ NHẤT CÓ N ƯỚC SỐ
#include<iostream>
#include<climits>
using namespace std;
typedef long long ll;
int M[] = { 2,3,5,7,11,13,17,19,23,29 };
ll res;
int n;
void Try(int i,ll x,ll y) {
	if (y > n)return;
	if (y == n)res = min(res, x);
	for (int j = 1;; j++) {
		if (x * M[i] > res)break;
		x *= M[i];
		Try(i + 1,x, y * (j + 1));
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n;
		res = 1e18;
		Try(0, 1, 1);
		cout << res << endl;
	}
}
DSA10009 - FLOYD.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

int main() {
	faster();
	int n, m, ok[1001][1001];
	cin >> n >> m;
	FOR(i, 1, n + 1)FOR(j, 1, n + 1)ok[i][j] = 1000000000;
	FOR(i, 1, n + 1)ok[i][i] = 0;
	FOR(i, 0, m) {
		int u, v, w; cin >> u >> v >> w;
		ok[u][v] = ok[v][u] = w;
	}
	FOR(k, 1, n + 1)
		FOR(i, 1, n + 1)
			FOR(j, 1, n + 1)
				ok[i][j] = min(ok[i][j], ok[i][k] + ok[k][j]);
	run() {
		int u, v; cin >> u >> v;
		cout << ok[u][v] << endl;
	}
	
}


//_______________________T_O_A_N________________________//
DSA11018 - XÂY DỰNG LẠI CÂY NHỊ PHÂN TÌM KIẾM.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};


void Add(tree&T,int x) {
	if (T == NULL)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Load(tree T) {
	cout << T->data << " ";
	if(T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
}

int main(){
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		FOR(i, 0, n) {
			int x; cin >> x;
			Add(T, x);
		}
		Load(T);
		cout << endl;
	}
}



//_______________________T_O_A_N________________________//
DSA11030 - KHOẢNG CÁCH GIỮA HAI NODE.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

bool check[1001];
v(int) A[1001];
int res = 0;
bool ok;
void DFS(int u, int count, int v) {
	if (ok)return;
	check[u] = true;
	if (u == v) {
		res = count;
		ok = true;
		return;
	}
	for (auto x : A[u])if (!check[x])DFS(x, count + 1, v);
}

int main() {
	faster();
	run() {
		reset();
		int n; cin >> n;
		FOR(i, 0, n - 1) {
			int u, v; cin >> u >> v;
			A[u].push_back(v);
			A[v].push_back(u);
		}
		int q; cin >> q;
		while (q--) {
			res = 0;
			ok = false;
			rs(check, false);
			int u, v; cin >> u >> v;
			DFS(u, 0, v);
			cout << res << endl;
		}
	}
}



//_______________________T_O_A_N________________________//
DSA02022 - NGÀY ĐẶC BIỆT
#include<stdio.h>
int main() {
	printf("02/02/2000\n02/02/2002\n02/02/2020\n02/02/2022\n02/02/2200\n02/02/2202\n02/02/2220\n02/02/2222\n20/02/2000\n20/02/2002\n20/02/2020\n20/02/2022\n20/02/2200\n20/02/2202\n20/02/2220\n20/02/2222\n22/02/2000\n22/02/2002\n22/02/2020\n22/02/2022\n22/02/2200\n22/02/2202\n22/02/2220\n22/02/2222");
}
DSA07023 - ĐẢO TỪ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t;cin.ignore(); while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	run() {
		string s; getline(cin, s);
		stringstream ss(s);
		string token;
		string res = "";
		while (ss >> token) {
			res = token + " " + res;
		}
		cout << res << endl;
	}
}

//__________________________B20DCPT173__________________________//
DSA11028 - ĐỘ CAO CỦA CÂY.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 100001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

v(int) A[100001];
bool check[100001];
int res = 0;

void DFS(int u, int count) {
	res = max(res, count);
	check[u] = true;
	for (auto x : A[u])if (!check[x])DFS(x, count + 1);
}
int main() {
	faster();
	run() {
		reset();
		int n; cin >> n;
		FOR(i, 0, n - 1) {
			int u, v; cin >> u >> v;
			A[u].push_back(v);
		}
		res = 0;
		DFS(1, 0);
		cout << res << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA01002 - TẬP CON KẾ TIẾP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//



int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(int) M(k); cin(M, k);
		string s = string(n, '1');
		FOR(i, 0, k)s[M[i] - 1] = '0';
		next_permutation(all(s));
		FOR(i, 0, n)if (s[i] == '0')cout << i + 1 << " ";
		cout << endl;
	}
}
//_________________________B20DCPT173__________________________//
DSA02045 - TẬP CON CỦA XÂU KÝ TỰ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int n;
string s;
v(string) res;

void Try(string f, int i) {
	if(sz(f))
	res.pb(f);
	FOR(j, i, n)Try(f + s[j], j+1);
}

int main() {
	faster();
	run() {
		res.clear();
		cin >> n >> s;
		Try("", 0);
		sort(all(res));
		for (auto s : res)cout << s << " ";
		cout << endl;
	}
}

//__________________________B20DCPT173__________________________//
DSA03009 - SẮP XẾP CÔNG VIỆC 2
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
struct job {
	int a, b, c;
};
bool cmp(job A, job B) {
	return A.c > B.c;
	
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<job> M(n);
		bool ok[100000] = { false };
		for (int i = 0; i < n; i++)cin >> M[i].a >> M[i].b >> M[i].c;
		sort(M.begin(), M.end(), cmp);
		long long res = 0;
		int dem = 0;
		for (int i = 0; i < n; i++) {
			for (int j = M[i].b; j >0; j--) {
				if (!ok[j]) {
					res += M[i].c;
					ok[j] = true;
					dem++;
					break;
				}
			}
		}
		cout << dem<<" "<<res << endl;
	}
}
DSA07016 - BIỂU THỨC TĂNG GIẢM
#include<iostream>
#include<vector>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		vector<int> M;
		int min = 1, pos = 0;
		if (s[0] == 'I') {
			M.push_back(1);
			M.push_back(2);
			min = 3, pos = 1;
		}
		else
		{
			M.push_back(2);
			M.push_back(1);
			min = 3; pos = 0;
		}
		for (int i = 1; i < s.length(); i++) {
			if (s[i] == 'I') {
				M.push_back(min);
				min++; pos = i + 1;
			}
			else {
				M.push_back(M[i]);
				for (int j = pos; j <= i; j++)M[j]++;
				min++;
			}
		}
		for (int i = 0; i < M.size(); i++)cout << M[i];
		cout << endl;
	}
}
DSA07014 - TÍNH GIÁ TRỊ BIỂU THỨC TIỀN TỐ
#include<iostream>
#include<string>
#include<stack>
using namespace std;
int tinh(int a, int b, char c) {
	if (c == '+')return a + b;
	if (c == '-')return a - b;
	if (c == '*')return a * b;
	if (c == '/')return a / b;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<int> X;
		for (int i = s.length() - 1; i >= 0; i--) {
			if (s[i] >= '0' && s[i] <= '9')X.push(s[i] - '0');
			else {
				int a = X.top(); X.pop();
				int b = X.top(); X.pop();
				X.push(tinh(a, b, s[i]));
			}
		}
		cout << X.top() << endl;
	}
}
DSA07008 - BIẾN ĐỔI TRUNG TỐ - HẬU TỐ
#include<iostream>
#include<string>
#include<stack>
using namespace std;
int xxx(char x) {
	if (x == '+' || x == '-')return 1;
	if (x == '/' || x == '*')return 2;
	if (x == '%' || x == '^')return 3;
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<char> x;
		for (int i = 0; i < s.length(); i++) {
			if (s[i] >= 'a' && s[i] <= 'z' || s[i] >= 'A' && s[i] <= 'Z')
				cout << s[i];
			else if (s[i] == '(')x.push(s[i]);
			else if (s[i] == ')') {
				while (x.size() && x.top() != '(') {
					cout << x.top();
					x.pop();
				}
				x.pop();
			}
			else {
				while (x.size() && xxx(x.top()) >= xxx(s[i])) {
					cout << x.top();
					x.pop();
				}
				x.push(s[i]);
			}
		}
		while (x.size()) {
			if (x.top() == '(')x.pop();
			else {
				cout << x.top();
				x.pop();
			}
		}
		cout << endl;
	}
}
DSA02031 - GHÉP CHỮ CÁI.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

bool check(v(char) M, int n) {
	FOR(i, 1, n - 1) {
		if (M[i] == 'A' || M[i] == 'E') {
			if (M[i - 1] != 'A' && M[i - 1] != 'E' && M[i + 1] != 'A' && M[i + 1] != 'E')return false;
		}
	}
	return true;
}
int main() {
	char c; cin >> c;
	v(char) M(c - 'A' + 1);
	iota(all(M), 'A');
	do {
		if (check(M, sz(M))) {
			cout(M, sz(M));
			cout << endl;
		}
	} while (next_permutation(all(M)));
}

//__________________________B20DCPT173__________________________//
DSA02030 - LIỆT KÊ XÂU KÝ TỰ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//
char c;
int k;

void Try(string s,char x){
	if(sz(s)==k){
		cout<<s<<endl;return;
	}
	FOR(j,x,c+1)Try(s+string(1,j),j);
}

int main() {
	faster();
	cin>>c>>k;
	Try("",'A');
}
//_________________________B20DCPT173__________________________//
DSA08014 - GIEO MẦM
#include<iostream>
#include<string.h>
#include<stack>
#include<vector>
#include<queue>
#include<set>
using namespace std;
typedef long long ll;
bool ktra(int M[500][500], int m, int n) {
	for (int i = 0; i < m; i++)
		for (int j = 0; j < n; j++)
			if (M[i][j] == 1)return false;
	return true;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int M[500][500];
		bool check[500][500];
		for (int i = 0; i < m; i++)for (int j = 0; j < n; j++)cin >> M[i][j];
		int cnt = 0;
		while (1) {
			bool ok = false;
			memset(check, false, sizeof(check));
			for (int i = 0; i < m; i++) {
				for (int j = 0; j < n; j++) {
					if (!check[i][j]) {
						if (M[i][j] == 2) {
							if (i > 0 && M[i - 1][j] == 1) {
								M[i - 1][j] = 2; check[i - 1][j] = true; ok = true;
							}
							if (i < m - 1&&M[i+1][j]==1) {
								M[i + 1][j] = 2; check[i + 1][j] = true; ok = true;
							}
							if (j > 0 && M[i][j - 1] == 1) {
								M[i][j - 1] = 2; check[i][j - 1] = true; ok = true;
							}
							if (j < n - 1 && M[i][j + 1] == 1) {
								M[i][j + 1] = 2; check[i][j + 1] = true; ok = true;
							}
						}
					}
				}
			}
			if (!ok)break;
			cnt++;
		}
		if (!ktra(M, m, n))cout << -1 << endl;
		else
		cout << cnt << endl;
	}
	
}
DSA04019 - CẶP ĐIỂM GẦN NHẤT.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
#include<iomanip>
#include<cfloat>
using namespace std;
typedef long long ll;
typedef pair<double, double> p;
typedef vector<p> v;
double Distance(p A, p B) {
	return double(sqrt((A.first - B.first) * (A.first - B.first) + (A.second - B.second) * (A.second - B.second)));
}
bool cmp(p A, p B) {
	return A.second > B.second;
}
double _Min1(p*M,int n) {
	double a = FLT_MAX;
	for (int i = 0; i < n; i++)
		for (int j = i + 1; j < n; j++)
			a = min(a, Distance(M[i], M[j]));
	return a;
}
double _Min2(v X,double minx) {
	double a = minx;
	sort(X.begin(), X.end());
	for (int i = 0; i < X.size(); i++)
		for (int j = i + 1; j < X.size()&&(X[j].second-X[i].second)<a; j++)
			a = min(a, Distance(X[i], X[j]));
	return a;
}
double Load(p*M,int n) {
	if (n<=3)return _Min1(M,n);
	int mid = n / 2;
	double minx = min(Load(M, mid), Load(M + mid, n - mid));
	v X;
	for (int i = 0; i < n; i++)
		if (abs(M[i].first - M[mid].first) < minx)
			X.push_back(M[i]);
	return min(minx, _Min2(X,minx));
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		p M[100000];
		for (int i = 0; i < n; i++)cin >> M[i].first >> M[i].second;
		sort(M, M+n);
		if(n>1)
		cout << setprecision(6) << fixed << Load(M, n) << endl;
		else cout<<endl;
	}
}
DSA02007 - ĐỔI CHỖ CÁC CHỮ SỐ
#include<iostream>
#include<string>
using namespace std;
void test(string s, string& a, int k) {
	if (k == 0)return;
	for (int i = 0; i < s.length() - 1; i++) {
		for (int j = i + 1; j < s.length(); j++) {
			if (s[i] < s[j]) {
				swap(s[i], s[j]);
				if (a < s)a = s;
				test(s, a, k - 1);
				swap(s[i], s[j]);
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; int k;
		cin >> k >> s;
		string a = s;
		test(s, a, k);
		cout << a << endl;
	}
}
DSA03012 - SẮP ĐẶT XÂU KÝ TỰ 1
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		int M[1000] = { 0 };
		for (auto a : s)M[a]++;
		int cnt = 0;
		for (int i = 'a'; i <= 'z'; i++)cnt = max(cnt, M[i]);
		if (s.length() % 2 == 0) {
			if (cnt > s.length() / 2)cout << -1;
			else cout << 1;
		}
		else {
			if (cnt > s.length() / 2+1)cout << -1;
			else cout << 1;
		}
		cout << endl;
	}
}
DSA09014 - KIỂM TRA CHU TRÌNH TRÊN ĐỒ THỊ VÔ HƯỚNG
#include <iostream>
#include <cstring>
#include <vector>
#include<stack>
using namespace std;
vector<int> A[1005];
bool chuaxet[1005];
int truoc[1005];
void dfs(int d, int& kt) {
	chuaxet[d] = false;
	for (auto y:A[d]) {
		if (chuaxet[y] == true) {
			truoc[y] = d;
			dfs(y, kt);
		}
		else if (truoc[d] != y)kt = 1;
	}
}
int ktra(int v) {
	int kt = 0;
	for (int i = 1; i <= v; i++) {
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		dfs(i, kt);
		if (kt == 1) return 1;
	}
	return 0;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int v, e; cin >> v >> e;
		for (int i = 0; i < 1005; i++)A[i].clear();
		memset(chuaxet, true, sizeof(chuaxet));
		memset(truoc, 0, sizeof(truoc));
		for (int i = 1; i <= e; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		if (ktra(v) == 1)cout << "YES" << endl;
		else cout << "NO" << endl;
	}
}
TN05009 - CHU TRÌNH THEO DFS.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m;
bool check[1001];
v(int) A[1001];
bool ok;
string res;


void DFS(int u, string s,int par) {
	if (ok)return;
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x, s + " " + to_string(x), u);
		else if (x != par && x == 1)ok = true, res = s;
	}
}

int main() {
	faster();
	run() {
		reset();
		cin >> n >> m;
		FOR(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		FOR(i, 1, n + 1)sort(all(A[i]));
		ok = false;
		DFS(1, "1",0);
		if (!ok)cout << "NO\n";
		else {
			cout << res <<" "<< 1 << endl;
		}
	}
}

//_______________________T_O_A_N________________________//
DSA01006 - HOÁN VỊ NGƯỢC.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size();
#define f 			 first
#define s 			 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<"\n"
#define rs(M,x)		    	 memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//



int main() {
	faster();
	run() {
		int n;cin>>n;
		string s="";
		FOR(i,0,n)s=s+to_string(n-i);
		do{
			cout<<s<<" ";
		}while(prev_permutation(all(s)));
		cout<<endl;
	}
}


//_______________________T_O_A_N________________________//
DSA02017 - SẮP XẾP QUÂN HẬU 2
#include<iostream>
using namespace std;
int n;
int M[100], N[100], P[100],X[100][100];
int res = 0;
void Try(int i,int sum) {
	if (i == n + 1) {
		res = max(res, sum);
		return;
	}
	for (int j = 1; j <= n; j++) {
		if (M[j] == 0 && N[j + i] == 0 && P[i - j + n] == 0) {
			M[j] = N[j + i] = P[i - j + n] = 1;
			Try(i + 1,sum+X[j][i]);
			M[j] = N[j + i] = P[i - j + n] = 0;
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		n = 8;
		res = 0;
		for (int i = 1; i <= n; i++)for (int j = 1; j <= n; j++)cin >> X[i][j];
		Try(1,0);
		cout << res << endl;
	}
}
DSA07017 - PHẦN TỬ BÊN PHẢI NHỎ HƠN
#include<iostream>
#include<algorithm>
#include<set>
#include<vector>
#include<sstream>
#include<string.h>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<int> M(n), N(n, 1);
		for (int i = 0; i < n; i++)cin >> M[i];
		vector<int> S,F;
		S.push_back(-1);
		F.push_back(-1);
		for (int i = n-1; i >=0; i--) {
			N[i] = 1;
			for (int j = i + 1; j < n;) {
				if (M[j] >= M[i]) {
					N[i] += N[j];
					j += N[j];
					if (j >= n) {
						S.push_back(-1);
						break;
					}
				}
				else {
					S.push_back(M[j]); break;
				}
			}
		}
		for (int i = n - 1; i >= 0; i--) {
			N[i] = 1;
			for (int j = i + 1; j < n;) {
				if (M[j] <= M[i]) {
					N[i] += N[j];
					j += N[j];
					if (j >= n) {
						F.push_back(-1);
						break;
					}
				}
				else {
					F.push_back(j); break;
				}
			}
		}
		reverse(S.begin(), S.end());
		reverse(F.begin(), F.end());
		for (auto x : F) {
			if (x == -1 || S[x] == -1)cout << -1 << " ";
			else cout << S[x] << " ";
		}
		cout << endl;
	}
}
DSA05047 - CHỌN Ô.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//


int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[4][10000];
		int res = INT_MIN;
		FORD(i, 0, 4)FORD(j, 0, n)cin >> M[i][j], res = max(res, M[i][j]);
		if (res <= 0)cout << res << endl;
		else {
			FORD(i, 0, 4)FORD(j, 0, n)if (M[i][j] < 0)M[i][j] = 0;
			int dp[10000][4][4];
			memset(dp, INT_MIN, sizeof(dp));
			v(p(int)) X;
			set<int> Y;
			FORD(i, 0, n) {
				bool ok = false;
				FORD(j, 0, 4)if (M[j][i] > 0)ok = true;
				if (!ok)Y.insert(i);
			}
			FORD(i, 0, n) {
				X.clear();
				FORD(j, 0, 4) {
					dp[i][j][j] = M[j][i];
					X.pb({ j,j });
					for (int l = j + 2; l < 4; l++) {
						dp[i][j][l] = M[j][i] + M[l][i];
						X.pb({ j,l });
					}
				}
			}
			res = 0;
			FORD(i, 1, n) {
				int mayy = 0;
				if (i > 1)for (auto y : X)mayy = max(mayy, dp[i - 2][y.f][y.s]);
				for (auto x : X) {
					int maxx = 0, mazz = INT_MIN;
					for (auto y : X) {
						if (x.f != y.f && x.f != y.s && x.s != y.f && x.s != y.s) maxx = max(mayy, max(maxx, dp[i - 1][y.f][y.s]));
						mazz = max(mazz, dp[i - 1][y.f][y.s]);
					}
					if (Y.count(i) != 0)dp[i][x.f][x.s] = dp[i][x.f][x.s] + mazz;
					else dp[i][x.f][x.s] = dp[i][x.f][x.s] + maxx;
				}
			}
			FORD(i, 0, n) for (auto x : X)res=max(res,dp[i][x.f][x.s]);
			cout << res << endl;
		}
	}
	return 0;
}
DSA11019 - DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 2.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree&T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Load(tree T) {
	if (!T)return;
	if (T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
	cout << T->data << " ";
}
int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		while (n--) {
			int x; cin >> x;
			Add(T, x);
		}
		Load(T);
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA01014 - TẬP HỢP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//


int main() {
	faster();
	while (1) {
		int n, k, s; cin >> n >> k >> s;
		if (n == 0 && s == 0 && k == 0)break;
		if (k > n) {
			cout << 0 << endl;
			continue;
		}
		string x = string(k, '0') + string(n - k, '1');
		int res = 0;
		do {
			int sum = 0;
			FOR(i, 0, n)if (x[i] == '0')sum += i + 1;
			if (sum == s)res++;
		} while (next_permutation(all(x)));
		cout << res << endl;
	}
}

//__________________________B20DCPT173_____________________________//
DSA03002 - NHẦM CHỮ SỐ
#include<iostream>
#include<string>
#include <stdlib.h>
using namespace std;
int main() {
		string a, b;
		cin >> a >> b;
		string m = a, n = b;
		long long s1 = 0, x1 = 0, s2 = 0, x2 = 0;
		for (int i = 0; i < a.length(); i++) {
			if (a[i] == '6')a[i] = '5';
			s1 = s1 * 10 + a[i] - 48;
			if (m[i] == '5')m[i] = '6';
			x1 = x1 * 10 + m[i] - 48;
		}
		for (int i = 0; i < b.length(); i++) {
			if (b[i] == '6')b[i] = '5';
			s2 = s2 * 10 + b[i] - 48;
			if (n[i] == '5')n[i] = '6';
			x2 = x2 * 10 + n[i] - 48;
		}
		cout << s1 + s2 << " " << x1 + x2 << endl;
}
DSA02029 - THÁP HÀ NỘI
#include<iostream>
#include<algorithm>
using namespace std;

void thn(int n, char a, char b, char c) {
	if (n == 1)cout << a << " -> " << c<<endl;
	else {
		thn((n - 1), a, c, b);
		cout << a << " -> " << c << endl;
		thn(n - 1, b, a, c);
	}
}
int main() {
	int n; cin >> n;
	thn(n, 'A', 'B', 'C');
}
DSA02021 - KÝ TỰ ĐẶC BIỆT.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t;cin.ignore(); while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

char Load(ll k, string s, ll n) {
	if (k < sz(s))return s[k];
	if (k < n / 2)return Load(k, s, n / 2);
	if (k == n / 2)return Load(k - 1, s, n / 2);
	if (k > n / 2)return Load(k - n / 2 - 1, s, n / 2);
}


int main() {
	faster();
	run() {
		string s; cin >> s;
		ll k; cin >> k; k--;
		ll n = sz(s);
		while (n <= k)n *= 2;
		cout << Load(k, s, n) << endl;
	}
}

//__________________________B20DCPT173__________________________//
DSA03005 - CHIA MẢNG THÀNH HAI MẢNG CON CÓ TỔNG LỚN NHẤT
#include<iostream>
#include<string>
#include <algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n,k; cin >> n>>k;
		int M[10000];
		int sum = 0,sum1=0,sum2=0;
		for (int i = 0; i < n; i++) {
			cin >> M[i];
			sum += M[i];
		}
		sort(M, M + n);
		for (int i = 0; i < n; i++) {
			if (i < k)sum1 += M[i];
			if (i < n - k)sum2 += M[i];
		}
		cout << max(sum - 2 * sum1, sum - 2 * sum2) << endl;
	}
}
DSA11017 - DUYỆT CÂY NHỊ PHÂN TÌM KIẾM 1.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree&T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}

void Load(tree T) {
	if (!T)return;
	if (T->pLeft)Load(T->pLeft);
	if (T->pRight)Load(T->pRight);
	cout << T->data << " ";
}
int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		while (n--) {
			int x; cin >> x;
			Add(T, x);
		}
		Load(T);
		cout << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA02005 - HOÁN VỊ XÂU KÝ TỰ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//


b
int main() {
	faster();
	run() {
		string s; cin >> s;
		do {
			cout << s << " ";
		} while (next_permutation(all(s)));
		cout << endl;
	}
}

//__________________________B20DCPT173_____________________________//
DSA06038 - CẶP SỐ
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
int n;
int merge(int M[], int N[], int left, int mid, int right)
{
    int i, j, k;
    int res = 0;
    i = left;
    j = mid;
    k = left;
    while ((i <= mid - 1) && (j <= right)) {
        if (M[i] <= M[j]) {
            N[k++] = M[i++];
        }
        else {
            N[k++] = M[j++];
            res += mid - i;
        }
    }
    while (i <= mid - 1)
        N[k++] = M[i++];
    while (j <= right)
        N[k++] = M[j++];
    for (i = left; i <= right; i++)
        M[i] = N[i];

    return res;
}
int _mergeSort(int M[], int N[], int left, int right)
{
    int mid, res = 0;
    if (right > left) {
        mid = (right + left) / 2;
        res += _mergeSort(M, N, left, mid);
        res += _mergeSort(M, N, mid + 1, right);
        res += merge(M, N, left, mid + 1, right);
    }
    return res;
}
int main()
{
    cin >> n;
    int N[10000];
    int M[10000];
    int B[10000];
    for (int i = 0; i < n; i++) {
        cin >> M[i];
        if (M[i] % 2 == 1) {
        }
    }
    int g = 0;
    for (int i = 0; i < n; i++) {
        if (M[i] % 2 == 0) {
            B[g] = M[i];
            g++;
        }
    }
    int res = _mergeSort(B, N, 0, g - 1);
    int cnt = 0;
    M[n] = 1;
    for (int i = 1; i <= n; i++) {
        if (M[i] % 2 == 0 && M[i - 1] % 2 == 0)cnt++;
        else if(M[i]%2==1&&M[i-1]%2==0){
         
            res-= _mergeSort(M, N, i-1-cnt, i-1);
            cnt = 0;
        }
    }
    cout << res << endl;
}
DSA04024 - LŨY THỪA MA TRẬN 2
#include<iostream>
using namespace std;
#define mod 1000000007
typedef long long ll;
ll F[100][100];
void mul(ll A[100][100], ll B[100][100], int n) {
	ll N[100][100];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			N[i][j] = 0;
			for (int l = 0; l < n; l++) {
				N[i][j] += A[i][l] * B[l][j] % mod;
			}
		}
	}
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			A[i][j] = N[i][j] % mod;
}
void Pow(ll M[100][100], int n, int k) {
	if (k == 1)return;
	Pow(M, n, k / 2);
	mul(M, M, n);
	if (k % 2 == 1)
		mul(M, F, n);
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		ll M[100][100];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++) {
				cin >> M[i][j]; F[i][j] = M[i][j];
			}
		Pow(M, n, k);
		long long res = 0;
		for (int i = 0; i < n; i++) {
			res += M[i][n - 1];
			res %= mod;
		}
		cout << res << endl;
	}
}
DSA02041 - BIẾN ĐỔI VỀ 1
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
#include<queue>
using namespace std;
typedef pair<int, int> p;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		queue<p> X; X.push({n,0});
		while (X.size()) {
			p b = X.front();
			X.pop();
			if (b.first == 1) {
				cout << b.second << endl;
				break;
			}
			if (b.first % 2 == 0)X.push({ b.first / 2,b.second + 1 });
			if (b.first % 3 == 0)X.push({ b.first / 3,b.second + 1 });
			if (b.first > 1)X.push({ b.first - 1,b.second + 1 });
		}
	}
}
DSA04008 - SỐ FIBONACCI THỨ N
#include<iostream>
#include<vector>
#include<string.h>
#include<queue>
#include<set>
using namespace std;
#define mod 10e9+7
#define ll long long
struct matran {
	long long f[2][2];
};
matran operator*(matran A, matran B) {
	matran C;
	for (int i = 0; i < 2; i++) {
		for (int j = 0; j < 2; j++) {
			C.f[i][j] = 0;
			for (int k = 0; k < 2; k++) {
				C.f[i][j] += A.f[i][k] % 1000000007 * B.f[k][j] % 1000000007;
				C.f[i][j] %= 1000000007;
			}
		}
	}
	return C;
}
matran powMod(matran A, int n) {
	if (n == 1)return A;
	matran X = powMod(A, n / 2);
	if (n % 2 == 0)return X * X;
	return X * X * A;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		matran A;
		A.f[0][0] = A.f[0][1] = A.f[1][0]=1;
		A.f[1][1] = 0;
		matran res = powMod(A, n);
		cout << res.f[1][0] << endl;
	}
}
DSA06008 - ĐẾM CẶP
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
int test(int x, int Y[], int n, int N[])
{
    if (x == 0)
        return 0;
    if (x == 1)
        return N[0];
    int* i = upper_bound(Y, Y + n, x);
    int a = (Y + n) - i;
    a += (N[0] + N[1]);
    if (x == 2)
        a -= (N[3] + N[4]);

    if (x == 3)
        a += N[2];
    return a;
}

int count1(int X[], int Y[], int m, int n)
{
    int N[5] = { 0 };
    for (int i = 0; i < n; i++)
        if (Y[i] < 5)
            N[Y[i]]++;
    sort(Y, Y + n);
    int t = 0;
    for (int i = 0; i < m; i++)
        t += test(X[i], Y, n, N);
    return t;
}
int main()
{
    int t; cin >> t;
    while (t--) {
        int a, b; cin >> a >> b;
        int m[100000], n[100000];
        for (int i = 0; i < a; i++)cin >> m[i];
        for (int i = 0; i < b; i++)cin >> n[i];
        cout << count1(m, n, a, b) << endl;
    }
}
DSA05026 - XEM PHIM
#include<iostream>
using namespace std;

int main() {
	int n, k; cin >> k >> n;
	int M[1000];
	for (int i = 0; i < n; i++)cin >> M[i];
	int dp[101][25001]={0};
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= k; j++) {
			if (j < M[i])dp[i][j] = dp[i - 1][j];
			else dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - M[i]] + M[i]);
		}
	}
	cout << dp[n][k];
}
DSA05025 - CON ẾCH
#include<iostream>
#include<algorithm>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		long long M[10000] = { 0 };
		M[0] =1, M[1] =2, M[2] = 4;
		for (int i = 3; i < n; i++)M[i] = M[i - 1] + M[i - 2] + M[i - 3];
		cout << M[n-1] << endl;
	}
}
DSA10016 - NỐI ĐIỂM.cpp
#include<iostream>
#include<math.h>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define float double
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

float dis[1000][1000];
bool check[1001];
v(int) A[1001];
int n;
float Dis(p(float) A, p(float) B) {
	return sqrt((A.first - B.first) * (A.first - B.first) + (A.second - B.second) * (A.second - B.second));
}

struct kru {
	int u, v;
	float w;
};

v(kru) V;
bool cmp(kru a, kru b) {
	return a.w < b.w;
}

void DFS(int u) {
	check[u] = true;
	for (auto x : A[u])if (!check[x])DFS(x);
}

int main() {
	faster();
	run() {
		reset();
		V.clear();
		cin >> n;
		v(p(float)) M(n);
		for (auto& x : M)cin >> x.first >> x.second;
		FOR(i, 1, n + 1) {
			FOR(j, 1, n + 1)dis[i][j] = Dis(M[i - 1], M[j - 1]);
		}
		FOR(i, 1, n + 1) {
			FOR(j, 1, n + 1) {
				V.push_back({ i,j,dis[i][j] });
			}
		}
		sort(all(V), cmp);
		float res = 0;
		for (auto x : V) {
			rs(check, false);
			DFS(x. u);
			if (!check[x.v]) {
				res += x.w;
				A[x.u].push_back(x.v);
				A[x.v].push_back(x.u);
			}
		}
		cout << setprecision(6) << fixed << res << endl;
	}
}

//_______________________T_O_A_N________________________//
DSA06030 - SẮP XẾP NỔI BỌT - LIỆT KÊ NGƯỢC
#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000];
		int gt = 1;
		vector<vector<int>> N;
		for (int i = 0; i < n; i++) cin >> M[i];
		for (int i = 1; i < n; i++) {
			int k = 0;
			for (int j = 0; j < n - 1; j++) {
				if (M[j] > M[j + 1]) {
					swap(M[j], M[j + 1]);
					k++;
				}
			}
			if (k) {
				vector<int> X;
				for (int l = 0; l < n; l++)X.push_back(M[l]);
				N.push_back(X);
			}
			
		}
		for (int i = N.size() - 1; i >= 0; i--) {
			cout << "Buoc " << i + 1 << ": ";
			for (int j = 0; j < n; j++)
				cout << N[i][j] << " ";
			cout << endl;
		}
	}
}
DSA09003 - BIỂU DIỄN ĐỒ THỊ CÓ HƯỚNG.
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		vector<int> A[1001];
		while (n--) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
		}
		for (int i = 1; i <= m; i++) {
			cout << i << ": ";
			for (auto x : A[i])cout << x << " ";
			cout << endl;
		}
	}
}
DSA05010 - DÃY CON DÀI NHẤT CÓ TỔNG CHIA HẾT CHO K
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int dp[1001][1001];
		dp[0][0] = 0;
		for (int i = 1; i <= n; i++)dp[0][i] = -1e9;
		for (int i = 1; i <= n; i++) {
			int x; cin >> x;
			x %= k;
			for(int j=0;j<k;j++)
			dp[i][j] = max(dp[i - 1][j], dp[i - 1][(j + k - x) % k]+1);
		}
		cout << dp[n][0] << endl;
	}
}
DSA04014 - CẶP NGHỊCH THẾ
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
typedef long long ll;
int n;
ll merge(ll M[], ll N[], int left, int mid, int right)
{
    int i, j, k;
    ll res = 0;
    i = left;
    j = mid;
    k = left;
    while ((i <= mid - 1) && (j <= right)) {
        if (M[i] <= M[j]) {
            N[k++] = M[i++];
        }
        else {
            N[k++] = M[j++];
            res += mid - i;
        }
    }
    while (i <= mid - 1)
        N[k++] = M[i++];
    while (j <= right)
        N[k++] = M[j++];
    for (i = left; i <= right; i++)
        M[i] = N[i];

    return res;
}
ll _mergeSort(ll M[], ll N[], int left, int right)
{
    ll mid, res = 0;
    if (right > left) {
        mid = (right + left) / 2;
        res += _mergeSort(M, N, left, mid);
        res += _mergeSort(M, N, mid + 1, right);
        res += merge(M, N, left, mid + 1, right);
    }
    return res;
}
int main()
{
    int t; cin >> t;
    while (t--) {
        cin >> n;
        ll N[100000];
        ll M[100000];
        for (int i = 0; i < n; i++) {
            cin >> M[i];
        }
        ll res = _mergeSort(M, N, 0, n-1);
        cout << res << endl;
    }
}
DSA06037 - SẮP XẾP ĐOẠN CON
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
typedef pair<int, int> p;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		ll M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		ll A[100000], B[100000];
		A[0] = M[0];
		B[n - 1] = M[n - 1];
		for (int i = 1; i < n; i++)A[i] = max(A[i - 1], M[i]);
		for (int i = n - 2; i >= 0; i--)B[i] = min(B[i + 1], M[i]);
		int cnt = 0;
		for (int i = 0; i < n - 1; i++) {
			if (A[i] <= B[i + 1])cnt++;
		}
		cout << cnt << endl;
		for (int i = 0; i < n-1; i++) {
			if (A[i] <= B[i + 1])cout << i + 1 << " ";
		}
		cout << endl;
	}
}
DSA04012 - TÍCH ĐA THỨC
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
typedef long long ll;
typedef pair<int, int> p;
int main(){
    int t; cin >> t;
    while (t--) {
        int m, n; cin >> m >> n;
        p M[100], N[100];
        for (int i = 0; i < m; i++) {
            cin >> M[i].first;
            M[i].second = i;
        }
        for (int i = 0; i < n; i++) {
            cin >> N[i].first;
            N[i].second = i;
        }
        vector<p> X;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                X.push_back({ M[i].first * N[j].first,M[i].second + N[j].second });
            }
        }
        for (int i = 0; i < m + n-1; i++) {
            int sum = 0;
            for (auto x : X) {
                if (x.second == i)sum += x.first;
            }
            cout << sum << " ";
        }
        cout << endl;
    }
}
DSA06047 - BỘ BA SỐ PYTAGO
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
string ktra(ll* M, int n) {
	for (int i = n - 1; i >= 2; i--) {
		int l = 0, r = i - 1;
		while (l < r) {
			if (M[l] + M[r] == M[i])
				return "YES\n";
			if (M[l] + M[r] < M[i])l++;
			else r--;
		}
	}
	return "NO\n";
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		ll M[10001];
		for (int i = 0; i < n; i++) {
			cin >> M[i];
			M[i] *= M[i];
		}
		sort(M, M + n);
		cout << ktra(M, n);
	}
}
DSA04018 - ĐẾM SỐ 0
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, a, s = 0;
		cin >> n;
		for (int i = 0; i < n; i++) {
			cin >> a;
			if (a == 0)s++;
		}
		cout << s << endl;
	}
	return 0;
}
DSA02023 - ĐẶT TÊN.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(string) M(n); cin(M, n);
	sort(all(M));
	M.erase(unique(all(M)), M.end());
	n = sz(M);
	string s = string(k, '0') + string(n - k, '1');
	do {
		FOR(i, 0, n)if (s[i] == '0')cout << M[i] << " ";
		cout << endl;
	} while (next_permutation(all(s)));

}
//_________________________B20DCPT173__________________________//
DSA05019 - HÌNH VUÔNG LỚN NHẤT.cpp
#include<iostream>
using namespace std;


int main() {
	int t; cin >> t;
	while (t--) {
		int n, m; cin >> n >> m;
		int M[500][500], dp[501][501] = { 0 };
		int res = 0;
		for (int i = 0; i < n; i++)for (int j = 0; j < m; j++)cin >> M[i][j], dp[i][j] = M[i][j], res = max(res, M[i][j]);
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= m; j++) {
			    if(M[i][j]==0)dp[i][j]=0;
			    else
				dp[i][j] += min(dp[i - 1][j - 1], min(dp[i - 1][j], dp[i][j - 1]));
				res = max(res, dp[i][j]);
			}
		}
		cout << res << endl;
	}
}
DSA02009 - CHIA MẢNG.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<math.h>
#include<string>
#include<queue>
using namespace std;
vector<string> res;
int n,k;
int M[1000];
bool ok,check[100];
void Try(int cnt, int sum,int summ) {
    if (ok)return;
    if (cnt == k) {
        ok = true;
        return;
    }
    for (int i = 0; i < n; i++) {
        if (!check[i]) {
            check[i] = true;
            if (sum == summ / 3) {
                Try(cnt + 1, 0, summ);
                return;
            }
            else if (sum < summ / 3)Try(cnt, sum + M[i], summ);
            else return;
           
        }
         check[i] = false;
    }
}
int main() {
    int t; cin >> t;
    while(t--){
        cin >> n>>k;
        ok = false;
        int sum = 0;
        for (int i = 0; i < n; i++) {
            cin >> M[i];
            sum += M[i];
            check[i] = false;
        }
        if (sum % k != 0)cout << 0 << endl;
        else {
            Try(0, 0, sum);
            if (ok)cout << 1 << endl;
            else cout << 0 << endl;
        }
    }
}
DSA03024 - LỰA CHỌN TỐI ƯU
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
bool cmp(pair<int, int> A, pair<int, int> B) {
	return A.second < B.second;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<pair<int, int>> M(n);
		int dp[100000];
		for (int i = 0; i < n; i++) {
			cin >> M[i].first >> M[i].second; dp[i] = 1;
		}
		sort(M.begin(), M.end(), cmp);
		int res = 1, j = 0;
		for (int i = 1; i < n; i++) {
			if (M[i].first >= M[j].second) {
				j = i;
				res++;
			}
		}
		cout << res << endl;
	}
}
DSA02004 - DI CHUYỂN TRONG MÊ CUNG 2
#include<iostream>
#include<stdbool.h>
#include<string.h>
#include<algorithm>
#include<vector>
using namespace std;
bool f;
bool ok[100][100];
vector<string> res(100);
void test(int M[][100], string s, int n, int x, int y) {
	if (M[0][0] == 0 || M[n - 1][n - 1] == 0)return;
	if (x == n - 1 && y == n - 1) {
		f = true;
		res.push_back(s);
	}
	if (M[x + 1][y] == 1 && x < n - 1 && !ok[x + 1][y]) {
		ok[x][y] = true;
		test(M, s + "D", n, x + 1, y);
		ok[x][y] = false;
	}
	if (M[x][y + 1] == 1 && y < n - 1 && !ok[x][y + 1]) {
		ok[x][y] = true;
		test(M, (s + "R"), n, x, y + 1);
		ok[x][y] = false;
	}
	if (M[x][y - 1] == 1 && y > 0 && !ok[x][y - 1]) {
		ok[x][y] = true;
		test(M, s + "L", n, x, y - 1);
		ok[x][y] = false;
	}
	if (M[x - 1][y] == 1 && x > 0 && !ok[x - 1][y]) {
		ok[x][y] = true;
		test(M, s + "U", n, x - 1, y);
		ok[x][y] = false;
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		f = false;
		int n; cin >> n;
		int M[100][100];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++) {
				cin >> M[i][j]; ok[i][j] = false;
			}

		string s = "";
		res.clear();
		test(M, s, n, 0, 0);
		if (f == false)cout << -1;
		else {
			sort(res.begin(), res.end());
			for (int i = 0; i < res.size(); i++)
				cout << res[i] << " ";
		}
		cout << endl;
	}
}
DSA05040 - DÃY TAM GIÁC DÀI NHẤT.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//



int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		FORD(i, 0, n)cin >> M[i];
		v(int) dpl(n, 1), dpr(n, 1);
		FORD(i, 1, n)if (M[i] > M[i - 1])dpl[i] += dpl[i - 1];
		FORE(i, n - 2, 0)if (M[i] > M[i + 1])dpr[i] += dpr[i + 1];
		int res = 0;
		FORD(i, 0, n)res = max(res, dpl[i] + dpr[i] - 1);
		cout << res << endl;
	}
}
DSA06033 - KHOẢNG CÁCH XA NHẤT
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int A[100000], B[100000];
		A[0] = M[0]; B[n - 1] = M[n - 1];
		for (int i = 1; i < n; i++)A[i] = min(M[i], A[i - 1]);
		for (int i = n - 2; i >= 0; i--)B[i] = max(M[i], B[i + 1]);
		int res = -1;
		int a = 0, b = 0;
		while (b<n&&a<n) {
			if (A[a] < B[b]) {
				res = max(res, b - a);
				b++;
			}
			else a++;
		}
		if (res == 0)cout << -1 << endl;
		else
		cout << res << endl;
	}
}
DSA05036 - TĂNG - GIẢM.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//

int main() {
	int t; cin >> t;
	while (t--) {
		int n, dp[100000]; cin >> n;
		v(p(float)) M(n);
		FORD(i, 0, n)cin >> M[i].f >> M[i].s;
		int res = 1;
		FORD(i, 0, n) {
			dp[i] = 1;
			FORE(j, 0, i) {
				if (M[i].f > M[j].f && M[i].s < M[j].s)
					dp[i] = max(dp[i], dp[j] + 1);
			}
			res = max(res, dp[i]);
		}
		cout << res << endl;
	}
}
DSA03014 - SỐ KHỐI LẬP PHƯƠNG
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
using namespace std;
typedef long long int ll;
bool ktra(string a, string b) {
	int i = 0, j = 0;
	while (i < a.length() && j < b.length()) {
		if (a[i] == b[j]) {
			i++; j++;
		}
		else i++;
	}
	return j == b.length();
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		long long res = 0;
		bool ok = false;
		for (int i = 1; i <= 100; i++) {
			long long x = i * i * i;
			if (ktra(s, to_string(x))) {
				ok = true;
				res = x;
			}
		}
		if (!ok)cout << -1<<endl;
		else
		cout << res << endl;
	}
}
CHELLO - Hello World.cpp
#include<iostream>
#include<string>
#include<algorithm>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//



int main() {
	faster();
	cout << "Hello PTIT.";
}


//_______________________T_O_A_N________________________//
DSA01019 - HAHAHA.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size()
#define f 				 first
#define s 				 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	run() {
		int n; cin >> n;
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string();
			s = s.substr(20 - n, n);
			if (s.find("11") == -1 && s[0] == '1' && s[n - 1] == '0') {
				for (auto c : s)(c == '1') ? cout << 'H' : cout << 'A' ;
				cout << endl;
			}
		}
	}
}

//_________________________B20DCPT173__________________________//
DSA08013 - DI CHUYỂN TRÁNH VẬT CẢN
#include<iostream>
#include<vector>
#include<string.h>
#include<queue>
#include<set>
using namespace std;
int n;
char M[100][100];
bool check[100][100];
struct p {
	int first, second, cnt;
};
int BFS(p s, p e) {
	s.cnt = 0;
	queue<p> X;
	X.push(s);
	while (X.size()) {
		p f = X.front();
		X.pop();
		int x = f.first;
		int y = f.second;
	
		if (x == e.first && y == e.second)return f.cnt;
		for (int i = x + 1; i < n; i++) {
			if (M[i][y] != 'X' && !check[i][y]) {
				X.push({ i,y,f.cnt + 1 });
				check[i][y] = true;
			}
			else break;
		}
		for (int i = x - 1; i >= 0; i--) {
			if (M[i][y] != 'X' && !check[i][y]) {
				X.push({ i,y,f.cnt + 1 });
				check[i][y] = true;
			}
			else break;
		}
		for (int i = y + 1; i < n; i++) {
			if (M[x][i] != 'X' && !check[x][i]) {
				X.push({ x,i,f.cnt + 1 });
				check[x][i] = true;
			}
			else break;
		}
		for (int i = y - 1; i >= 0; i--) {
			if (M[x][i] != 'X' && !check[x][i]) {
				X.push({ x,i,f.cnt + 1 });
				check[x][i] = true;
			}
			else break;
		}
	}
	return -1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		memset(check, false, sizeof(check));
		cin >> n;
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				cin >> M[i][j];
		p s, e;
		cin >> s.first >> s.second >> e.first >> e.second;
		cout << BFS(s, e) << endl;
	
	}
}
DSA07001 - NGĂN XẾP 1
#include<iostream>
#include<stack>
#include<vector>
#include<algorithm>
using namespace std;
int main() {
	string s;
	int n;
	stack<int>nx;
	while (cin >> s) {
		if (s == "push") {
			cin >> n;
			nx.push(n);
		}
		if (s == "pop") {
			nx.pop();
		}
		if (s == "show") {
			vector<int>a;
			if (nx.empty()) {
				cout << "empty" << endl;
				continue;
			}
			while (!nx.empty()) {
				a.push_back(nx.top());
				nx.pop();
			}
			reverse(a.begin(), a.end());
			for (int i = 0; i < a.size(); i++) {
				cout << a[i] << " ";
				nx.push(a[i]);
			}
			cout << endl;
		}
	}
}
DSA07012 - BIẾN ĐỔI HẬU TỐ - TRUNG TỐ
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<string> S;
		for (int i = 0; i <s.size(); i++) {
			if (s[i] >= 'A' && s[i] <= 'Z')S.push(string(1, s[i]));
			else {
				string a = S.top(); S.pop();
				string b = S.top(); S.pop();
				S.push("("+b+s[i]+a+")");
			}
		}
		cout << S.top() << endl;
	}
}
TỔNG SỐ CÁCH DI CHUYỂN.cpp
#include<iostream>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		long long M[10000], dp[10000];
		int n, k; cin >> n >> k;
		M[0] = M[1] = 1;
		for (int i = 2; i <= n; i++) {
			M[i] = 0;
			for (int j = 1; j <= min(i, k); j++) {
				M[i] += M[i - j];
				M[i] %= 1000000007;
			}
		}
		cout << M[n] << endl;
	}
}
DSA05039 - TỔNG CHỮ SỐ
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//______________________________T_O_A_N______________________________//

int dp[901][8101];

int Load(int a, int b) {
	if (a > b || a < 0 || b < 0 || a>900 || b>8100)return -1;
	if (a == 0 && b == 0)return 0;
	if (dp[a][b] != -1)return dp[a][b];
	int minn = 101;
	FORE(i, 10, 1) {
		int tmp = Load(a - i, b - i * i);
		if (tmp != -1)minn = min(minn, tmp + 1);
	}
	return dp[a][b] = minn;
}


int main() {
	int t; cin >> t;
	while (t--) {
		int a, b; cin >> a >> b;
		memset(dp, -1, sizeof(dp));
		dp[0][0] = 0;
		int x = Load(a, b);
		if (x == -1 || x > 100) {
			cout << -1 << endl;
			continue;
		}
		while (a>0&&b>0) {
				for (int i = 1; i <= 9; i++) {
					if (a >= i && b >= i*i &&1+dp[a - i][b - i * i]== dp[a][b]) {
						cout << i; a -= i; b -= i * i;
						break;
					}
				}
			}
		cout << endl;
	}
}
DSA02019 - ĐƯỜNG ĐI DÀI NHẤT
#include<iostream>
#include<climits>
#include<string.h>
#include<vector>
#include<set>
#include<algorithm>
using namespace std;
typedef long long ll;
bool check[1001],ok[100][100];
vector<int> A[1001];
int n, m,p;
int res = 1;
void DFS(int u, int cnt) {
	res = max(res, cnt);
	for (int x : A[u]) {
		if (!ok[u][x]) {
			ok[u][x] = ok[x][u] = true;
			DFS(x, cnt + 1);
			ok[u][x] = ok[x][u] = false;
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		res = 1;
		for (int i = 0; i < 1001; i++)A[i].clear();
		int n, m; cin >> n >> m;
		p = n;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		for (int i = 0; i < p; i++) {
			memset(ok, false, sizeof(ok));
			DFS(i, 0);
		}
		cout << res << endl;
	}
}
DSA06035 - DÃY TAM GIÁC DÀI NHẤT.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<climits>
#include<set>
#define mod 1000000007
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=l-1;i>=r;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define sz size();
#define all(M) M.begin(),M.end()
#define	f first
#define s second
#define pb push_back
#define pf push_font
using namespace std;

//____________________T_O_A_N_______________________//



int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		FORD(i, 0, n)cin >> M[i];
		v(int) dpl(n, 1), dpr(n, 1);
		FORD(i, 1, n)if (M[i] > M[i - 1])dpl[i] += dpl[i - 1];
		FORE(i, n - 2, 0)if (M[i] > M[i + 1])dpr[i] += dpr[i + 1];
		int res = 0;
		FORD(i, 0, n)res = max(res, dpl[i] + dpr[i] - 1);
		cout << res << endl;
	}
}
DSA06040 - GIAO CỦA BA DÃY SỐ
#include<iostream>
using namespace std;
int main() {
    int t;
    cin >> t;
    while (t--) {
        int x, y, z;
        cin >> x >> y >> z;
        long long* a = new long long[x];
        long long* b = new long long[y];
        long long* c = new long long[z];
        //long long a[x], b[y], c[z];
        for (int i = 0; i < x; i++) {
            cin >> a[i];
        }
        for (int i = 0; i < y; i++) {
            cin >> b[i];
        }
        for (int i = 0; i < z; i++) {
            cin >> c[i];
        }
        long long d[100000];
        long h = 0;
        long k = 0;
        int check = 0;
        for (int i = 0; i < x; i++) {
            for (int j = k; j < y; j++) {
                if (a[i] == b[j]) {
                    d[h] = a[i];
                    h++;
                    check = 1;
                    break;
                }
                else if (b[j] > a[i]) {
                    k = j;
                    break;
                }
            }
        }
        if (check == 0) {
            cout << "-1";
        }
        else {
            k = 0;
            for (long i = 0; i < h; i++) {
                for (long j = k; j < z; j++) {
                    if (d[i] == c[j]) {
                        cout << d[i] << " ";
                        check = 2;
                        break;
                    }
                    else if (c[j] > d[i]) {
                        k = j;
                        break;
                    }
                }
            }
            if (check == 1 || check == 0) {
                cout << "-1";
            }
        }
        cout << endl;
    }
    return 0;
}
DSA08045 - HÀNG RÀO.cpp
#include<iostream>
#include<math.h>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<(x)&&(x)<(n)&&0<(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;



//_______________________T_O_A_N________________________//



int n, m;
int XX, YY;
struct fen {
	int x1, x2, y1, y2;
};
struct cow {
	int x, y;
};
fen M[10000];
cow N[10000];
char C[2000][2000];
bool check[2000][2000];
int dx[4] = { -1,1,0,0 };
int dy[4] = { 0,0,1,-1 };

void init() {
	rs(check, false);
	set<int> S;
	map<int, int> X;
	FOR(i, 0, n)S.insert(M[i].x1), S.insert(M[i].x2);
	FOR(i, 0, m)S.insert(N[i].x);
	int i = 2;
	for (auto s : S)X[s] = i, i += 2;
	XX = i + 10;
	FOR(i, 0, n)M[i].x1 = X[M[i].x1], M[i].x2 = X[M[i].x2];
	FOR(i, 0, m)N[i].x = X[N[i].x];
	S.clear();
	X.clear();
	FOR(i, 0, n)S.insert(M[i].y1), S.insert(M[i].y2);
	FOR(i, 0, m)S.insert(N[i].y);
	i = 2;
	for (auto s : S)X[s] = i, i += 2;
	YY = i + 10;
	FOR(i, 0, n)M[i].y1 = X[M[i].y1], M[i].y2 = X[M[i].y2];
	FOR(i, 0, m)N[i].y = X[N[i].y];
	FOR(i, 0, XX)FOR(j, 0, YY)C[i][j] = '.';
	FOR(i, 0, m)C[N[i].x][N[i].y] = 'O';
	FOR(i, 0, n) {
		fen x = M[i];
		FOR(l, x.x1, x.x2 + 1)FOR(k, x.y1, x.y2 + 1)C[l][k] = 'X';
	}
}

void DFS(cow u) {
	check[u.x][u.y] = true;
	FOR(i, 0, 4) {
		int x = u.x + dx[i];
		int y = u.y + dy[i];
		if (correct(x, y, XX - 1, YY - 1) && C[x][y] != 'X' && !check[x][y])DFS({ x,y });
	}
}

int main() {
	faster();
	run() {
		cin >> n >> m;
		FOR(i, 0, n) {
			cin >> M[i].x1 >> M[i].y1 >> M[i].x2 >> M[i].y2;
			if (M[i].x1 > M[i].x2)swap(M[i].x1, M[i].x2);
			if (M[i].y1 > M[i].y2)swap(M[i].y1, M[i].y2);
		}
		FOR(i, 0, m)cin >> N[i].x >> N[i].y;
		init();
		int res = 0;
		int tmp = 0;
		FOR(i, 0, m) {
			if (!check[N[i].x][N[i].y]) {
				DFS(N[i]);
				int count = 0;
				FOR(j, 0, m)if (check[N[j].x][N[j].y])count++;
				res = max(res, count - tmp);
				tmp = count;
			}
		}
		cout << res << endl;
	}
}




//_______________________T_O_A_N________________________//
DSA09021 - CHUYỂN MA TRẬN KỀ SANG DANH SÁCH KỀ
#include<iostream>
#include<algorithm>
#include<string.h>
#include<vector>
using namespace std;

int main() {
	
	int n; cin >> n;
	int M[1001][1001];
	vector<int> A[1001];
	for(int i=1;i<=n;i++)
		for (int j = 1; j <= n; j++) {
			cin >> M[i][j];
			if (M[i][j]) {
				A[i].push_back(j);
			}
		}
	for (int i = 1; i <= n; i++) {
		for (auto x : A[i])cout << x << " ";
		cout << endl;
	}
	
}
DSA01028 - LIỆT KÊ TỔ HỢP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(int) M(n); cin(M, n);
	sort(all(M));
	M.erase(unique(all(M)), M.end());
	n = sz(M);
	string s = string(k, '0') + string(n - k, '1');
	do {
		FOR(i, 0, n)if (s[i] == '0')cout << M[i] << " ";
		cout << endl;
	} while (next_permutation(all(s)));
}
//_________________________B20DCPT173__________________________//
DSA02003 - DI CHUYỂN TRONG MÊ CUNG 1.cpp
#include<iostream>
#include<stdbool.h>
using namespace std;
bool f;
void Try(int M[][100], string s, int n, int x, int y) {
	if (M[0][0] == 0 || M[n - 1][n - 1] == 0)return;
	if (x == n - 1 && y == n - 1) {
		f = true;
		cout << s << " "; return;
	}
	if (M[x + 1][y] == 1 && x < n) {
		Try(M, s + "D", n, x + 1, y);
	}
	if (M[x][y + 1] == 1 && y < n) {
		Try(M, (s + "R"), n, x, y + 1);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		f = false;
		int n; cin >> n;
		int M[100][100];
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				cin >> M[i][j];
		string s = "";
		Try(M, s, n, 0, 0);
		if (f == false)cout << -1;
		cout << endl;
	}
}
DSA09030 - ĐỒ THỊ HAI PHÍA.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m, v;
bool check[1001];
int color[1001];
v(int) A[1001];


bool BFS(int u) {
	queue<int> Q;
	Q.push(u);
	color[u] = 1;
	while (Q.size()) {
		int tmp = Q.front(); Q.pop();
		for (auto x : A[tmp]) {
			if (color[x] == 0)color[x] = 3 - color[tmp], Q.push(x);
			else if (color[x] == color[tmp])return false;
		}
	}
	return true;
}

string Load() {
	FOR(i, 1, n + 1)if (color[i] == 0) if (!BFS(i))return "NO\n";
	return "YES\n";
}


int main() {
	faster();
	run() {
		reset();
		cin >> n >> m;
		FOR(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a].pb(b);
			A[b].pb(a);
		}
		rs(color, 0);
		cout << Load();
	}
}


//_______________________T_O_A_N________________________//
DSA07021 - DÃY NGOẶC ĐÚNG DÀI NHẤT
#include <iostream> 
#include <stack> 
using namespace std; 
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<int> X;
		X.push(-1);
		int count = 0;
		for (int i = 0; i < s.length(); i++) {
			if (s[i] == '(')X.push(i);
			else {
				X.pop();
				if (X.size()>0) {
					
					count = max(count, i - X.top());
				}
				if (X.empty())X.push(i);
			}
		}
		cout << count << endl;
	}
}
DSA07045 - GÕ BÀN PHÍM
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	string s; cin >> s;
	stack<char> X, Y;
	for (int i = 0; i < s.length(); i++) {
		if (s[i] == '<') {
			if (X.size()) {
				Y.push(X.top());
				X.pop();
			}
		}
		else if (s[i] == '>') {
			if (Y.size()) {
				X.push(Y.top());
				Y.pop();
			}
		}
		else if (s[i] == '-') {
			if (X.size())
				X.pop();
		}
		else X.push(s[i]);
	}
	while (X.size()) {
		Y.push(X.top());
		X.pop();
	}
	while (Y.size()) {
		cout << Y.top();
		Y.pop();
	}
}
DSA06009 - CẶP SỐ TỔNG BẰNG K
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
#include<climits>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int M[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int cnt = 0;
		for (int i = 0; i < n; i++)
			for (int j = i + 1; j < n; j++)
				if (M[i] + M[j] == k)cnt++;
		cout << cnt << endl;
	}
}
DSA03020 - BIỂU THỨC ĐÚNG
#include<iostream>
using namespace std;
#define mod 1000000007
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		int a = 0, b = 0;
		int res = 0;
		for (int i = 0; i < s.length(); i++) {
			if (s[i] == '[')a++;
			else b++;
			if (b > a) {
				for (int j = i + 1; j < s.length(); j++) {
					if (s[j] != s[i]) {
						res += j - i;
						a++; b--;
						swap(s[i], s[j]);
						break;
					}
				}
			}
		}
		cout << res << endl;
	}
}
DSA06046 - CHÊNH LỆCH NHỎ NHẤT
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100001];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		int res = INT_MAX;
		for (int i = 0; i < n - 1; i++)res = min(res, (M[i + 1]) - M[i]);
		cout << res <<endl;
	}
}
DSA03023 - SẮP XẾP VIÊN BI
#include<iostream>
using namespace std;
#define mod 1000000007
int main() {
	int n; cin >> n;
	string s; cin >> s;
	int x=0, t=0, d=0;
	for (int i = 0; i < n; i++)
		if (s[i] == 'X')x++;
		else if (s[i] == 'T')t++;
		else d++;
	int dem = 0;
	for (int i = n - d; i < n; i++)
		if (s[i] != 'D')dem++;
	for (int i = 0; i < x; i++)
		if (s[i] != 'X')dem++;
	int a = 0, b = 0;
	for (int i = n - d; i < n; i++)
		if (s[i] == 'X')a++;
	for (int i = 0; i < x; i++)
		if (s[i] == 'D')b++;
	cout << dem - min(a, b) << endl;
}
DSAKT053 - SỐ NGUYÊN LỚN.cpp
#include<iostream>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string a, b; cin >> a >> b;
		int dp[1001][1001] = { 0 };
		for (int i = 1; i <= a.length(); i++) {
			for (int j = 1; j <= b.length(); j++) {
				if (a[i - 1] == b[j - 1])dp[i][j] = dp[i - 1][j - 1] + 1;
				else dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
			}
		}
		cout << dp[a.length()][b.length()] << endl;
	}
}
DSA02001 - DÃY SỐ 1.cpp
#include<iostream>
#include<vector>
using namespace std;


int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int x = n;
		int M[10000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int y = 0;
		while (x--) {
			cout << "[";
			for (int i = y; i < n - 1; i++)cout << M[i] << " ";
			cout << M[n - 1] << "]\n";
			y++;
			for (int i = n - 1; i >= 1; i--) {
				M[i] += M[i - 1];
			}
			
		}
	}
}
DSA06023 - SẮP XẾP ĐỔI CHỖ TRỰC TIẾP
#include<iostream>
#include<cmath>
using namespace std;
int main() {
	int n; cin >> n;
	int M[100000];
	for (int i = 0; i < n; i++)cin >> M[i];
	int x = 1;
	for (int i = 0; i < n - 1; i++) {
		for (int j = i + 1; j < n; j++) {
			if (M[i] > M[j]) {
				swap(M[i], M[j]);
				
			}
		}
		cout << "Buoc " << x++ << ": ";
		for (int l = 0; l < n; l++)cout << M[l] << " ";
		cout << endl;
	}
}
DSA04030 - SỐ TRIBONACCI.cpp
#include<iostream>
using namespace std;
typedef long long ll;
ll MOD = 1000000000000007;
ll M[5] = { 1,3,6,12,23 };
struct matran {
	ll f[4][4] = {
		{1,0,0,0},
		{0,1,1,0},
		{1,1,0,1},
		{0,1,0,0}};
};
ll Mul(ll a, ll b) {
	if (b <= 1)return a%MOD * b;
	ll tmp = Mul(a, b / 2);
	if (b % 2 == 0)return tmp % MOD + tmp % MOD;
	else return tmp % MOD + tmp % MOD + a % MOD;
}
matran operator*(matran A, matran B) {
	matran C;
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			C.f[i][j] = 0;
			for (int k = 0; k < 4; k++) {
				C.f[i][j] = C.f[i][j] % MOD + Mul(A.f[i][k],B.f[k][j]) % MOD;
				C.f[i][j] %= MOD;
			}
		}
	}
	return C;
}
matran Pow(matran X, ll k) {
	if (k == 1)return X;
	matran tmp = Pow(X, k / 2);
	if (k % 2 == 0)return tmp * tmp;
	else return tmp * tmp * X;
}
ll Tribonaci(ll n) {
	if (n <= 5)return M[n - 1];
	matran X;
	matran S = Pow(X, n+2);
	return S.f[2][0] - 1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		ll n; cin >> n;
		cout << Tribonaci(n) << endl;
	}
}
DSA06021 - TÌM KIẾM TRONG DÃY SẮP XẾP VÒNG
#include<iostream>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		long long n, x, a;
		cin >> n >> x;
		for (long long i = 0; i < n; i++) {
			cin >> a;
			if (a == x)cout << i + 1 << endl;
		}
	}
}
DSA07002 - NGĂN XẾP 2
#include<iostream>
#include<stack>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	string s;
	int n;
	stack<int>nx;
	while (t--) {
		cin >> s;
		if (s == "PUSH") {
			cin >> n;
			nx.push(n);
		}
		else if (s == "POP" && !nx.empty())nx.pop();
		else if (s == "PRINT") {
			if (!nx.empty())cout << nx.top() << endl;
			else cout << "NONE" << endl;
		}
	}
}
DSA07018 - TỔNG ĐA THỨC
#include<iostream>
#include<algorithm>
#include<set>
#include<vector>
#include<sstream>
#include<string>
using namespace std;
bool cmp(pair<int, int> A, pair<int, int> B) {
	return A.second > B.second;
}
int main() {
	int t; cin >> t;
	cin.ignore();
	while (t--) {
		string a, b; 
		getline(cin, a);
		getline(cin, b);
		for (int i = 0; i < a.length(); i++)if (a[i] == '+')a[i] = ' ';
		for (int i = 0; i < b.length(); i++)if (b[i] == '+')b[i] = ' ';
		stringstream m(a), n(b);
		string token;
		vector<pair<int,int>> M, N;
		set<int> X;
		while (m >> token) {
			int i = token.find("*x^");
			M.push_back({ stoi(token.substr(0,i)),stoi(token.substr(i + 3)) });
			X.insert(stoi(token.substr(i + 3)));
		}
		while (n >> token) {
			int i = token.find("*x^");
			N.push_back({ stoi(token.substr(0,i)),stoi(token.substr(i + 3)) });
		}
		for (int i = 0; i < M.size(); i++) {
			for (int j = 0; j < N.size(); j++) {
				if (N[j].second == M[i].second)M[i].first += N[j].first;
			}
		}
		for (auto x : N) {
			if (X.count(x.second) == 0)M.push_back(x);
		}
		sort(M.begin(), M.end(), cmp);
		for (int i = 0; i < M.size() - 1; i++) {
			cout << M[i].first << "*x^" << M[i].second << " + ";
		}
		cout << M[M.size() - 1].first << "*x^" << M[M.size() - 1].second << endl;
	}
}
DSA06024 - SẮP XẾP CHỌN
#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	int M[1000];
	for (int i = 0; i < n; i++)cin >> M[i];
	for (int i = 0; i < n-1; i++) {
		int minn = i;
		for (int j = i + 1; j < n; j++) {
			if (M[minn] > M[j])minn = j;
		}
		swap(M[minn], M[i]);
		cout << "Buoc " << i + 1 << ": ";
		for (int l = 0; l < n; l++)cout << M[l] << " ";
		cout << endl;
	}
}
DSA03004 - TỔNG NHỎ NHẤT
#include<iostream>
#include<string>
#include <algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[10000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n);
		long long a=0, b=0;
		for (int i = 0; i < n; i++)
			if (i % 2 == 0)a = a * 10 + M[i];
			else b = b * 10 + M[i];
		cout << (long long)(a+b )<< endl;
	}
}
DSA01010 - TẬP QUÂN SỰ.cpp
#include<iostream>
using namespace std;

bool ok;
void sinh(int*M,int n,int k) {
	int i = k;
	while (M[i] == n - k + i)i--;
	if (i < 1)ok = true;
	else {
		M[i]++;
		for (int j = i + 1; j <= k; j++)M[j] = M[j - 1] + 1;
	}
}

int main() {
	int t; cin >> t;
	while (t--) {
		ok = false;
		int n, k; cin >> n >> k;
		int M[1000], N[1000];
		for (int i = 1; i <= k; i++)cin >> M[i], N[i] = M[i];
		sinh(M, n, k);
		if (ok)cout << k << endl;
		else {
			int count = 0;
			for (int i = 1; i <= k; i++)
				for (int j = 1; j <= k; j++)
					if (M[i] == N[j])count++;
			cout << k - count << endl;
		}
	}
}
DSA02038 - DÃY CON CÓ K PHẦN TỬ TĂNG DẦN.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(int) M(n); cin(M, n);
		sort(all(M));
		string s = string(k, '0') + string(n - k, '1');
		do {
			FOR(i, 0, n)if (s[i] == '0')cout << M[i] << " ";
			cout << endl;
		} while (next_permutation(all(s)));
	}
}

//__________________________B20DCPT173__________________________//
DSA08008 - SỐ BDN 2
#include<iostream>
#include<string>
#include<sstream>
#include<queue>
using namespace std;
typedef long long int ll;
ll str(string s) {
	ll x = 0;
	for (int i = 0; i < s.length(); i++)
		x = x * 10 + s[i] - 48;
	return x;
}

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		queue<string> p;
		p.push("1");
		while (1) {
			string s = p.front();
			string a = s + "0";
			string b = s + "1";
			if (str(a) % n == 0) {
				cout << a << endl; break;
			}
			if (str(b) % n == 0) {
				cout << b << endl; break;
			}
			p.pop();
			p.push(a);
			p.push(b);
		}
	}
}
DSA09006 - ĐƯỜNG ĐI THEO DFS VỚI ĐỒ THỊ VÔ HƯỚNG
#include<iostream>
#include<string.h>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<map>
using namespace std;
vector<int> A[1001];
bool check[1001];
bool ok;
string res;
int m, n, u, v;
void DFS(int a, string s) {
	check[a] = true;
	for (auto b : A[a]) {
		if (!check[b]) {
			if (b == v) {
				ok = true;
				res = s + " " + to_string(b);
			}
			DFS(b, s + " " + to_string(b));
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		for (int i = 0; i < 1001; i++)A[i].clear();
		memset(check, false, sizeof(check));
		ok = false;
		res = "";
		cin >> m >> n >> u >> v;
		for (int i = 0; i < n; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		DFS(u,to_string(u));
		if (!ok)cout << -1 << endl;
		else cout << res << endl;
	}
}
DSA05046 - LŨY THỪA BẬC K.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
	using namespace std;

//_______________________T_O_A_N________________________//

ll n, k;
ll C[1050][1050];

ll Pow(ll a, ll n) {
	if (n == 1) return a % mod;
	ll tmp = Pow(a, n / 2);
	if (n % 2) return ((tmp % mod * tmp % mod) % mod) * a % mod;
	return (tmp % mod * tmp % mod) % mod;
}

void to_hop() {
	FOR(i, 0, 1050) {
		FOR(j, 0, i + 1) {
			if (j == 0 || i == j)C[i][j] = 1;
			else C[i][j] = C[i - 1][j - 1] % mod + C[i - 1][j] % mod;
			C[i][j] %= mod;
		}
	}
}

ll Load(ll n, ll k) {
	if (k == 0)return n % mod;
	ll dp[1050];
	dp[0] = n % mod;
	n %= mod;
	ll tmp = n + 1;
	FOR(i, 1, k + 1) {
		tmp = (tmp * (n + 1) % mod) % mod;
		dp[i] = (tmp - 1 + mod) % mod;
		ll sum = 0;
		FOR(j, 0, i)sum = (sum % mod + (dp[j] % mod * C[i + 1][i - j + 1] % mod) % mod) % mod;
		sum %= mod;
		dp[i] = (dp[i] + mod - sum) % mod;
		dp[i] = dp[i] * Pow(i + 1, mod - 2) % mod;
		dp[i] %= mod;
	}
	return dp[k];
}

int main() {
	faster();
	to_hop();
	run() {
		cin >> n >> k;
		cout << Load(n, k) << endl;
	}
}
//_______________________T_O_A_N________________________//
CTDL_003 - PHƯƠNG ÁN TỐI ƯU.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	int n, s; cin >> n >> s;
	v(int) N(n), W(n);
	cin(N, n); cin(W, n);
	int sum = 0;
	string res;
	FOR(i, 0, pow(2, n)) {
		auto x = bitset<20>(i).to_string();
		x = x.substr(20 - n, n);
		int sumn = 0, sumw = 0;
		FOR(i, 0, n)if (x[i] == '1')sumn += N[i], sumw += W[i];
		if (sumw <= s && sumn >= sum)sum = sumn, res = x;
	}
	cout << sum << endl;
	cout(res, n);
}


//_________________________B20DCPT173__________________________//
DSA04002 - LŨY THỪA ĐẢO
#include <iostream>
using namespace std;
typedef long long ll;
ll mod = 1e9+7;
ll dao(ll n) {
	ll x = 0;
	while (n) {
		x = x * 10 + n % 10;
		n /= 10;
	}
	return x;
}
ll pow(ll n, ll k) {
	if (k == 0)return 1;
	ll tmp = pow(n, k / 2);
	if (k % 2 == 0)return (tmp * tmp) % mod;
	else return ((tmp * tmp) % mod * n)%mod;
}
int main() {
	int t; cin >> t;
	while (t--) {
		ll a; cin >> a;
		cout << pow(a, dao(a)) << endl;
	}
}
DSA05019 - HÌNH VUÔNG LỚN NHẤT
#include<iostream>
#include<cmath>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		int M[501][501], N[501][501];
		for (int i = 1; i <= m; i++)
			for (int j = 1; j <= n; j++) {
				cin >> M[i][j];
				N[i][j] = M[i][j];
			}
		for (int i = 2; i <= m; i++)
			for (int j = 1; j <= n; j++)
				if(M[i][j])
				M[i][j] += M[i - 1][j];
		for (int i = 1; i <= m; i++)
			for (int j = 2; j <= n; j++)
				if(N[i][j])
				N[i][j] += N[i][j - 1];
		int res = 0;
		for (int i = 1; i <= m; i++) {
			for (int j = 1; j <= n; j++) {
				if(M[i][j]!=0)
				for (int l = 0; l <= min(n - j, m - i);l++) {
					if (M[i + l][j] > l && N[i][j + l] > l && M[i + l][j + l] > l && N[i + l][j + l] > l)res = max(res, l + 1);
					else break;
				}
			}
		}
		cout << res << endl;
	}
}
DSA07011 - BIẾN ĐỔI HẬU TỐ - TIỀN TỐ
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<string> S;
		for (int i = 0; i <s.size(); i++) {
			if (s[i] >= 'A' && s[i] <= 'Z')S.push(string(1, s[i]));
			else {
				string a = S.top(); S.pop();
				string b = S.top(); S.pop();
				S.push(s[i]+b+a);
			}
		}
		cout << S.top() << endl;
	}
}
DSA10015 - KRUSKAL.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m;
bool check[1001];
v(int) A[1001];

struct kru {
	int u, v, w;
};


v(kru) V;

bool cmp(kru a, kru b) {
	return a.w < b.w;
}

void DFS(int u) {
	check[u] = true;
	for (auto x : A[u])if (!check[x])DFS(x);
}

int main() {
	faster();
	run() {
		reset();
		V.clear();
		cin >> n >> m;
		FOR(i, 0, m) {
			kru a; cin >> a.u >> a.v >> a.w;
			V.pb(a);
		}
		sort(all(V), cmp);
		int res = 0;
		for (auto x : V) {
			rs(check, false);
			DFS(x.u);
			if (!check[x.v]) {
				res += x.w;
				A[x.u].push_back(x.v);
				A[x.v].push_back(x.u);
			}
		}
		cout << res << endl;
	}
}


//_______________________T_O_A_N________________________//
DSA10008 - DIJKSTRA.cpp
#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m, s;
bool check[1001];
v(p(int)) A[1001];

void Dijkstra(int s) {
	vector<int> d(n + 10000, 1000000000);
	d[s] = 0;
	neg_pq(p(int)) Q;
	Q.push({ 0,s });
	while (Q.size()) {
		p(int) tmp = Q.top();
		Q.pop();
		for (auto x : A[tmp.second]) {
			if (d[x.first] > x.second+d[tmp.second]) {
				d[x.first] = x.second + d[tmp.second];
				Q.push({d[x.first],x.first});
			}
		}
	}
	FOR(i, 1, n + 1)cout << d[i] << " ";
	cout << endl;
}

int main() {
	faster();
	run() {
		reset();
		cin >> n >> m >> s;
		FOR(i, 0, m) {
			int u, v, w; cin >> u >> v >> w;
			A[u].push_back({ v,w });
			A[v].push_back({ u,w });
		}
		Dijkstra(s);
	}
}

//_______________________T_O_A_N________________________//
DSA09029 - ĐƯỜNG ĐI HAMILTON.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M,n) FORD(i,0,n)cin>>M[i];
#define reset  FORD(i, 0, 1001)A[i].clear(), check[i] = false;
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
using namespace std;

//_______________________T_O_A_N________________________//


int n, m;
bool check[1001];
v(int) A[1001];
bool ok;

void DFS(int u, int count) {
	if (count == n)ok = true;
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x, count + 1);
	}
	check[u] = false;
}

int Haminton() {
	FORD(i, 1, n + 1) {
		memset(check, false, sizeof(check));
		ok = false;
		DFS(i, 1);
		if (ok)return 1;
	}
	return 0;
}

int main() {
	int t; cin >> t;
	while (t--) {
		reset
		cin >> n >> m;
		FORD(i, 0, m) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		cout << Haminton() << endl;
	}
}
DSA08010 - BIẾN ĐỔI SỐ TỰ NHIÊN
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
#include<set>

using namespace std;
typedef long long ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		queue<pair<int, int>> X;
		set<int> S; S.insert(n);
		X.push({ n, 0 });
		while (X.size()) {
			pair<int, int> x = X.front();
			X.pop();
			if (x.first == 1 || x.first == 2) {
				cout << x.second - 1 + x.first << endl;
				break;
			}
			if (S.count(x.first - 1) == 0) {
				X.push({ x.first - 1,x.second + 1 });
				S.insert(x.first - 1);
			}
			for (int i = 2; i * i <= x.first; i++) {
				if (x.first % i == 0 && S.count(x.first / i) == 0) {
					X.push({ x.first / i,x.second + 1 });
					S.insert(x.first / i);
				}
			}
		}
	}
}
DSA03010 - NỐI DÂY 1
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int m; cin >> m;
		multiset<ll> M;
		for (int i = 0; i < m; i++) {
			int n; cin >> n;
			M.insert(n);
		}
		long long sum = 0;
		while (M.size() != 1) {
			ll x = *M.begin();
			M.erase(M.find(*M.begin()));
			ll y = *M.begin();
			M.erase(M.find(*M.begin()));
			sum += (x + y);
			M.insert(x + y);
		}
		cout << sum << endl;
	}
}
DSA02033 - SỐ XA CÁCH.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

bool check(v(int) M) {
	FOR(i, 1, sz(M))if (abs(M[i] - M[i - 1]) == 1)return 0;
	return 1;
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n);
		iota(all(M), 1);
		do {
			if (check(M)) {
			cout(M, sz(M));
				cout << endl;
			}
		} while (next_permutation(all(M)));
	}
}

//__________________________B20DCPT173__________________________//
DSA01007 - XÂU AB CÓ ĐỘ DÀI N.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size()
#define f 				 first
#define s 				 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	run() {
		int n; cin >> n;
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string();
			s = s.substr(20 - n, n);
			for (auto c : s)
				if (c == '0')cout << "A"; 
				else cout << "B";
			cout << " ";
		}
		cout << endl;
	}
}

//_________________________B20DCPT173__________________________//
DSA08021 - DI CHUYỂN TRONG MA TRẬN
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;
typedef long long ll;
typedef pair<int, int> p;
int M[1001][1001];
int m, n;
struct toado {
	int x, y, cnt;
};
int main() {
	int t; cin >> t;
	while (t--) {
		bool check[1001][1001];
		memset(check, true, sizeof(check));
		check[1][1] = false;
		cin >> m >> n;
		int res = 100000;
		for (int i = 1; i <= m; i++)
			for (int j = 1; j <= n; j++)cin >> M[i][j];
		queue<toado> X;
		X.push({ 1,1,0 });
		while (X.size()) {
			toado a = X.front();
			X.pop();
			if (a.x == m && a.y == n) {
				res = min(res, a.cnt);
				break;
			}
			if (a.x > m || a.y > n || a.cnt > res)continue;
			if (check[a.x + M[a.x][a.y]][a.y]) {
				X.push({ a.x + M[a.x][a.y],a.y,a.cnt + 1 });
				check[a.x + M[a.x][a.y]][a.y] = false;
			}
			if (check[a.x][a.y + M[a.x][a.y]]) {
				X.push({ a.x,a.y + M[a.x][a.y],a.cnt + 1 });
				check[a.x][a.y + M[a.x][a.y]] = false;
			}
		}
		if (res == 100000)cout << -1 << endl;
		else
		cout << res << endl;
	}
}
DSA08011 - KHOẢNG CÁCH XÂU KÝ TỰ
#include<iostream>
#include<string>
#include<set>
#include<vector>
#include<queue>
using namespace std;
set<string> X;
int BFS(string a, string b) {
	if (a == b || X.count(b) == 0)return 0;
	int n = a.size();
	queue<pair<string,int>> S;
	S.push({ a,1 });
	while (S.size()) {
		string s = S.front().first;
		int cnt = S.front().second;
		if (s == b)return cnt;
		S.pop();
		for (int i = 0; i < n; i++) {
			char c = s[i];
			for (int j = 'A'; j <= 'Z'; j++) {
				s[i] = j;
				if (s == b)return cnt + 1;
				if (X.count(s) != 0) {
					X.erase(s);
					S.push({s,cnt+1});
				}
			}
			s[i] = c;
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		X.clear();
		int n; string a, b;
		cin >> n >> a >> b;
		queue<string> A;
		int cnt = 0;
		while (n--) {
			string f; cin >> f;
			if (f != a)
				X.insert(f);
		}
		cout << BFS(a, b) << endl;
	}
}
DSA06016 - TÍCH LỚN NHẤT - NHỎ NHẤT
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
#include<climits>
typedef long long ll;
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		ll x;
		set<ll> S,X;
		while (m--) {
			cin >> x; S.insert(x);
		}
		while (n--) {
			cin >> x; X.insert(x);
		}
		ll res = *S.rbegin() * (*X.begin());
		cout << res << endl;
	}
}
DSA09013 - LIỆT KÊ CẠNH CẦU
#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
using namespace std;
bool chuaxet[1005];
vector<int> k[1005];
vector< pair<int, int> > s;
vector< pair<int, int> > ans;
int v, e, res;
void dfs(int u) {
    chuaxet[u] = true;
    for (int i = 0; i < k[u].size(); i++) {
        int h = k[u][i];
        if (chuaxet[h] == false) {
            dfs(h);
        }
    }
}
void reset() {
    for (int i = 0; i < 1005; i++)
        k[i].clear();
    memset(chuaxet, false, 1005);
}
int tplt() {
    int dem = 0;
    for (int i = 1; i <= v; i++) {
        if (chuaxet[i] == false) {
            dem++;
            dfs(i);
        }
    }
    return dem;
}
void canhcau(int canh) {
    int dem = 0;
    for (int i = 0; i < s.size(); i++) {
        if (i != canh) {
            k[s[i].first].push_back(s[i].second);
            k[s[i].second].push_back(s[i].first);
        }
    }
    dem = tplt();
    if (dem > res) {
        if (s[canh].first < s[canh].second) ans.push_back({ s[canh].first,s[canh].second });
        else ans.push_back({ s[canh].second,s[canh].first });
    }
}
int main() {
    int t;
    cin >> t;
    while (t--) {
        cin >> v >> e;
        reset();
        s.clear();
        ans.clear();
        int start, end;
        for (int i = 0; i < e; i++) {
            cin >> start >> end;
            s.push_back({ start,end });
            k[start].push_back(end);
            k[end].push_back(start);
        }
        res = tplt();
        for (int i = 0; i < s.size(); i++) {
            reset();
            canhcau(i);
        }
        for (int i = 0; i < ans.size(); i++) {
            cout << ans[i].first << " " << ans[i].second << " ";
        }
        cout << endl;
    }
}
DSA06041 - SỐ XUẤT HIỆN NHIỀU NHẤT
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
int test(int* N, int n) {
	for (int i = 0; i <= 1000000; i++) {
		if (N[i] > n / 2)return i;
	}
	return -1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000001];
		for (int i = 0; i < n; i++)cin >> M[i];
		int N[1000001] = { 0 };
		for (int i = 0; i < n; i++)N[M[i]]++;
		if (test(N, n) == -1)cout << "NO" << endl;
		else cout << test(N, n) << endl;
	}
}
DSA06011 - TỔNG GẦN 0 NHẤT
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
#include<climits>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int res = INT_MAX;
		int minnn=INT_MAX;
		for(int i=0;i<n;i++)
			for(int j=i+1;j<n;j++)
				if (abs(M[i] + M[j]) < minnn) {
					minnn = abs(M[i] + M[j]);
					res = M[i] + M[j];
				}
				
		cout << res << endl;
	}
}
DSA02024 - DÃY CON TĂNG DẦN
#include<iostream>
#include<vector>
#include<set>
#include<string>
#include<algorithm>
using namespace std;
int n;
bool ok = false;
vector<string> S;
bool ktra(vector<int> M, int n,int*N) {
	int cnt=0;
	vector<int> C;
	for (int i = 0; i < n; i++)
		if (N[i] == 1)C.push_back(M[i]);
	if (C.size() < 2)return false;
	for (int i = 1; i < C.size(); i++)
		if (C[i] <= C[i - 1])return false;
	return true;
}
void sinh(int*M,int n) {
	int a = 0;
	for (int i = n - 1; i >= 0; i--) {
		if (M[i] == 0) {
			a = 1;
			M[i] = 1;
			for (int j = i + 1; j < n; j++)M[j] = 0;
			break;
		}
	}
	if (a == 0)ok = true;
}
int main() {
	cin >> n;
	vector<int> M(n);
	for (int i = 0; i < n; i++)cin >> M[i];
	int N[100] = { 0 };
	while (!ok) {
		if (ktra(M, n,N)) {
			string s="";
			for (int i = 0; i < n; i++) {
				if (N[i] == 1)s += to_string(M[i]) + " ";
			}
			S.push_back(s);
		}
		sinh(N, n);
	}
	sort(S.begin(), S.end());
	for (string s : S)cout << s << endl;
}
DSA01005 - SINH HOÁN VỊ.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n);
		FOR(i, 0, n)M[i] = i + 1;
		do {
			cout(M, n);
			cout << " ";
		} while (next_permutation(all(M)));
		cout << endl;
	}


}


//_______________________T_O_A_N________________________//
DSA06007 - SẮP XẾP DÃY CON LIÊN TỤC
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<int> M(n);
		for (int i = 0; i < n; i++)cin >> M[i];
		int i = 0;
		while (M[i + 1] >= M[i])i++;
		int j = n - 1;
		while (M[j - 1] <= M[j])j--;
		int max = 0, min = 1000000;
		for (int l = i; l <= j; l++) {
			if (M[l] < min)min = M[l];
			if (M[l] > max)max = M[l];
		}
		int a = i;
		for (int l = i; l >= 0; l--) {
			if (M[l] > min)
				a = l;
		}
		int b = j;
		for (int l = j; l < n; l++) {
			if (M[l] < max)
				b = l;
		}
		cout << a + 1 << " " << b + 1 << endl;
	}
}
DSA08005 - SỐ NHỊ PHÂN TỪ 1 ĐẾN N
#include<iostream>
#include<queue>
#include<string>
using namespace std;
string coso(int n) {
	string s;
	while (n) {
		s = to_string(n % 2) + s;
		n /= 2;
	}
	return s;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		for (int i = 1; i <= n; i++) {
			cout << coso(i) << " ";
		}
		cout << endl;
	}
}
DSA05004 - DÃY CON TĂNG DÀI NHẤT
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;

int main() {
	int n; cin >> n;
	int M[10000], dp[10000];
	for (int i = 0; i < n; i++) {
		cin >> M[i];
		dp[i] = 1;
	};
	int res = 1;
	for (int i = 0; i < n; i++) {
		int maxx = 0;
		for (int j = 0; j < i; j++) {
			if (M[j] < M[i])maxx = max(maxx, dp[j]);
		}
		dp[i] += maxx;
		res = max(res, dp[i]);
	}
	cout << res << endl;
}
DSA09031 - CHÚ CỪU XA CÁCH.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll			 long long
#define	p(x)		 pair<x,x> 
#define v(x)		 vector<x>
#define FORD(i,l,r)  for(int i=l;i<r;i++)
#define FORE(i,l,r)  for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M,n)	 FORD(i,0,n)cin>>M[i]
#define cout(M,n)	 FORD(i,0,n)cout<<M[i]
#define rs(M,x)		 memset(check,x,sizeof(check))
#define reset()		 FORD(i, 0, 1001)A[i].clear()
#define run()		 int t; cin >> t; while (t--)
#define pq(x )		 priority_queue<x>
#define neg_pq(x)	 priority_queue<x, vector<x>, greater<x>>
#define all(M)		 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m, k;
bool check[1001][1001];
v(int) A[1001];
int dx[4] = { -1,1,0,0 };
int dy[4] = { 0,0,1,-1 };
set<p(p(int))> S;
v(p(int)) X;

void DFS(p(int) u) {
	check[u.first][u.second] = true;
	FORD(i, 0, 4) {
		int x = u.first + dx[i];
		int y = u.second + dy[i];
		if (correct(x-1,y-1,n,n)&&!check[x][y] && S.count({u,{x,y}}) == 0)DFS({x,y});
	}
}


int main() {
	
	cin >> n >> k >> m;
	FORD(i, 0, m) {
		int a, b, c, d; cin >> a >> b >> c >> d;
		S.insert({ {a,b},{c,d} });
		S.insert({ {c,d},{a,b} });
	}
	FORD(i, 0, k) {
		int a, b; cin >> a >> b;
		X.push_back({ a,b });
	}
	int count = 0;
	for (auto x : X) {
		rs(check, false);
		DFS(x);
		for (auto y : X) {
			if (!check[y.first][y.second])count++;
		}
	}
	cout << count / 2 << endl;
	
}


//_______________________T_O_A_N________________________//
DSA06003 - ĐỔI CHỖ ÍT NHẤT
#include<iostream>
#include<string>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		int M[100000];
		for (int i = 0; i < n; i++)
			cin >> M[i];
		int k,res = 0;
		for (int i = 0; i < n - 1; i++)
		{
			k = i;
			for (int j = i + 1; j < n; j++)
				if (M[j] < M[k])
					k = j;
			if (k != i)
				res++;
			swap(M[k], M[i]);
		}
		cout << res << endl;
	}
}
DSA06005 - HỢP VÀ GIAO CỦA HAI DÃY SỐ 2
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int m, n; cin >> m >> n;
		vector<int> M(m), N(n);
		set<int> S, X, Y;
		for (int i = 0; i < m; i++) {
			cin >> M[i];
			S.insert(M[i]);
			X.insert(M[i]);
		}
		for (int i = 0; i < n; i++) {
			cin >> N[i];
			S.insert(N[i]);
			Y.insert(N[i]);
		}
		for (auto x : S)cout << x << " ";
		cout << endl;
		for (auto x : X)if (Y.count(x) != 0)cout << x << " ";
		cout << endl;
	}
}
DSA02008 - CHỌN SỐ TỪ MA TRẬN VUÔNG CẤP N.cpp
#include<bits/stdc++.h>
#define mod				 1000000007
#define ll				 long long
#define	p(x)			 pair<x,x>
#define v(x)			 vector<x>
#define tree			 node*
#define sz(a)			 a.size()
#define f 				 first
#define s 				 second
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1000001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//


int main() {
	faster();
	int n, k; cin >> n >> k;
	int M[100][100];
	FOR(i, 0, n )FOR(j, 0, n )cin >> M[i][j];
	v(int) X(n);
	iota(all(X), 0);
	v(v(int)) res;
	do {
		int sum = 0;
		FOR(i, 0, n )sum += M[i][X[i]];
		if (sum == k)res.pb(X);
	} while (next_permutation(all(X)));
	cout << sz(res) << endl;
	for (auto x : res) {
		FOR(i, 0, n)cout << x[i] + 1 << " ";
		cout << endl;
	}
}

//_________________________B20DCPT173__________________________//
DSA03013 - SẮP ĐẶT XÂU KÝ TỰ 2
#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
typedef long long int ll;
int main() {
	int t; cin >> t;
	while (t--) {
		int d; cin >> d;
		string s; cin >> s;
		int M[1000] = { 0 };
		for (auto a : s)M[a]++;
		int cnt = 0;
		for (int i = 'A'; i <= 'Z'; i++)cnt = max(cnt, M[i]);

		if (s.length() % d == 0) {
			if (cnt > s.length() / d)cout << -1;
			else cout << 1;
		}
		else {
			if (cnt > s.length() / d+1)cout << -1;
			else cout << 1;
		}
		cout << endl;
	}
}
DSA09007 - ĐƯỜNG ĐI THEO BFS TRÊN ĐỒ THỊ VÔ HƯỚNG
#include<iostream>
#include<string.h>
#include<string>
#include<stack>
#include<vector>
#include<queue>
#include<map>
using namespace std;
vector<int> A[1001];
bool check[1001];
bool ok;
string res;
int m, n, u, v;
void BFS(int a) {
	queue<pair<int, string>>X;
	X.push({ a,to_string(a) });
	while (X.size()) {
		pair<int, string> x = X.front();
		X.pop();
		check[x.first] = true;
		for (auto b : A[x.first]) {
			if (!check[b]) {
				check[b] = true;
				if (b == v) {
					ok = true;
					res = x.second + " " + to_string(b);
				}
				X.push({ b,x.second + " " + to_string(b)});
			}
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		for (int i = 0; i < 1001; i++)A[i].clear();
		memset(check, false, sizeof(check));
		ok = false;
		res = "";
		cin >> m >> n >> u >> v;
		for (int i = 0; i < n; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		BFS(u);
		if (!ok)cout << -1 << endl;
		else cout << res << endl;
	}
}
DSA07110 - KIỂM TRA DÃY NGOẶC ĐÚNG
#include <iostream>
#include <stack>
#include<string>
using namespace std;
string ktra(string s) {
	stack<char> X;
	for (auto x : s) {
		if (X.empty() || x == '(' || x == '[' || x == '{')X.push(x);
		else {
			if (x == ')') {
				if (X.top() == '('&&x==')')X.pop();
				else return "NO\n";
			}
			if (x == ']') {
				if (X.top() == '[')X.pop();
				else return "NO\n";
			}
			if (x == '}') {
				if (X.top() == '{')X.pop();
				else return "NO\n";
			}
		}
	}
	if (X.size())return "NO\n";
	return "YES\n";
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << ktra(s);
	}
}
DSA05041 - BIẾN ĐỔI VỀ XÂU ĐỐI XỨNG.cpp
#include<iostream>
#include<string.h>
using namespace std;
int load(string s, int n) {
	int dp[100][100];
	memset(dp, 0, sizeof(dp));
	for (int i = 0; i < n; i++)dp[i][i] = 1;
	for (int i = n - 1; i >= 0; i--) {
		for (int j = i + 1; j < n; j++) {
			if (s[i] == s[j])dp[i][j] += dp[i + 1][j - 1] + 2;
			else dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);
		}
	}
	return n-dp[0][n - 1];
}
int main() {
	int t; cin >> t;
	
	while (t--) {
		string s; cin >> s;
		cout << load(s, s.length()) << endl;
	}
}
DSA03033 - ATM THẾ HỆ MỚI
#include<iostream>
#include<vector>
#include<set>
#include<string>
#include<algorithm>
#include<climits>
#include<cmath>
using namespace std;
typedef long long ll;
ll M[4] = { 1000,2000,3000,5000 };
ll n;
int c;
vector<ll> X, Y;
void reset() {
	X.clear();
	Y.clear();
}
void init() {
	int x = 0;
	while (x <= c) {
		for (int i = 0; i < 4; i++) {
			ll a = M[i] * pow(10, x);
			X.push_back(a);
		}
		x++;
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		cin >> n; cin >> c;
		reset();
		if (n % 1000 != 0)cout << 0 << endl;
		else {
			init();
			reverse(X.begin(), X.end());
			vector<pair<ll, ll>> M;
			ll cnt1 = 0;
			for (auto x : X) {
				M.push_back({ x,n / x });
				cnt1 += n / x;
				n %= x;
			}
			ll cnt2 = 1;
			ll y = 1;
			for (int i = c; i >= 0; i--) {
				vector<pair<ll, ll>> N;
				for (auto x : M) {
					if (to_string(x.first).length() - 4 == i) {
						N.push_back(x);
					}
				}

				ll a = pow(10, i);
				ll b = INT_MAX, c = INT_MAX;
				ll m = 5000 * a, n = 3000 * a, p = 1000 * a, q = 2000 * a;
				for (auto x : N) {
					if (x.first == m || x.first == p)b = min(b, x.second);
				}
				for (auto x : N) {
					if (x.first == n || x.first == p)c = min(c, x.second);
				}
				if (b + c >= 1)
				cnt2 *= (b + c+1);
			}
			cout << cnt1 << " " << cnt2 << endl;
		}
	}
}
DSA01024 - ĐẶT TÊN - 1.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	int n, k; cin >> n >> k;
	v(string) M(n); cin(M, n);
	sort(all(M));
	M.erase(unique(all(M)), M.end());
	n = sz(M);
	string s = string(k, '0') + string(n - k, '1');
	do {
		FOR(i, 0, n)if (s[i] == '0')cout << M[i] << " ";
		cout << endl;
	} while (next_permutation(all(s)));

}
//_________________________B20DCPT173__________________________//
DSA06025 - SẮP XẾP CHÈN
#include<iostream>
#include<cmath>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	int M[1000];
	for (int i = 0; i < n; i++)cin >> M[i];
	for (int i = 1; i <= n; i++) {
		sort(M, M + i);
		cout << "Buoc " << i-1 << ": ";
		for (int j = 0; j < i; j++)cout << M[j] << " ";
		cout << endl;
	}
	
}
DSA11023 - ĐỘ SÂU CÂY NHỊ PHÂN TÌM KIẾM.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<map>
#include<stack>
#include<queue>
#define mod				 1000000007
#define ll				 unsigned long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define tree			 node*
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//

struct node {
	int data;
	node* pLeft;
	node* pRight;
	node(int x) {
		this->data = x;
		pLeft = pRight = NULL;
	}
};

void Add(tree& T, int x) {
	if (!T)T = new node(x);
	else {
		if (x < T->data)Add(T->pLeft, x);
		else Add(T->pRight, x);
	}
}
int res = 0;

void Load(tree T, int count) {
	if (!T->pLeft && !T->pRight)res = max(res, count);
	else {
		if (T->pLeft)Load(T->pLeft, count + 1);
		if (T->pRight)Load(T->pRight, count + 1);
	}

}
int main() {
	faster();
	run() {
		int n; cin >> n;
		tree T = NULL;
		while (n--) {
			int x; cin >> x;
			Add(T, x);
		}
		res = 0;
		Load(T, 0);
		cout << res << endl;
	}
	return 0;
}



//_______________________T_O_A_N________________________//
DSA08019 - SỐ LỘC PHÁT 3
#include<iostream>
#include<string>
#include<sstream>
#include<queue>
#include<vector>
using namespace std;
typedef long long int ll;
vector<string> res;

int main() {
	int t; cin >> t;
	while (t--) {
		res.clear();
		int n; cin >> n;
		queue<string> S;
		S.push("6");
		S.push("8");
		int l = 0;
		while (l<=n) {
			string s = S.front();
			S.pop();
			res.push_back(s);
			S.push(s + "6");
			S.push(s + "8");
			l = S.front().length();
		}
		cout << res.size() << endl;
		for (int i = res.size() - 1; i >= 0; i--)cout << res[i] << " ";
		cout << endl;
	}
}
DSA04025 - DÃY SỐ VÔ HẠN
#include <iostream>
using namespace std;
long long a, b, c, d;
#define MOD 1000000007
void Fibo(int n, long long M[])
{
    if (n == 0) {
        M[0] = 0;
        M[1] = 1;
        return;
    }
    Fibo((n / 2), M);
    a = M[0];
    b = M[1];
    c = 2 * b - a;
    if (c < 0)
        c += MOD;
    c = (a * c) % MOD;
    d = (a * a + b * b) % MOD;
    if (n % 2 == 0) {
        M[0] = c;
        M[1] = d;
    }
    else {
        M[0] = d;
        M[1] = c + d;
    }
}
int main()
{
    int t; cin >> t;
    while (t--) {
        int n; cin >> n;
        long long M[2] = { 0,1 };
        Fibo(n, M);
        cout << M[0] << endl;
    }
}
CTDL_006 - LỌC DỮ LIỆU TRÙNG TRONG DSLK ĐƠN
#include <iostream>
#include<unordered_set>
using namespace std;


int main()
{
	int n; cin >> n;
	int M[10000];
	bool check[10000] = { false };
	unordered_set<int> X;
	for (int i = 0; i < n; i++) {
		cin >> M[i];
	}
	for(int i=0;i<n;i++)
		if (!check[M[i]]) {
			cout << M[i] << " ";
			check[M[i]] = true;
		}
}
DSA01001 - XÂU NHỊ PHÂN KẾ TIẾP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	run(){
		string s; cin >> s;
		int pos = s.find_last_of("0");
		if (pos == -1)cout << string(sz(s), '0')<<endl;
		else {
			s[pos] = '1';
			cout << s.substr(0, pos + 1) + string(sz(s) - pos - 1, '0') << endl;
		}
	}
}
//_________________________B20DCPT173__________________________//
DSA10006 - CÂY KHUNG CỦA ĐỒ THỊ THEO THUẬT TOÁN DFS
#include<iostream>
#include<vector>
#include<cstring>

using namespace std;
vector<int> A[1001];
bool check[1001];
vector<pair<int, int>> X;
void reset() {
	for (int i = 0; i < 1001; i++)A[i].clear();
	memset(check, false, sizeof(check));
	X.clear();
}
void DFS(int u) {
	check[u] = true;
	for (int x : A[u]) {
		if (!check[x]) {
			X.push_back({ u,x });
			DFS(x);
		}
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		reset();
		int n, m, k;
		cin >> n >> m >> k;
		for (int i = 0; i < m; i++) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		DFS(k);
		if (X.size() == n - 1) {
			for (int i = 0; i < X.size(); i++) {
				cout << X[i].first << " " << X[i].second << endl;
			}

		}
		else cout << -1 << endl;
	}
}
DSA06026 - SẮP XẾP NỔI BỌT
#include<iostream>
#include<cmath>
#include<vector>
using namespace std;
int main() {
	int n; cin >> n;
	int M[1000];
	int gt = 1;
	for (int i = 0; i < n; i++) cin >> M[i];
	for (int i = 1; i < n; i++) {
		int k = 0;
		for (int j = 0; j < n - 1; j++) {
			if (M[j] > M[j + 1]) {
				swap(M[j], M[j + 1]);
				k++;
			}
		}
		if (k) {
			cout << "Buoc " << gt++ << ": ";
			for (int l = 0; l < n; l++)cout << M[l] << " ";
			cout << endl;
		}
	}
}
DSA01004 - SINH TỔ HỢP.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//



int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		string s = string(k, '0') + string(n - k, '1');
		do {
			FOR(i, 0, n)if (s[i] == '0')cout << i + 1;
			cout << " ";
		} while (next_permutation(all(s)));
		cout << endl;
	}
}
//_________________________B20DCPT173__________________________//
DSA08020 - BIẾN ĐỔI SỐ NGUYÊN TỐ.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define sz(M) M.size();
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
#define pb push_back
#define pf push_front
using namespace std;

//____________________T_O_A_N_______________________//

bool check[10000];

int BFS(string s, string t) {
	queue<pair<string,int>> Q;
	Q.push({ s,0 });
	set<string> S;
	S.insert(s);
	while (Q.size()) {
		pair<string, int> tmp = Q.front(); Q.pop();
		if (tmp.ft == t)return tmp.sd;
		string f = tmp.ft;
		FORD(i, 0, 4) {
			int x = (i == 0) ? 1 : 0;
			FORD(j, x, 10) {
				f[i] = j + '0';
				if (S.count(f) == 0 && !check[stoi(f)])S.insert(f), Q.push({ f,tmp.sd + 1 });
			}
			f = tmp.ft;
		}
	}
	return -1;
}


int main() {
	int t; cin >> t;
	FORD(i, 2, 10000)if (!check[i])for (int j = i * 2; j < 10000; j += i)check[j] = true;
	while (t--) {
		string s, t; cin >> s >> t;
		cout << BFS(s, t) << endl;
	}
	return 0;
}
DSA05029 - GIẢI MÃ
#include<iostream>
using namespace std;
int gm(string s) {
	if (s[0] == '0')return 0;
	int dp[10000] = { 0 };
	dp[0] = dp[1] = 1;
	for (int i = 2; i <= s.length(); i++) {
		if (s[i - 1] > '0')dp[i] = dp[i - 1];
		if (s[i - 2] == '1' || s[i - 2] == '2' && s[i - 1] <= '6')
			dp[i] += dp[i - 2];
	}
	return dp[s.length()];
}
int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		cout << gm(s) << endl;
	}
}
DSA09008 - ĐẾM SỐ THÀNH PHẦN LIÊN THÔNG
#include<iostream>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;
vector<int> A[1001];
bool check[1001];
void reset() {
	for (int i = 0; i < 1001; i++)A[i].clear();
	memset(check, false, sizeof(check));
}
void DFS(int u) {
	check[u] = true;
	for (auto x : A[u]) {
		if (!check[x])DFS(x);
	}
}
int main() {
	int t; cin >> t;
	while (t--) {
		reset();
		int m, n; cin >> m >> n;
		while (n--) {
			int a, b; cin >> a >> b;
			A[a].push_back(b);
			A[b].push_back(a);
		}
		int cnt = 0;
		for (int i = 1; i <= m; i++) {
			if (!check[i]) {
				cnt++;
				DFS(i);
			}
		}
		cout << cnt << endl;
	}
}
DSA06039 - SỐ ĐẦU TIÊN BỊ LẶP
#include<iostream>
#include<set>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
struct XX {
	int a, b;
};
bool cmp(XX A, XX B) {
	return A.a < B.a;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		XX M[100000];
		for (int i = 0; i < n; i++) {
			cin >> M[i].a; M[i].b = i;
		}
		sort(M, M + n, cmp);
		vector<XX> S;
		for (int i = 1; i < n-1; i++) {
			if (M[i].a == M[i - 1].a || M[i].a == M[i + 1].a)S.push_back(M[i]);
		}
		int res = 0;
		int min = INT_MAX;
		for (XX x : S) {
			if (min > x.b) {
				min = x.b;
				res = x.a;
			}
		}
		if (S.size() == 0)cout << "NO\n";
		else
		cout << res << endl;
	}
}
DSA07022 - PHẦN TỬ CÓ SỐ LẦN XUẤT HIỆN NHIỀU HƠN BÊN PHẢI
#include<iostream>
#include<algorithm>
#include<set>
#include<vector>
#include<sstream>
#include<string.h>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		vector<pair<int, int>> M(n);
		int N[10000] = { 0 };
		for (int i = 0; i < n; i++) {
			cin >> M[i].first;
			N[M[i].first]++;
		}
		for (int i = 0; i < n; i++)M[i].second = N[M[i].first];
		vector<int> X(n, 1),S;
		S.push_back(-1);
		for (int i = n - 1; i >= 0; i--) {
			X[i] = 1;
			for (int j = i + 1; j < n;) {
				if (M[i].second >= M[j].second) {
					X[i] += X[j];
					j += X[j];
					if (j >= n) {
						S.push_back(-1);
						break;
					}
				}
				else {
					S.push_back(M[j].first); break;
				}
			}
		}
		reverse(S.begin(), S.end());
		for (auto a : S)cout << a << " ";
		cout << endl;
	}
}
DSA01025 - ĐẶT TÊN 2.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

int main() {
	faster();
	run() {
		int n, k; cin >> n >> k;
		v(char) M(20);
		iota(all(M), 'A');
		string s = string(k, '0') + string(n - k, '1');
		do {
			FOR(i, 0, n)if (s[i] == '0')cout << M[i];
			cout << endl;
		} while (next_permutation(all(s)));
	}
}
//_________________________B20DCPT173__________________________//
DSA10011 - DI CHUYỂN TRÊN BẢNG SỐ.cpp
﻿#include<iostream>
#include<vector>
#include<iomanip>
#include<algorithm>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll				 long long
#define	p(x)			 pair<x,x> 
#define v(x)			 vector<x>
#define pb(a)			 push_back(a)
#define pf(a)			 push_front(a)
#define FOR(i,l,r)		 for(int i=l;i<r;i++)
#define FORX(i,l,r,x)	 for(int i=l;i<r;i+=x)
#define FORD(i,l,r)		 for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)		 FOR(i,0,n)cin>>M[i]
#define cout(M,n)		 FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)		     memset(M,x,sizeof(M))
#define reset()			 FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()		 cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()			 int t; cin >> t; while (t--)
#define pq(x )			 priority_queue<x>
#define neg_pq(x)		 priority_queue<x, vector<x>, greater<x>>
#define all(M)			 M.begin(),M.end()
using namespace std;

//_______________________T_O_A_N________________________//


int n, m;
int M[501][501];
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };

struct edge {
	int x, y, w;
};

bool operator<(const edge& A, const edge& B) {
	if (A.w == B.w) {
		if (A.x == B.x)
			return A.y < B.y;
		else return A.x < B.x;
	}
	return A.w < B.w;
}
int di_Chuyen_Tren_Bang_So() {
	set<edge> S;
	int d[501][501];
	FOR(i, 0, n)FOR(j, 0, m)d[i][j] = 1000000000;
	d[0][0] = M[0][0];
	S.insert({ 0,0,0 });
	while (S.size()) {
		edge tmp = *S.begin();
		S.erase(S.begin());
		FOR(i, 0, 4) {
			int a = tmp.x + dx[i];
			int b = tmp.y + dy[i];
			if (correct(a, b, n, m)) {
				if (d[a][b] > d[tmp.x][tmp.y] + M[a][b]) {
					if (d[a][b] != 1000000000)S.erase(S.find({ a,b,d[a][b] }));
					d[a][b] = d[tmp.x][tmp.y] + M[a][b];
					S.insert({ a,b,d[a][b] });
				}
			}
		}
	}
	return d[n - 1][m - 1];
}

int main() {
	faster();
	run() {
		cin >> n >> m;
		FOR(i, 0, n)FOR(j, 0, m)cin >> M[i][j];
		cout << di_Chuyen_Tren_Bang_So() << endl;
	}
}

//_______________________T_O_A_N________________________//
DSA10004 - ĐƯỜNG ĐI VÀ CHU TRÌNH EULER VỚI ĐỒ THỊ VÔ HƯỚNG.cpp
#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
#include<string.h>
#include<string>
#include<climits>
#include<set>
#include<stack>
#include<queue>
#define ll long long
#define	p(x) pair<x,x> 
#define v(x) vector<x>
#define FORD(i,l,r) for(int i=l;i<r;i++)
#define FORE(i,l,r) for(int i=r-1;i>=0;i--)
#define correct(x,y,n,m) (0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m))
#define cin(M) FORD(i,0,n)cin>>M[i];
#define reset FORD(i, 0, 1001)A[i].clear(), check[i] = false;
#define all(M) M.begin(),M.end()
#define	ft first
#define sd second
#define pb push_back
#define pf push_front
using namespace std;

//____________________T_O_A_N_______________________//

bool check[1001];
v(int) A[1001];

int Euler(int n) {
	int count = 0;
	FORD(i, 1, n + 1)if (A[i].size() % 2 == 1)count++;
	if (count == 2)return 1;
	if (count == 0)return 2;
	return 0;
}

int main() {
	int t; cin >> t;
	while (t--) {
		reset
		int n, m; cin >> n >> m;
		while (m--) {
			int a, b; cin >> a >> b;
			A[a].pb(b), A[b].pb(a);
		}
		cout << Euler(n) << endl;
	}
	return 0;
}
DSA06012 - PHẦN TỬ LỚN NHẤT
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		int M[100000];
		for (int i = 0; i < n; i++)cin >> M[i];
		sort(M, M + n, greater<>());
		for (int i = 0; i < k; i++)cout << M[i] << " ";
		cout << endl;
	}
}
DSA05030 - DI CHUYỂN VỀ GỐC TỌA ĐỘ
#include<iostream>
#include<string.h>
#include<stack>
using namespace std;
int m, n;

int main() {
	int t; cin >> t;
	while (t--) {
		cin >> m >> n;
		long long dp[101][101];
		for (int i = 0; i <= m; i++)for (int j = 0; j <= n; j++)dp[i][j] = 1;
		for (int i = 1; i <= m; i++) {
			for (int j = 1; j <= n; j++)
				dp[i][j] += dp[i - 1][j] + dp[i][j - 1];
		}
		cout << (dp[m][n]+1)/2 << endl; 
	}
}
DSA11001 - CÂY BIỂU THỨC 1.cpp
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<string> S;
		for (int i = 0; i < s.size(); i++) {
			if (s[i] >= 'a' && s[i] <= 'z')S.push(string(1, s[i]));
			else {
				string a = S.top(); S.pop();
				string b = S.top(); S.pop();
				S.push( b + s[i] + a);
			}
		}
		cout << S.top() << endl;
	}
}
DSA04007 - HỆ CƠ SỐ K
#include<iostream>
#include<vector>
#include<string.h>
#include<string>
#include<math.h>
using namespace std;
string chuyen(int k, int n) {
	string res = "";
	while (n) {
		res = to_string(n % k)+res;
		n /= k;
	}
	return res;
}
int chuyen1(int k, string n) {
	int res = 0;
	for (int i = 0; i < n.length(); i++) {
		res = res * k + n[i] - '0';
	}
	return res;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int k; cin >> k;
		string a, b; cin >> a >> b;
		int x = chuyen1(k,a);
		int y = chuyen1(k,b);
		int res = x + y;
		cout << chuyen(k, res) << endl;
	}
}
DSA08001 - CẤU TRÚC DỮ LIỆU HÀNG ĐỢI 1
#include <iostream>
#include <stack>
#include<queue>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int n; cin >> n;
		queue<int> X;
		while (n--) {
			int a; cin >> a;
			if (a == 1)cout << X.size() << endl;
			if (a == 2) {
				if (X.empty())cout << "YES\n";
				else cout << "NO\n";
			}
			if (a == 3) {
				int b; cin >> b; X.push(b);
			}
			if (a == 4) {
				if (X.size())X.pop();
			}
			if (a == 5) {
				if (X.empty())cout << -1 << endl;
				else cout << X.front() << endl;
			}
			if (a == 6) {
				if (X.empty())cout << -1 << endl;
				else cout << X.back() << endl;
			}
		}
	}
}
DSA04006 - ĐẾM SỐ BÍT 1
#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
typedef long long ll;
typedef pair<int, int> p;
vector<ll> X;
ll dem(ll k, ll n, ll pos) {
    if (k % 2 == 1)return 1;
    if (k < X[pos])return dem(k, n / 2, pos - 1);
    else if (k == X[pos]) {
        return n % 2;
    }
    else if (k > X[pos])return dem(2 * X[pos] - k, n / 2, pos - 1);
}
int main() {
    int t; cin >> t;
    while (t--) {
        ll n, l, r; cin >> n >> l >> r;
        X.clear();
        ll x = 1;
        ll y = n;
        while (n / 2 > 0) {
            x *= 2;
            X.push_back(x);
            n /= 2;
        }
        ll res = 0;
        for (ll i = l; i <= r; i++) {
            res += dem(i, y, X.size() - 1);
        }
        cout << res << endl;
    }
}
DSA04020 - TÌM KIẾM NHỊ PHÂN
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int binary_search(vector<int> M, int n,int k) {
	int l = 0, r = n - 1;
	while (l <= r) {
		int m = (l + r) / 2;
		if (M[m] == k)return m+1;
		else if (M[m] < k)l = m + 1;
		else r = m - 1;
	}
	return -1;
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, k; cin >> n >> k;
		vector<int> M(n);
		for (int i = 0; i < n; i++)cin>> M[i];
		int a = binary_search(M,n, k);
		if (a == -1)cout << "NO\n";
		else cout << a << endl;
	}
}
DSA05043 - SỐ THUẬN NGHỊCH.cpp
#include<iostream>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		int res = 0;
		string s; cin >> s;
		int maxx = 1;
		for (int i = 0; i < s.length(); i++) {
			int l = i, r = i;
			while (l >= 0 && r < s.length()) {
				if (s[l] == s[r]) {
					maxx = max(maxx, r - l + 1);
					l--; r++;
				}
				else break;
			}
		}
		for (int i = 0; i < s.length()-1; i++) {
			int l = i, r = i+1;
			while (l >= 0 && r < s.length()) {
				if (s[l] == s[r]) {
					maxx = max(maxx, r - l + 1);
					l--; r++;
				}
				else break;
			}
		}
		cout << maxx << endl;
	}
}
DSA05008 - DÃY CON CÓ TỔNG BẰNG S
#include<iostream>
using namespace std;
string test(int* M, int n, int s) {
	int dp[100000] = { 0 };
	dp[0] = 1;
	for (int i = 0; i < n; i++)dp[M[i]] = 1;
	for (int i = 0; i < n; i++) {
		for (int j = s; j >= M[i]; j--)
			if (dp[j - M[i]] == 1)dp[j] = 1;
	}
	if (dp[s] == 1)return "YES";
	return "NO";
}
int main() {
	int t; cin >> t;
	while (t--) {
		int n, s; cin >> n >> s;
		int M[1000];
		int sum = 0;
		for (int i = 0; i < n; i++) {
			cin >> M[i];
		}
		cout << test(M, n, s) << endl;
	}
}
DSA02034 - TRÒ CHƠI VỚI CÁC CON SỐ.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//_______________________NGUYỄN_NGỌC_TOÀN_______________________//

bool check(v(int) M) {
	FOR(i, 1, sz(M))if (abs(M[i] - M[i - 1]) == 1)return 0;
	return 1;
}

int main() {
	faster();
	run() {
		int n; cin >> n;
		v(int) M(n);
		iota(all(M), 1);
		do {
			if (check(M)) {
			cout(M, sz(M));
				cout << endl;
			}
		} while (next_permutation(all(M)));
	}
}

//__________________________B20DCPT173__________________________//
DSA06013 - SỐ LẦN XUẤT HIỆN
#include<iostream>
#include<set>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	int t; cin >> t;
	while (t--) {
		int n, x; cin >> n >> x;
		int M[1000];
		for (int i = 0; i < n; i++)cin >> M[i];
		int cnt = 0;
		for (int i = 0; i < n; i++)
			if (M[i] == x)cnt++;
		if (cnt == 0)cout << -1 << endl;
		else
		cout << cnt << endl;
	}
}
DSA01017 - MÃ GRAY 3.cpp
#include<bits/stdc++.h>
#define mod              1000000007
#define ll               long long
#define	p(x)             pair<x,x>
#define v(x)             vector<x>
#define tree             node*
#define sz(a)            a.size()
#define f                first
#define s                second
#define pb(a)            push_back(a)
#define pf(a)            push_front(a)
#define FOR(i,l,r)       for(int i=l;i<r;i++)
#define FORX(i,l,r,x)    for(int i=l;i<r;i+=x)
#define FORD(i,l,r)      for(int i=l;i>=r;i--)
#define correct(x,y,n,m) 0<=(x)&&(x)<(n)&&0<=(y)&&(y)<(m)
#define cin(M,n)         FOR(i,0,n)cin>>M[i]
#define cout(M,n)        FOR(i,0,n)cout<<M[i]<<" "
#define rs(M,x)          memset(M,x,sizeof(M))
#define reset()          FOR(i, 0, 1001)A[i].clear(),check[i]=false
#define faster()         cin.tie(0); ios_base::sync_with_stdio(false); cout.tie(0);
#define run()            int t; cin >> t; while (t--)
#define pq(x)            priority_queue<x>
#define neg_pq(x)        priority_queue<x, vector<x>, greater<x>>
#define all(M)           M.begin(),M.end()
using namespace std;

//________________________NGUYỄN_NGỌC_TOÀN________________________//

v(string) M, N;

void Sort(int k, int l1, int r1, int l2, int r2) {
	if (k == 0)return;
	sort(M.begin() + l1, M.begin() + r1);
	sort(M.begin() + l2, M.begin() + r2, greater<string>());
	Sort(k - 1, l1, (l1 + r1) / 2, (l1 + r1) / 2, r1);
	Sort(k - 1, l2, (l2 + r2) / 2, (l2 + r2) / 2, r2);
}

int main() {
	faster();
	run() {
		M.clear();
		N.clear();
		string x; cin >> x;
		int n = sz(x);
		FOR(i, 0, pow(2, n)) {
			auto s = bitset<20>(i).to_string();
			M.pb(s.substr(20 - n, n));
			N.pb(s.substr(20 - n, n));
		}
		int sf = pow(2, n);
		Sort(n, 0,  sf / 2, sf / 2, sf);
		FOR(i, 0, sz(M)) {
			if (N[i] == x) {
				cout << M[i] << endl;
				break;
			}
		}
	}
}

//__________________________B20DCPT173_____________________________//
DSA07009 - BIẾN ĐỔI TIỀN TỐ - TRUNG TỐ
#include<iostream>
#include<stack>
#include<string>
using namespace std;

int main() {
	int t; cin >> t;
	while (t--) {
		string s; cin >> s;
		stack<string> S;
		for (int i = s.size()-1; i >= 0; i--) {
			if (s[i] >= 'A' && s[i] <= 'Z')S.push(string(1, s[i]));
			else {
				string a = S.top(); S.pop();
				string b = S.top(); S.pop();
				S.push("(" + a + s[i] + b + ")");
			}
		}
		cout << S.top() << endl;
	}
}